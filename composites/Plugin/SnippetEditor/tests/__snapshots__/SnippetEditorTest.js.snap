// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SnippetEditor accepts a custom data mapping function 1`] = `
.c7 {
  color: #555;
  border-color: #ccc;
  background: #f7f7f7;
  box-shadow: 0 1px 0 rgba( 204,204,204,1 );
}

.c2 {
  font-size: 0.8rem;
}

.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  vertical-align: middle;
  border-width: 1px;
  border-style: solid;
  margin: 0;
  padding: 4px 10px;
  border-radius: 3px;
  cursor: pointer;
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  font-weight: inherit;
  text-align: left;
  overflow: visible;
  min-height: 32px;
}

.c3 svg {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c4:hover {
  color: #000;
  background-color: #fff;
  border-color: #888;
}

.c5::-moz-focus-inner {
  border-width: 0;
}

.c5:focus {
  outline: none;
  border-color: #0066cd;
  color: #000;
  background-color: #fff;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c6:active {
  color: #000;
  background-color: #f7f7f7;
  border-color: #888;
  box-shadow: inset 0 2px 5px -3px rgba( 0,0,0,0.5 );
}

.c27 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 10px 0 0 4px;
  fill: #555;
  padding-left: 8px;
}

.c27 svg {
  margin-right: 7px;
}

.c10 >:first-child {
  overflow: hidden;
  -webkit-transition: height 300ms ease-out;
  transition: height 300ms ease-out;
}

.c0 {
  max-width: 600px;
  font-weight: normal;
  margin: 0 20px 0 25px;
}

.c1 {
  min-width: 14px;
  min-height: 14px;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  border: 1px solid transparent;
  box-shadow: none;
  display: block;
  margin: -44px -10px 10px 0;
  background-color: transparent;
  float: right;
  padding: 3px 0 0 6px;
}

.c1:hover {
  color: #0066cd;
}

.c1:focus {
  border: 1px solid #0066cd;
  outline: none;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c1:focus svg {
  fill: #0066cd;
  color: #0066cd;
}

.c1:active {
  box-shadow: none;
}

.c8:hover {
  fill: #0066cd;
}

.c11 {
  border-bottom: 1px hidden #fff;
  border-radius: 2px;
  box-shadow: 0 1px 2px rgba(0,0,0,.2);
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  max-width: 600px;
  box-sizing: border-box;
  font-size: 14px;
}

.c13 {
  cursor: pointer;
  position: relative;
}

.c15 {
  color: #1e0fbe;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-size: 18px;
  line-height: 1.2;
  font-weight: normal;
  margin: 0;
  display: inline-block;
  overflow: hidden;
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c14 {
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c16 {
  display: inline-block;
  font-size: 16px;
  line-height: 1.2em;
  max-height: 2.4em;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c17 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
}

.c18 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%;
}

.c21 {
  color: #545454;
  cursor: pointer;
  position: relative;
  max-width: 600px;
  font-size: 13px;
}

.c20 {
  font-size: 14px;
  line-height: 20px;
}

.c12 {
  padding: 8px 16px;
}

.c19 {
  border: 0;
  border-bottom: 1px solid #DFE1E5;
  margin: 0;
}

.c23 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: #555;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 3px 0 0 3px;
}

.c23:hover,
.c23:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c25 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: transparent;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 0 3px 3px 0;
}

.c25:hover,
.c25:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c22 {
  display: inline-block;
  margin-top: 10px;
  border: 1px solid #dbdbdb;
  border-radius: 4px;
  background-color: #f7f7f7;
  vertical-align: top;
}

.c9 {
  width: 16px;
  height: 16px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c24 {
  width: 22px;
  height: 22px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c26 {
  width: 18px;
  height: 18px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

@media all and (-ms-high-contrast:none),(-ms-high-contrast:active) {
  .c3::after {
    display: inline-block;
    content: "";
    min-height: 22px;
  }
}

<div>
  <section>
    <div>
      <div
        className="yoast-help c0"
      >
        <button
          aria-controls={null}
          aria-expanded={false}
          aria-label="Help on the Snippet Preview"
          className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
          onClick={[Function]}
          type="button"
        >
          <svg
            aria-hidden={true}
            className="yoast-svg-icon yoast-svg-icon-question-circle c8 c9"
            fill="#646464"
            focusable="false"
            role="img"
            size="16px"
            viewBox="0 0 1792 1792"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M1024 1376v-192q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23-9t9-23zm256-672q0-88-55.5-163t-138.5-116-170-41q-243 0-371 213-15 24 8 42l132 100q7 6 19 6 16 0 25-12 53-68 86-92 34-24 86-24 48 0 85.5 26t37.5 59q0 38-20 61t-68 45q-63 28-115.5 86.5t-52.5 125.5v36q0 14 9 23t23 9h192q14 0 23-9t9-23q0-19 21.5-49.5t54.5-49.5q32-18 49-28.5t46-35 44.5-48 28-60.5 12.5-81zm384 192q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
            />
          </svg>
        </button>
        <div
          className="c10"
        />
      </div>
    </div>
    <div
      className="c11"
      onMouseLeave={undefined}
      width={640}
    >
      <div
        className="c12"
      >
        <span
          className="screen-reader-text"
          style={
            Object {
              "clip": "rect(1px, 1px, 1px, 1px)",
              "height": "1px",
              "overflow": "hidden",
              "position": "absolute",
              "width": "1px",
            }
          }
        >
          SEO title preview:
        </span>
        <div
          className="c13"
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
        >
          <div
            className="c14 c15"
          >
            <span
              className="c16"
            >
              Totally different title
            </span>
          </div>
        </div>
        <span
          className="screen-reader-text"
          style={
            Object {
              "clip": "rect(1px, 1px, 1px, 1px)",
              "height": "1px",
              "overflow": "hidden",
              "position": "absolute",
              "width": "1px",
            }
          }
        >
          Url preview:
        </span>
        <div
          className="c17"
        >
          <div
            className="c18"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
          >
            example.org â€º totally-different-url
          </div>
        </div>
      </div>
      <hr
        className="c19"
      />
      <div
        className="c12"
      >
        <span
          className="screen-reader-text"
          style={
            Object {
              "clip": "rect(1px, 1px, 1px, 1px)",
              "height": "1px",
              "overflow": "hidden",
              "position": "absolute",
              "width": "1px",
            }
          }
        >
          Meta description preview:
        </span>
        <div
          className="c20 c21"
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
        >
          <div
            className="c20 c21"
          >
            Totally different description
          </div>
        </div>
      </div>
    </div>
  </section>
  <div
    className="c22"
  >
    <button
      aria-pressed={true}
      className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
      onClick={[Function]}
      type="button"
    >
      <svg
        aria-hidden={true}
        className="yoast-svg-icon yoast-svg-icon-mobile c24"
        fill="currentColor"
        focusable="false"
        role="img"
        size="22px"
        viewBox="0 0 1792 1792"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M976 1408q0-33-23.5-56.5t-56.5-23.5-56.5 23.5-23.5 56.5 23.5 56.5 56.5 23.5 56.5-23.5 23.5-56.5zm208-160v-704q0-13-9.5-22.5t-22.5-9.5h-512q-13 0-22.5 9.5t-9.5 22.5v704q0 13 9.5 22.5t22.5 9.5h512q13 0 22.5-9.5t9.5-22.5zm-192-848q0-16-16-16h-160q-16 0-16 16t16 16h160q16 0 16-16zm288-16v1024q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-1024q0-52 38-90t90-38h512q52 0 90 38t38 90z"
        />
      </svg>
      <span
        className="screen-reader-text"
        style={
          Object {
            "clip": "rect(1px, 1px, 1px, 1px)",
            "height": "1px",
            "overflow": "hidden",
            "position": "absolute",
            "width": "1px",
          }
        }
      >
        Mobile preview
      </span>
    </button>
    <button
      aria-pressed={false}
      className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
      onClick={[Function]}
      type="button"
    >
      <svg
        aria-hidden={true}
        className="yoast-svg-icon yoast-svg-icon-desktop c26"
        fill="currentColor"
        focusable="false"
        role="img"
        size="18px"
        viewBox="0 0 1792 1792"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M1728 992v-832q0-13-9.5-22.5t-22.5-9.5h-1600q-13 0-22.5 9.5t-9.5 22.5v832q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5zm128-832v1088q0 66-47 113t-113 47h-544q0 37 16 77.5t32 71 16 43.5q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45q0-14 16-44t32-70 16-78h-544q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1600q66 0 113 47t47 113z"
        />
      </svg>
      <span
        className="screen-reader-text"
        style={
          Object {
            "clip": "rect(1px, 1px, 1px, 1px)",
            "height": "1px",
            "overflow": "hidden",
            "position": "absolute",
            "width": "1px",
          }
        }
      >
        Desktop preview
      </span>
    </button>
  </div>
  <button
    aria-expanded={false}
    className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
    onClick={[Function]}
    type="button"
  >
    <svg
      aria-hidden={true}
      className="yoast-svg-icon yoast-svg-icon-edit c9"
      fill={undefined}
      focusable="false"
      role="img"
      size="16px"
      viewBox="0 0 1792 1792"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M491 1536l91-91-235-235-91 91v107h128v128h107zm523-928q0-22-22-22-10 0-17 7l-542 542q-7 7-7 17 0 22 22 22 10 0 17-7l542-542q7-7 7-17zm-54-192l416 416-832 832h-416v-416zm683 96q0 53-37 90l-166 166-416-416 166-165q36-38 90-38 53 0 91 38l235 234q37 39 37 91z"
      />
    </svg>
    Edit snippet
  </button>
</div>
`;

exports[`SnippetEditor activates a field on onMouseUp() and opens the editor 1`] = `
<ErrorBoundary>
  <div>
    <SnippetPreview
      activeField={null}
      breadcrumbs={null}
      date=""
      description="Test description, %%replacement_variable%%"
      hoveredField={null}
      isAmp={false}
      keyword=""
      locale="en"
      mode="mobile"
      onHover={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      title="Test title"
      url="example.org/test-slug"
    />
    <ModeSwitcher
      active="mobile"
      onChange={[Function]}
    />
    <Button
      aria-expanded={true}
      innerRef={[Function]}
      onClick={[Function]}
    >
      <SvgIcon
        icon="edit"
        size="16px"
      />
      Edit snippet
    </Button>
    <React.Fragment>
      <SnippetEditorFields
        activeField={null}
        containerPadding="0 20px"
        data={
          Object {
            "description": "Test description, %%replacement_variable%%",
            "slug": "test-slug",
            "title": "Test title",
          }
        }
        descriptionEditorFieldPlaceholder="Modify your meta description by editing it right here"
        descriptionLengthProgress={
          Object {
            "actual": 42,
            "max": 156,
            "score": 6,
          }
        }
        hoveredField={null}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        recommendedReplacementVariables={Array []}
        replacementVariables={Array []}
        titleLengthProgress={
          Object {
            "actual": 0,
            "max": 600,
            "score": 1,
          }
        }
      />
      <Button
        onClick={[Function]}
      >
        Close snippet editor
      </Button>
    </React.Fragment>
  </div>
</ErrorBoundary>
`;

exports[`SnippetEditor calls callbacks when the editors are focused or changed 1`] = `
.c7 {
  color: #555;
  border-color: #ccc;
  background: #f7f7f7;
  box-shadow: 0 1px 0 rgba( 204,204,204,1 );
}

.c2 {
  font-size: 0.8rem;
}

.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  vertical-align: middle;
  border-width: 1px;
  border-style: solid;
  margin: 0;
  padding: 4px 10px;
  border-radius: 3px;
  cursor: pointer;
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  font-weight: inherit;
  text-align: left;
  overflow: visible;
  min-height: 32px;
}

.c3 svg {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c4:hover {
  color: #000;
  background-color: #fff;
  border-color: #888;
}

.c5::-moz-focus-inner {
  border-width: 0;
}

.c5:focus {
  outline: none;
  border-color: #0066cd;
  color: #000;
  background-color: #fff;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c6:active {
  color: #000;
  background-color: #f7f7f7;
  border-color: #888;
  box-shadow: inset 0 2px 5px -3px rgba( 0,0,0,0.5 );
}

.c27 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 10px 0 0 4px;
  fill: #555;
  padding-left: 8px;
}

.c27 svg {
  margin-right: 7px;
}

.c38 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin-top: 24px;
}

.c10 >:first-child {
  overflow: hidden;
  -webkit-transition: height 300ms ease-out;
  transition: height 300ms ease-out;
}

.c0 {
  max-width: 600px;
  font-weight: normal;
  margin: 0 20px 0 25px;
}

.c1 {
  min-width: 14px;
  min-height: 14px;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  border: 1px solid transparent;
  box-shadow: none;
  display: block;
  margin: -44px -10px 10px 0;
  background-color: transparent;
  float: right;
  padding: 3px 0 0 6px;
}

.c1:hover {
  color: #0066cd;
}

.c1:focus {
  border: 1px solid #0066cd;
  outline: none;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c1:focus svg {
  fill: #0066cd;
  color: #0066cd;
}

.c1:active {
  box-shadow: none;
}

.c8:hover {
  fill: #0066cd;
}

.c32 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
}

.c32 .public-DraftStyleDefault-block {
  line-height: 24px;
}

.c32::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c34 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
}

.c34::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c36 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
  min-height: 72px;
  padding: 2px 6px;
  line-height: 24px;
}

.c36 .public-DraftEditorPlaceholder-root {
  color: #646464;
}

.c36 .public-DraftEditorPlaceholder-hasFocus {
  color: #646464;
}

.c36::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c29 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin: 24px 0 0 0;
}

.c28 {
  padding: 0 20px;
}

.c30 {
  -webkit-flex: 1 1 200px;
  -ms-flex: 1 1 200px;
  flex: 1 1 200px;
  min-width: 200px;
  cursor: pointer;
  font-size: 16px;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 4px 0;
}

.c31 {
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  padding-left: 8px;
  height: 33px;
  border: 1px solid #dbdbdb;
  font-size: 13px;
}

.c31 svg {
  margin-right: 7px;
  fill: #555;
}

.c11 {
  border-bottom: 1px hidden #fff;
  border-radius: 2px;
  box-shadow: 0 1px 2px rgba(0,0,0,.2);
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  max-width: 600px;
  box-sizing: border-box;
  font-size: 14px;
}

.c13 {
  cursor: pointer;
  position: relative;
}

.c15 {
  color: #1e0fbe;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-size: 18px;
  line-height: 1.2;
  font-weight: normal;
  margin: 0;
  display: inline-block;
  overflow: hidden;
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c14 {
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c16 {
  display: inline-block;
  font-size: 16px;
  line-height: 1.2em;
  max-height: 2.4em;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c17 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
}

.c18 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%;
}

.c21 {
  color: #545454;
  cursor: pointer;
  position: relative;
  max-width: 600px;
  font-size: 13px;
}

.c20 {
  font-size: 14px;
  line-height: 20px;
}

.c12 {
  padding: 8px 16px;
}

.c19 {
  border: 0;
  border-bottom: 1px solid #DFE1E5;
  margin: 0;
}

.c33 {
  box-sizing: border-box;
  width: 100%;
  height: 8px;
  display: block;
  margin-top: 8px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #f7f7f7;
  border: 1px solid #ddd;
}

.c33::-webkit-progress-bar {
  background-color: #f7f7f7;
}

.c33::-webkit-progress-value {
  background-color: #dc3232;
  -webkit-transition: width 250ms;
  transition: width 250ms;
}

.c33::-moz-progress-bar {
  background-color: #dc3232;
}

.c33::-ms-fill {
  background-color: #dc3232;
  border: 0;
}

.c37 {
  box-sizing: border-box;
  width: 100%;
  height: 8px;
  display: block;
  margin-top: 8px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #f7f7f7;
  border: 1px solid #ddd;
}

.c37::-webkit-progress-bar {
  background-color: #f7f7f7;
}

.c37::-webkit-progress-value {
  background-color: #ee7c1b;
  -webkit-transition: width 250ms;
  transition: width 250ms;
}

.c37::-moz-progress-bar {
  background-color: #ee7c1b;
}

.c37::-ms-fill {
  background-color: #ee7c1b;
  border: 0;
}

.c35 {
  border: none;
  width: 100%;
  height: inherit;
  line-height: inherit;
  font-family: inherit;
  font-size: inherit;
  color: inherit;
}

.c35:focus {
  outline: 0;
}

.c23 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: #555;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 3px 0 0 3px;
}

.c23:hover,
.c23:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c25 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: transparent;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 0 3px 3px 0;
}

.c25:hover,
.c25:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c22 {
  display: inline-block;
  margin-top: 10px;
  border: 1px solid #dbdbdb;
  border-radius: 4px;
  background-color: #f7f7f7;
  vertical-align: top;
}

.c9 {
  width: 16px;
  height: 16px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c24 {
  width: 22px;
  height: 22px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c26 {
  width: 18px;
  height: 18px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

@media all and (-ms-high-contrast:none),(-ms-high-contrast:active) {
  .c3::after {
    display: inline-block;
    content: "";
    min-height: 22px;
  }
}

<SnippetEditor
  baseUrl="http://example.org/"
  data={
    Object {
      "description": "Test description, %%replacement_variable%%",
      "slug": "test-slug",
      "title": "Test title",
    }
  }
  date=""
  descriptionEditorFieldPlaceholder="Modify your meta description by editing it right here"
  descriptionLengthProgress={
    Object {
      "actual": 0,
      "max": 156,
      "score": 0,
    }
  }
  hasPaperStyle={true}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "textComponent": "span",
    }
  }
  locale="en"
  mapEditorDataToPreview={null}
  mode="mobile"
  onChange={[MockFunction]}
  onChangeAnalysisData={[Function]}
  recommendedReplacementVariables={Array []}
  replacementVariables={Array []}
  titleLengthProgress={
    Object {
      "actual": 0,
      "max": 600,
      "score": 0,
    }
  }
>
  <ErrorBoundary>
    <div>
      <SnippetPreview
        activeField={null}
        breadcrumbs={null}
        date=""
        description="Test description, %%replacement_variable%%"
        hoveredField={null}
        isAmp={false}
        keyword=""
        locale="en"
        mode="mobile"
        onHover={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        title="Test title"
        url="example.org/test-slug"
      >
        <section>
          <div>
            <HelpTextWrapper
              className="yoast-help"
              helpText={
                Array [
                  "This is a rendering of what this post might look like in Google's search results. ",
                  <OutboundLink
                    href="https://yoa.st/snippet-preview"
                  >
                    Learn more about the Snippet Preview.
                  </OutboundLink>,
                ]
              }
              helpTextButtonLabel="Help on the Snippet Preview"
              panelMaxWidth="400px"
            >
              <HelpTextWrapper__HelpTextContainer
                className="yoast-help"
              >
                <div
                  className="yoast-help c0"
                >
                  <HelpTextWrapper__HelpTextButton
                    aria-controls={null}
                    aria-expanded={false}
                    aria-label="Help on the Snippet Preview"
                    className="yoast-help__button"
                    onClick={[Function]}
                  >
                    <Button
                      aria-controls={null}
                      aria-expanded={false}
                      aria-label="Help on the Snippet Preview"
                      className="yoast-help__button c1"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-controls={null}
                        aria-expanded={false}
                        aria-label="Help on the Snippet Preview"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="yoast-help__button c1 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-controls={null}
                          aria-expanded={false}
                          aria-label="Help on the Snippet Preview"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="yoast-help__button c1 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            aria-controls={null}
                            aria-expanded={false}
                            aria-label="Help on the Snippet Preview"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              aria-controls={null}
                              aria-expanded={false}
                              aria-label="Help on the Snippet Preview"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                aria-controls={null}
                                aria-expanded={false}
                                aria-label="Help on the Snippet Preview"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  aria-controls={null}
                                  aria-expanded={false}
                                  aria-label="Help on the Snippet Preview"
                                  className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <HelpTextWrapper__StyledSvg
                                    color="#646464"
                                    icon="question-circle"
                                    size="16px"
                                  >
                                    <SvgIcon
                                      className="c8"
                                      color="#646464"
                                      icon="question-circle"
                                      size="16px"
                                    >
                                      <SvgIcon__StyledSvg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-question-circle c8"
                                        fill="#646464"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="yoast-svg-icon yoast-svg-icon-question-circle c8 c9"
                                          fill="#646464"
                                          focusable="false"
                                          role="img"
                                          size="16px"
                                          viewBox="0 0 1792 1792"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M1024 1376v-192q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23-9t9-23zm256-672q0-88-55.5-163t-138.5-116-170-41q-243 0-371 213-15 24 8 42l132 100q7 6 19 6 16 0 25-12 53-68 86-92 34-24 86-24 48 0 85.5 26t37.5 59q0 38-20 61t-68 45q-63 28-115.5 86.5t-52.5 125.5v36q0 14 9 23t23 9h192q14 0 23-9t9-23q0-19 21.5-49.5t54.5-49.5q32-18 49-28.5t46-35 44.5-48 28-60.5 12.5-81zm384 192q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                          />
                                        </svg>
                                      </SvgIcon__StyledSvg>
                                    </SvgIcon>
                                  </HelpTextWrapper__StyledSvg>
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </HelpTextWrapper__HelpTextButton>
                  <YoastSlideToggle
                    duration={300}
                    isOpen={false}
                  >
                    <animations__YoastSlideToggleContainer
                      duration={300}
                    >
                      <div
                        className="c10"
                      >
                        <CSSTransition
                          classNames="slide"
                          in={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={true}
                        >
                          <Transition
                            appear={false}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={true}
                          />
                        </CSSTransition>
                      </div>
                    </animations__YoastSlideToggleContainer>
                  </YoastSlideToggle>
                </div>
              </HelpTextWrapper__HelpTextContainer>
            </HelpTextWrapper>
          </div>
          <SnippetPreview__MobileContainer
            padding={20}
            width={640}
          >
            <div
              className="c11"
              width={640}
            >
              <SnippetPreview__MobilePartContainer>
                <div
                  className="c12"
                >
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      SEO title preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__BaseTitle
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                  >
                    <div
                      className="c13"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                    >
                      <SnippetPreview__TitleBounded>
                        <SnippetPreview__Title
                          className="c14"
                        >
                          <div
                            className="c14 c15"
                          >
                            <SnippetPreview__TitleUnboundedMobile
                              innerRef={[Function]}
                            >
                              <span
                                className="c16"
                              >
                                Test title
                              </span>
                            </SnippetPreview__TitleUnboundedMobile>
                          </div>
                        </SnippetPreview__Title>
                      </SnippetPreview__TitleBounded>
                    </div>
                  </SnippetPreview__BaseTitle>
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      Url preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__BaseUrl>
                    <div
                      className="c17"
                    >
                      <SnippetPreview__BaseUrlOverflowContainer
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                      >
                        <div
                          className="c18"
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                        >
                          example.org â€º test-slug
                        </div>
                      </SnippetPreview__BaseUrlOverflowContainer>
                    </div>
                  </SnippetPreview__BaseUrl>
                </div>
              </SnippetPreview__MobilePartContainer>
              <SnippetPreview__Separator>
                <hr
                  className="c19"
                />
              </SnippetPreview__Separator>
              <SnippetPreview__MobilePartContainer>
                <div
                  className="c12"
                >
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      Meta description preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__MobileDescription
                    isDescriptionPlaceholder={false}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                  >
                    <SnippetPreview__DesktopDescription
                      className="c20"
                      isDescriptionPlaceholder={false}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                    >
                      <div
                        className="c20 c21"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                      >
                        <SnippetPreview__MobileDescription
                          innerRef={[Function]}
                          isDescriptionPlaceholder={false}
                        >
                          <SnippetPreview__DesktopDescription
                            className="c20"
                            innerRef={[Function]}
                            isDescriptionPlaceholder={false}
                          >
                            <div
                              className="c20 c21"
                            >
                              Test description, %%replacement_variable%%
                            </div>
                          </SnippetPreview__DesktopDescription>
                        </SnippetPreview__MobileDescription>
                      </div>
                    </SnippetPreview__DesktopDescription>
                  </SnippetPreview__MobileDescription>
                </div>
              </SnippetPreview__MobilePartContainer>
            </div>
          </SnippetPreview__MobileContainer>
        </section>
      </SnippetPreview>
      <ModeSwitcher
        active="mobile"
        onChange={[Function]}
      >
        <ModeSwitcher__Switcher>
          <div
            className="c22"
          >
            <ModeSwitcher__SwitcherButton
              aria-pressed={true}
              isActive={true}
              onClick={[Function]}
            >
              <Button
                aria-pressed={true}
                className="c23"
                isActive={true}
                onClick={[Function]}
              >
                <Button
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-pressed={true}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c23 c2"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  isActive={true}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <Button
                    activeBackgroundColor="#f7f7f7"
                    activeBorderColor="#888"
                    activeColor="#000"
                    aria-pressed={true}
                    backgroundColor="#f7f7f7"
                    borderColor="#ccc"
                    boxShadowColor="#ccc"
                    className="c23 c2 Button-kDSBcD c3"
                    focusBackgroundColor="#fff"
                    focusBorderColor="#0066cd"
                    focusColor="#000"
                    hoverBackgroundColor="#fff"
                    hoverBorderColor="#888"
                    hoverColor="#000"
                    isActive={true}
                    onClick={[Function]}
                    textColor="#555"
                    type="button"
                  >
                    <Button
                      activeBackgroundColor="#f7f7f7"
                      activeBorderColor="#888"
                      activeColor="#000"
                      aria-pressed={true}
                      backgroundColor="#f7f7f7"
                      borderColor="#ccc"
                      boxShadowColor="#ccc"
                      className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                      focusBackgroundColor="#fff"
                      focusBorderColor="#0066cd"
                      focusColor="#000"
                      hoverBackgroundColor="#fff"
                      hoverBorderColor="#888"
                      hoverColor="#000"
                      isActive={true}
                      onClick={[Function]}
                      textColor="#555"
                      type="button"
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-pressed={true}
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        isActive={true}
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button__BaseButton
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-pressed={true}
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          isActive={true}
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <button
                            aria-pressed={true}
                            className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                            onClick={[Function]}
                            type="button"
                          >
                            <SvgIcon
                              color="currentColor"
                              icon="mobile"
                              size="22px"
                            >
                              <SvgIcon__StyledSvg
                                aria-hidden={true}
                                className="yoast-svg-icon yoast-svg-icon-mobile"
                                fill="currentColor"
                                focusable="false"
                                role="img"
                                size="22px"
                                viewBox="0 0 1792 1792"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="yoast-svg-icon yoast-svg-icon-mobile c24"
                                  fill="currentColor"
                                  focusable="false"
                                  role="img"
                                  size="22px"
                                  viewBox="0 0 1792 1792"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M976 1408q0-33-23.5-56.5t-56.5-23.5-56.5 23.5-23.5 56.5 23.5 56.5 56.5 23.5 56.5-23.5 23.5-56.5zm208-160v-704q0-13-9.5-22.5t-22.5-9.5h-512q-13 0-22.5 9.5t-9.5 22.5v704q0 13 9.5 22.5t22.5 9.5h512q13 0 22.5-9.5t9.5-22.5zm-192-848q0-16-16-16h-160q-16 0-16 16t16 16h160q16 0 16-16zm288-16v1024q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-1024q0-52 38-90t90-38h512q52 0 90 38t38 90z"
                                  />
                                </svg>
                              </SvgIcon__StyledSvg>
                            </SvgIcon>
                            <ScreenReaderText>
                              <span
                                className="screen-reader-text"
                                style={
                                  Object {
                                    "clip": "rect(1px, 1px, 1px, 1px)",
                                    "height": "1px",
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "width": "1px",
                                  }
                                }
                              >
                                Mobile preview
                              </span>
                            </ScreenReaderText>
                          </button>
                        </Button__BaseButton>
                      </Button>
                    </Button>
                  </Button>
                </Button>
              </Button>
            </ModeSwitcher__SwitcherButton>
            <ModeSwitcher__SwitcherButton
              aria-pressed={false}
              isActive={false}
              onClick={[Function]}
            >
              <Button
                aria-pressed={false}
                className="c25"
                isActive={false}
                onClick={[Function]}
              >
                <Button
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-pressed={false}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c25 c2"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  isActive={false}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <Button
                    activeBackgroundColor="#f7f7f7"
                    activeBorderColor="#888"
                    activeColor="#000"
                    aria-pressed={false}
                    backgroundColor="#f7f7f7"
                    borderColor="#ccc"
                    boxShadowColor="#ccc"
                    className="c25 c2 Button-kDSBcD c3"
                    focusBackgroundColor="#fff"
                    focusBorderColor="#0066cd"
                    focusColor="#000"
                    hoverBackgroundColor="#fff"
                    hoverBorderColor="#888"
                    hoverColor="#000"
                    isActive={false}
                    onClick={[Function]}
                    textColor="#555"
                    type="button"
                  >
                    <Button
                      activeBackgroundColor="#f7f7f7"
                      activeBorderColor="#888"
                      activeColor="#000"
                      aria-pressed={false}
                      backgroundColor="#f7f7f7"
                      borderColor="#ccc"
                      boxShadowColor="#ccc"
                      className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                      focusBackgroundColor="#fff"
                      focusBorderColor="#0066cd"
                      focusColor="#000"
                      hoverBackgroundColor="#fff"
                      hoverBorderColor="#888"
                      hoverColor="#000"
                      isActive={false}
                      onClick={[Function]}
                      textColor="#555"
                      type="button"
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-pressed={false}
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        isActive={false}
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button__BaseButton
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-pressed={false}
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          isActive={false}
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <button
                            aria-pressed={false}
                            className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                            onClick={[Function]}
                            type="button"
                          >
                            <SvgIcon
                              color="currentColor"
                              icon="desktop"
                              size="18px"
                            >
                              <SvgIcon__StyledSvg
                                aria-hidden={true}
                                className="yoast-svg-icon yoast-svg-icon-desktop"
                                fill="currentColor"
                                focusable="false"
                                role="img"
                                size="18px"
                                viewBox="0 0 1792 1792"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="yoast-svg-icon yoast-svg-icon-desktop c26"
                                  fill="currentColor"
                                  focusable="false"
                                  role="img"
                                  size="18px"
                                  viewBox="0 0 1792 1792"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M1728 992v-832q0-13-9.5-22.5t-22.5-9.5h-1600q-13 0-22.5 9.5t-9.5 22.5v832q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5zm128-832v1088q0 66-47 113t-113 47h-544q0 37 16 77.5t32 71 16 43.5q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45q0-14 16-44t32-70 16-78h-544q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1600q66 0 113 47t47 113z"
                                  />
                                </svg>
                              </SvgIcon__StyledSvg>
                            </SvgIcon>
                            <ScreenReaderText>
                              <span
                                className="screen-reader-text"
                                style={
                                  Object {
                                    "clip": "rect(1px, 1px, 1px, 1px)",
                                    "height": "1px",
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "width": "1px",
                                  }
                                }
                              >
                                Desktop preview
                              </span>
                            </ScreenReaderText>
                          </button>
                        </Button__BaseButton>
                      </Button>
                    </Button>
                  </Button>
                </Button>
              </Button>
            </ModeSwitcher__SwitcherButton>
          </div>
        </ModeSwitcher__Switcher>
      </ModeSwitcher>
      <Button
        aria-expanded={true}
        innerRef={[Function]}
        onClick={[Function]}
      >
        <Button
          activeBackgroundColor="#f7f7f7"
          activeBorderColor="#888"
          activeColor="#000"
          aria-expanded={true}
          backgroundColor="#f7f7f7"
          borderColor="#ccc"
          boxShadowColor="#ccc"
          className="c27"
          focusBackgroundColor="#fff"
          focusBorderColor="#0066cd"
          focusColor="#000"
          hoverBackgroundColor="#fff"
          hoverBorderColor="#888"
          hoverColor="#000"
          innerRef={[Function]}
          onClick={[Function]}
          textColor="#555"
          type="button"
        >
          <Button
            activeBackgroundColor="#f7f7f7"
            activeBorderColor="#888"
            activeColor="#000"
            aria-expanded={true}
            backgroundColor="#f7f7f7"
            borderColor="#ccc"
            boxShadowColor="#ccc"
            className="c27 Button-kDSBcD c3"
            focusBackgroundColor="#fff"
            focusBorderColor="#0066cd"
            focusColor="#000"
            hoverBackgroundColor="#fff"
            hoverBorderColor="#888"
            hoverColor="#000"
            innerRef={[Function]}
            onClick={[Function]}
            textColor="#555"
            type="button"
          >
            <Button
              activeBackgroundColor="#f7f7f7"
              activeBorderColor="#888"
              activeColor="#000"
              aria-expanded={true}
              backgroundColor="#f7f7f7"
              borderColor="#ccc"
              boxShadowColor="#ccc"
              className="c27 Button-kDSBcD c3 Button-kDSBcD c4"
              focusBackgroundColor="#fff"
              focusBorderColor="#0066cd"
              focusColor="#000"
              hoverBackgroundColor="#fff"
              hoverBorderColor="#888"
              hoverColor="#000"
              innerRef={[Function]}
              onClick={[Function]}
              textColor="#555"
              type="button"
            >
              <Button
                activeBackgroundColor="#f7f7f7"
                activeBorderColor="#888"
                activeColor="#000"
                aria-expanded={true}
                backgroundColor="#f7f7f7"
                borderColor="#ccc"
                boxShadowColor="#ccc"
                className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                focusBackgroundColor="#fff"
                focusBorderColor="#0066cd"
                focusColor="#000"
                hoverBackgroundColor="#fff"
                hoverBorderColor="#888"
                hoverColor="#000"
                innerRef={[Function]}
                onClick={[Function]}
                textColor="#555"
                type="button"
              >
                <Button__BaseButton
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-expanded={true}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  innerRef={[Function]}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <button
                    aria-expanded={true}
                    className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                    onClick={[Function]}
                    type="button"
                  >
                    <SvgIcon
                      icon="edit"
                      size="16px"
                    >
                      <SvgIcon__StyledSvg
                        aria-hidden={true}
                        className="yoast-svg-icon yoast-svg-icon-edit"
                        focusable="false"
                        role="img"
                        size="16px"
                        viewBox="0 0 1792 1792"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <svg
                          aria-hidden={true}
                          className="yoast-svg-icon yoast-svg-icon-edit c9"
                          focusable="false"
                          role="img"
                          size="16px"
                          viewBox="0 0 1792 1792"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M491 1536l91-91-235-235-91 91v107h128v128h107zm523-928q0-22-22-22-10 0-17 7l-542 542q-7 7-7 17 0 22 22 22 10 0 17-7l542-542q7-7 7-17zm-54-192l416 416-832 832h-416v-416zm683 96q0 53-37 90l-166 166-416-416 166-165q36-38 90-38 53 0 91 38l235 234q37 39 37 91z"
                          />
                        </svg>
                      </SvgIcon__StyledSvg>
                    </SvgIcon>
                    Edit snippet
                  </button>
                </Button__BaseButton>
              </Button>
            </Button>
          </Button>
        </Button>
      </Button>
      <SnippetEditorFields
        activeField={null}
        containerPadding="0 20px"
        data={
          Object {
            "description": "Test description, %%replacement_variable%%",
            "slug": "test-slug",
            "title": "Test title",
          }
        }
        descriptionEditorFieldPlaceholder="Modify your meta description by editing it right here"
        descriptionLengthProgress={
          Object {
            "actual": 42,
            "max": 156,
            "score": 6,
          }
        }
        hoveredField={null}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        recommendedReplacementVariables={Array []}
        replacementVariables={Array []}
        titleLengthProgress={
          Object {
            "actual": 0,
            "max": 600,
            "score": 1,
          }
        }
      >
        <Shared__StyledEditor
          padding="0 20px"
        >
          <section
            className="c28"
          >
            <Shared__FormSection>
              <div
                className="c29"
              >
                <ReplacementVariableEditor
                  content="Test title"
                  editorRef={[Function]}
                  fieldId="snippet-editor-field-title"
                  isActive={false}
                  isHovered={false}
                  label="SEO title"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  recommendedReplacementVariables={Array []}
                  replacementVariables={Array []}
                  withCaret={true}
                >
                  <Shared__SimulatedLabel
                    id="30"
                    onClick={[Function]}
                  >
                    <div
                      className="c30"
                      id="30"
                      onClick={[Function]}
                    >
                      SEO title
                    </div>
                  </Shared__SimulatedLabel>
                  <Shared__TriggerReplacementVariableSuggestionsButton
                    onClick={[Function]}
                  >
                    <Button
                      className="c31"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c31 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c31 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <SvgIcon
                                    icon="plus-circle"
                                    size="16px"
                                  >
                                    <SvgIcon__StyledSvg
                                      aria-hidden={true}
                                      className="yoast-svg-icon yoast-svg-icon-plus-circle"
                                      focusable="false"
                                      role="img"
                                      size="16px"
                                      viewBox="0 0 1792 1792"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-plus-circle c9"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M1344 960v-128q0-26-19-45t-45-19h-256v-256q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v256h-256q-26 0-45 19t-19 45v128q0 26 19 45t45 19h256v256q0 26 19 45t45 19h128q26 0 45-19t19-45v-256h256q26 0 45-19t19-45zm320-64q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                        />
                                      </svg>
                                    </SvgIcon__StyledSvg>
                                  </SvgIcon>
                                  Insert snippet variable
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </Shared__TriggerReplacementVariableSuggestionsButton>
                  <Shared__InputContainer
                    id="snippet-editor-field-title"
                    isActive={false}
                    isHovered={false}
                    onClick={[Function]}
                  >
                    <div
                      className="c32"
                      id="snippet-editor-field-title"
                      onClick={[Function]}
                    >
                      <Wrapper
                        ariaLabelledBy="30"
                        content="Test title"
                        innerRef={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        recommendedReplacementVariables={Array []}
                        replacementVariables={Array []}
                      >
                        <ReplacementVariableEditorStandalone
                          ariaLabelledBy="30"
                          content="Test title"
                          innerRef={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          recommendedReplacementVariables={Array []}
                          replacementVariables={Array []}
                        >
                          <div />
                        </ReplacementVariableEditorStandalone>
                      </Wrapper>
                    </div>
                  </Shared__InputContainer>
                </ReplacementVariableEditor>
                <ProgressBar
                  aria-hidden="true"
                  backgroundColor="#f7f7f7"
                  borderColor="#ddd"
                  max={600}
                  progressColor="#dc3232"
                  value={0}
                >
                  <progress
                    aria-hidden="true"
                    className="c33"
                    max={600}
                    value={0}
                  />
                </ProgressBar>
              </div>
            </Shared__FormSection>
            <Shared__FormSection>
              <div
                className="c29"
              >
                <Shared__SimulatedLabel
                  id="snippet-editor-field-29-slug"
                  onClick={[Function]}
                >
                  <div
                    className="c30"
                    id="snippet-editor-field-29-slug"
                    onClick={[Function]}
                  >
                    Slug
                  </div>
                </Shared__SimulatedLabel>
                <Shared__InputContainer
                  isActive={false}
                  isHovered={false}
                  onClick={[Function]}
                >
                  <div
                    className="c34"
                    onClick={[Function]}
                  >
                    <SnippetEditorFields__SlugInput
                      aria-labelledby="snippet-editor-field-29-slug"
                      id="snippet-editor-field-slug"
                      innerRef={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      value="test-slug"
                    >
                      <input
                        aria-labelledby="snippet-editor-field-29-slug"
                        className="c35"
                        id="snippet-editor-field-slug"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        value="test-slug"
                      />
                    </SnippetEditorFields__SlugInput>
                  </div>
                </Shared__InputContainer>
              </div>
            </Shared__FormSection>
            <Shared__FormSection>
              <div
                className="c29"
              >
                <ReplacementVariableEditor
                  content="Test description, %%replacement_variable%%"
                  editorRef={[Function]}
                  fieldId="snippet-editor-field-description"
                  isActive={false}
                  isHovered={false}
                  label="Meta description"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  placeholder="Modify your meta description by editing it right here"
                  recommendedReplacementVariables={Array []}
                  replacementVariables={Array []}
                  type="description"
                  withCaret={true}
                >
                  <Shared__SimulatedLabel
                    id="31"
                    onClick={[Function]}
                  >
                    <div
                      className="c30"
                      id="31"
                      onClick={[Function]}
                    >
                      Meta description
                    </div>
                  </Shared__SimulatedLabel>
                  <Shared__TriggerReplacementVariableSuggestionsButton
                    onClick={[Function]}
                  >
                    <Button
                      className="c31"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c31 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c31 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <SvgIcon
                                    icon="plus-circle"
                                    size="16px"
                                  >
                                    <SvgIcon__StyledSvg
                                      aria-hidden={true}
                                      className="yoast-svg-icon yoast-svg-icon-plus-circle"
                                      focusable="false"
                                      role="img"
                                      size="16px"
                                      viewBox="0 0 1792 1792"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-plus-circle c9"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M1344 960v-128q0-26-19-45t-45-19h-256v-256q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v256h-256q-26 0-45 19t-19 45v128q0 26 19 45t45 19h256v256q0 26 19 45t45 19h128q26 0 45-19t19-45v-256h256q26 0 45-19t19-45zm320-64q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                        />
                                      </svg>
                                    </SvgIcon__StyledSvg>
                                  </SvgIcon>
                                  Insert snippet variable
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </Shared__TriggerReplacementVariableSuggestionsButton>
                  <Shared__InputContainer
                    id="snippet-editor-field-description"
                    isActive={false}
                    isHovered={false}
                    onClick={[Function]}
                  >
                    <div
                      className="c36"
                      id="snippet-editor-field-description"
                      onClick={[Function]}
                    >
                      <Wrapper
                        ariaLabelledBy="31"
                        content="Test description, %%replacement_variable%%"
                        innerRef={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        placeholder="Modify your meta description by editing it right here"
                        recommendedReplacementVariables={Array []}
                        replacementVariables={Array []}
                      >
                        <ReplacementVariableEditorStandalone
                          ariaLabelledBy="31"
                          content="Test description, %%replacement_variable%%"
                          innerRef={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Modify your meta description by editing it right here"
                          recommendedReplacementVariables={Array []}
                          replacementVariables={Array []}
                        >
                          <div />
                        </ReplacementVariableEditorStandalone>
                      </Wrapper>
                    </div>
                  </Shared__InputContainer>
                </ReplacementVariableEditor>
                <ProgressBar
                  aria-hidden="true"
                  backgroundColor="#f7f7f7"
                  borderColor="#ddd"
                  max={156}
                  progressColor="#ee7c1b"
                  value={42}
                >
                  <progress
                    aria-hidden="true"
                    className="c37"
                    max={156}
                    value={42}
                  />
                </ProgressBar>
              </div>
            </Shared__FormSection>
          </section>
        </Shared__StyledEditor>
      </SnippetEditorFields>
      <Button
        onClick={[Function]}
      >
        <Button
          activeBackgroundColor="#f7f7f7"
          activeBorderColor="#888"
          activeColor="#000"
          backgroundColor="#f7f7f7"
          borderColor="#ccc"
          boxShadowColor="#ccc"
          className="c38"
          focusBackgroundColor="#fff"
          focusBorderColor="#0066cd"
          focusColor="#000"
          hoverBackgroundColor="#fff"
          hoverBorderColor="#888"
          hoverColor="#000"
          onClick={[Function]}
          textColor="#555"
          type="button"
        >
          <Button
            activeBackgroundColor="#f7f7f7"
            activeBorderColor="#888"
            activeColor="#000"
            backgroundColor="#f7f7f7"
            borderColor="#ccc"
            boxShadowColor="#ccc"
            className="c38 Button-kDSBcD c3"
            focusBackgroundColor="#fff"
            focusBorderColor="#0066cd"
            focusColor="#000"
            hoverBackgroundColor="#fff"
            hoverBorderColor="#888"
            hoverColor="#000"
            onClick={[Function]}
            textColor="#555"
            type="button"
          >
            <Button
              activeBackgroundColor="#f7f7f7"
              activeBorderColor="#888"
              activeColor="#000"
              backgroundColor="#f7f7f7"
              borderColor="#ccc"
              boxShadowColor="#ccc"
              className="c38 Button-kDSBcD c3 Button-kDSBcD c4"
              focusBackgroundColor="#fff"
              focusBorderColor="#0066cd"
              focusColor="#000"
              hoverBackgroundColor="#fff"
              hoverBorderColor="#888"
              hoverColor="#000"
              onClick={[Function]}
              textColor="#555"
              type="button"
            >
              <Button
                activeBackgroundColor="#f7f7f7"
                activeBorderColor="#888"
                activeColor="#000"
                backgroundColor="#f7f7f7"
                borderColor="#ccc"
                boxShadowColor="#ccc"
                className="c38 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                focusBackgroundColor="#fff"
                focusBorderColor="#0066cd"
                focusColor="#000"
                hoverBackgroundColor="#fff"
                hoverBorderColor="#888"
                hoverColor="#000"
                onClick={[Function]}
                textColor="#555"
                type="button"
              >
                <Button__BaseButton
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c38 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <button
                    className="c38 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                    onClick={[Function]}
                    type="button"
                  >
                    Close snippet editor
                  </button>
                </Button__BaseButton>
              </Button>
            </Button>
          </Button>
        </Button>
      </Button>
    </div>
  </ErrorBoundary>
</SnippetEditor>
`;

exports[`SnippetEditor calls callbacks when the editors are focused or changed 2`] = `
.c7 {
  color: #555;
  border-color: #ccc;
  background: #f7f7f7;
  box-shadow: 0 1px 0 rgba( 204,204,204,1 );
}

.c2 {
  font-size: 0.8rem;
}

.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  vertical-align: middle;
  border-width: 1px;
  border-style: solid;
  margin: 0;
  padding: 4px 10px;
  border-radius: 3px;
  cursor: pointer;
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  font-weight: inherit;
  text-align: left;
  overflow: visible;
  min-height: 32px;
}

.c3 svg {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c4:hover {
  color: #000;
  background-color: #fff;
  border-color: #888;
}

.c5::-moz-focus-inner {
  border-width: 0;
}

.c5:focus {
  outline: none;
  border-color: #0066cd;
  color: #000;
  background-color: #fff;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c6:active {
  color: #000;
  background-color: #f7f7f7;
  border-color: #888;
  box-shadow: inset 0 2px 5px -3px rgba( 0,0,0,0.5 );
}

.c27 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 10px 0 0 4px;
  fill: #555;
  padding-left: 8px;
}

.c27 svg {
  margin-right: 7px;
}

.c38 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin-top: 24px;
}

.c10 >:first-child {
  overflow: hidden;
  -webkit-transition: height 300ms ease-out;
  transition: height 300ms ease-out;
}

.c0 {
  max-width: 600px;
  font-weight: normal;
  margin: 0 20px 0 25px;
}

.c1 {
  min-width: 14px;
  min-height: 14px;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  border: 1px solid transparent;
  box-shadow: none;
  display: block;
  margin: -44px -10px 10px 0;
  background-color: transparent;
  float: right;
  padding: 3px 0 0 6px;
}

.c1:hover {
  color: #0066cd;
}

.c1:focus {
  border: 1px solid #0066cd;
  outline: none;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c1:focus svg {
  fill: #0066cd;
  color: #0066cd;
}

.c1:active {
  box-shadow: none;
}

.c8:hover {
  fill: #0066cd;
}

.c32 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
}

.c32 .public-DraftStyleDefault-block {
  line-height: 24px;
}

.c32::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c34 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
}

.c34::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c36 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
  min-height: 72px;
  padding: 2px 6px;
  line-height: 24px;
}

.c36 .public-DraftEditorPlaceholder-root {
  color: #646464;
}

.c36 .public-DraftEditorPlaceholder-hasFocus {
  color: #646464;
}

.c36::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c29 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin: 24px 0 0 0;
}

.c28 {
  padding: 0 20px;
}

.c30 {
  -webkit-flex: 1 1 200px;
  -ms-flex: 1 1 200px;
  flex: 1 1 200px;
  min-width: 200px;
  cursor: pointer;
  font-size: 16px;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 4px 0;
}

.c31 {
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  padding-left: 8px;
  height: 33px;
  border: 1px solid #dbdbdb;
  font-size: 13px;
}

.c31 svg {
  margin-right: 7px;
  fill: #555;
}

.c11 {
  border-bottom: 1px hidden #fff;
  border-radius: 2px;
  box-shadow: 0 1px 2px rgba(0,0,0,.2);
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  max-width: 600px;
  box-sizing: border-box;
  font-size: 14px;
}

.c13 {
  cursor: pointer;
  position: relative;
}

.c15 {
  color: #1e0fbe;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-size: 18px;
  line-height: 1.2;
  font-weight: normal;
  margin: 0;
  display: inline-block;
  overflow: hidden;
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c14 {
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c16 {
  display: inline-block;
  font-size: 16px;
  line-height: 1.2em;
  max-height: 2.4em;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c17 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
}

.c18 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%;
}

.c21 {
  color: #545454;
  cursor: pointer;
  position: relative;
  max-width: 600px;
  font-size: 13px;
}

.c20 {
  font-size: 14px;
  line-height: 20px;
}

.c12 {
  padding: 8px 16px;
}

.c19 {
  border: 0;
  border-bottom: 1px solid #DFE1E5;
  margin: 0;
}

.c33 {
  box-sizing: border-box;
  width: 100%;
  height: 8px;
  display: block;
  margin-top: 8px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #f7f7f7;
  border: 1px solid #ddd;
}

.c33::-webkit-progress-bar {
  background-color: #f7f7f7;
}

.c33::-webkit-progress-value {
  background-color: #dc3232;
  -webkit-transition: width 250ms;
  transition: width 250ms;
}

.c33::-moz-progress-bar {
  background-color: #dc3232;
}

.c33::-ms-fill {
  background-color: #dc3232;
  border: 0;
}

.c37 {
  box-sizing: border-box;
  width: 100%;
  height: 8px;
  display: block;
  margin-top: 8px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #f7f7f7;
  border: 1px solid #ddd;
}

.c37::-webkit-progress-bar {
  background-color: #f7f7f7;
}

.c37::-webkit-progress-value {
  background-color: #ee7c1b;
  -webkit-transition: width 250ms;
  transition: width 250ms;
}

.c37::-moz-progress-bar {
  background-color: #ee7c1b;
}

.c37::-ms-fill {
  background-color: #ee7c1b;
  border: 0;
}

.c35 {
  border: none;
  width: 100%;
  height: inherit;
  line-height: inherit;
  font-family: inherit;
  font-size: inherit;
  color: inherit;
}

.c35:focus {
  outline: 0;
}

.c23 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: #555;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 3px 0 0 3px;
}

.c23:hover,
.c23:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c25 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: transparent;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 0 3px 3px 0;
}

.c25:hover,
.c25:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c22 {
  display: inline-block;
  margin-top: 10px;
  border: 1px solid #dbdbdb;
  border-radius: 4px;
  background-color: #f7f7f7;
  vertical-align: top;
}

.c9 {
  width: 16px;
  height: 16px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c24 {
  width: 22px;
  height: 22px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c26 {
  width: 18px;
  height: 18px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

@media all and (-ms-high-contrast:none),(-ms-high-contrast:active) {
  .c3::after {
    display: inline-block;
    content: "";
    min-height: 22px;
  }
}

<SnippetEditor
  baseUrl="http://example.org/"
  data={
    Object {
      "description": "Test description, %%replacement_variable%%",
      "slug": "test-slug",
      "title": "Test title",
    }
  }
  date=""
  descriptionEditorFieldPlaceholder="Modify your meta description by editing it right here"
  descriptionLengthProgress={
    Object {
      "actual": 0,
      "max": 156,
      "score": 0,
    }
  }
  hasPaperStyle={true}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "textComponent": "span",
    }
  }
  locale="en"
  mapEditorDataToPreview={null}
  mode="mobile"
  onChange={[MockFunction]}
  onChangeAnalysisData={[Function]}
  recommendedReplacementVariables={Array []}
  replacementVariables={Array []}
  titleLengthProgress={
    Object {
      "actual": 0,
      "max": 600,
      "score": 0,
    }
  }
>
  <ErrorBoundary>
    <div>
      <SnippetPreview
        activeField={null}
        breadcrumbs={null}
        date=""
        description="Test description, %%replacement_variable%%"
        hoveredField={null}
        isAmp={false}
        keyword=""
        locale="en"
        mode="mobile"
        onHover={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        title="Test title"
        url="example.org/test-slug"
      >
        <section>
          <div>
            <HelpTextWrapper
              className="yoast-help"
              helpText={
                Array [
                  "This is a rendering of what this post might look like in Google's search results. ",
                  <OutboundLink
                    href="https://yoa.st/snippet-preview"
                  >
                    Learn more about the Snippet Preview.
                  </OutboundLink>,
                ]
              }
              helpTextButtonLabel="Help on the Snippet Preview"
              panelMaxWidth="400px"
            >
              <HelpTextWrapper__HelpTextContainer
                className="yoast-help"
              >
                <div
                  className="yoast-help c0"
                >
                  <HelpTextWrapper__HelpTextButton
                    aria-controls={null}
                    aria-expanded={false}
                    aria-label="Help on the Snippet Preview"
                    className="yoast-help__button"
                    onClick={[Function]}
                  >
                    <Button
                      aria-controls={null}
                      aria-expanded={false}
                      aria-label="Help on the Snippet Preview"
                      className="yoast-help__button c1"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-controls={null}
                        aria-expanded={false}
                        aria-label="Help on the Snippet Preview"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="yoast-help__button c1 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-controls={null}
                          aria-expanded={false}
                          aria-label="Help on the Snippet Preview"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="yoast-help__button c1 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            aria-controls={null}
                            aria-expanded={false}
                            aria-label="Help on the Snippet Preview"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              aria-controls={null}
                              aria-expanded={false}
                              aria-label="Help on the Snippet Preview"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                aria-controls={null}
                                aria-expanded={false}
                                aria-label="Help on the Snippet Preview"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  aria-controls={null}
                                  aria-expanded={false}
                                  aria-label="Help on the Snippet Preview"
                                  className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <HelpTextWrapper__StyledSvg
                                    color="#646464"
                                    icon="question-circle"
                                    size="16px"
                                  >
                                    <SvgIcon
                                      className="c8"
                                      color="#646464"
                                      icon="question-circle"
                                      size="16px"
                                    >
                                      <SvgIcon__StyledSvg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-question-circle c8"
                                        fill="#646464"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="yoast-svg-icon yoast-svg-icon-question-circle c8 c9"
                                          fill="#646464"
                                          focusable="false"
                                          role="img"
                                          size="16px"
                                          viewBox="0 0 1792 1792"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M1024 1376v-192q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23-9t9-23zm256-672q0-88-55.5-163t-138.5-116-170-41q-243 0-371 213-15 24 8 42l132 100q7 6 19 6 16 0 25-12 53-68 86-92 34-24 86-24 48 0 85.5 26t37.5 59q0 38-20 61t-68 45q-63 28-115.5 86.5t-52.5 125.5v36q0 14 9 23t23 9h192q14 0 23-9t9-23q0-19 21.5-49.5t54.5-49.5q32-18 49-28.5t46-35 44.5-48 28-60.5 12.5-81zm384 192q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                          />
                                        </svg>
                                      </SvgIcon__StyledSvg>
                                    </SvgIcon>
                                  </HelpTextWrapper__StyledSvg>
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </HelpTextWrapper__HelpTextButton>
                  <YoastSlideToggle
                    duration={300}
                    isOpen={false}
                  >
                    <animations__YoastSlideToggleContainer
                      duration={300}
                    >
                      <div
                        className="c10"
                      >
                        <CSSTransition
                          classNames="slide"
                          in={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={true}
                        >
                          <Transition
                            appear={false}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={true}
                          />
                        </CSSTransition>
                      </div>
                    </animations__YoastSlideToggleContainer>
                  </YoastSlideToggle>
                </div>
              </HelpTextWrapper__HelpTextContainer>
            </HelpTextWrapper>
          </div>
          <SnippetPreview__MobileContainer
            padding={20}
            width={640}
          >
            <div
              className="c11"
              width={640}
            >
              <SnippetPreview__MobilePartContainer>
                <div
                  className="c12"
                >
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      SEO title preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__BaseTitle
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                  >
                    <div
                      className="c13"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                    >
                      <SnippetPreview__TitleBounded>
                        <SnippetPreview__Title
                          className="c14"
                        >
                          <div
                            className="c14 c15"
                          >
                            <SnippetPreview__TitleUnboundedMobile
                              innerRef={[Function]}
                            >
                              <span
                                className="c16"
                              >
                                Test title
                              </span>
                            </SnippetPreview__TitleUnboundedMobile>
                          </div>
                        </SnippetPreview__Title>
                      </SnippetPreview__TitleBounded>
                    </div>
                  </SnippetPreview__BaseTitle>
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      Url preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__BaseUrl>
                    <div
                      className="c17"
                    >
                      <SnippetPreview__BaseUrlOverflowContainer
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                      >
                        <div
                          className="c18"
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                        >
                          example.org â€º test-slug
                        </div>
                      </SnippetPreview__BaseUrlOverflowContainer>
                    </div>
                  </SnippetPreview__BaseUrl>
                </div>
              </SnippetPreview__MobilePartContainer>
              <SnippetPreview__Separator>
                <hr
                  className="c19"
                />
              </SnippetPreview__Separator>
              <SnippetPreview__MobilePartContainer>
                <div
                  className="c12"
                >
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      Meta description preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__MobileDescription
                    isDescriptionPlaceholder={false}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                  >
                    <SnippetPreview__DesktopDescription
                      className="c20"
                      isDescriptionPlaceholder={false}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                    >
                      <div
                        className="c20 c21"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                      >
                        <SnippetPreview__MobileDescription
                          innerRef={[Function]}
                          isDescriptionPlaceholder={false}
                        >
                          <SnippetPreview__DesktopDescription
                            className="c20"
                            innerRef={[Function]}
                            isDescriptionPlaceholder={false}
                          >
                            <div
                              className="c20 c21"
                            >
                              Test description, %%replacement_variable%%
                            </div>
                          </SnippetPreview__DesktopDescription>
                        </SnippetPreview__MobileDescription>
                      </div>
                    </SnippetPreview__DesktopDescription>
                  </SnippetPreview__MobileDescription>
                </div>
              </SnippetPreview__MobilePartContainer>
            </div>
          </SnippetPreview__MobileContainer>
        </section>
      </SnippetPreview>
      <ModeSwitcher
        active="mobile"
        onChange={[Function]}
      >
        <ModeSwitcher__Switcher>
          <div
            className="c22"
          >
            <ModeSwitcher__SwitcherButton
              aria-pressed={true}
              isActive={true}
              onClick={[Function]}
            >
              <Button
                aria-pressed={true}
                className="c23"
                isActive={true}
                onClick={[Function]}
              >
                <Button
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-pressed={true}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c23 c2"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  isActive={true}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <Button
                    activeBackgroundColor="#f7f7f7"
                    activeBorderColor="#888"
                    activeColor="#000"
                    aria-pressed={true}
                    backgroundColor="#f7f7f7"
                    borderColor="#ccc"
                    boxShadowColor="#ccc"
                    className="c23 c2 Button-kDSBcD c3"
                    focusBackgroundColor="#fff"
                    focusBorderColor="#0066cd"
                    focusColor="#000"
                    hoverBackgroundColor="#fff"
                    hoverBorderColor="#888"
                    hoverColor="#000"
                    isActive={true}
                    onClick={[Function]}
                    textColor="#555"
                    type="button"
                  >
                    <Button
                      activeBackgroundColor="#f7f7f7"
                      activeBorderColor="#888"
                      activeColor="#000"
                      aria-pressed={true}
                      backgroundColor="#f7f7f7"
                      borderColor="#ccc"
                      boxShadowColor="#ccc"
                      className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                      focusBackgroundColor="#fff"
                      focusBorderColor="#0066cd"
                      focusColor="#000"
                      hoverBackgroundColor="#fff"
                      hoverBorderColor="#888"
                      hoverColor="#000"
                      isActive={true}
                      onClick={[Function]}
                      textColor="#555"
                      type="button"
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-pressed={true}
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        isActive={true}
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button__BaseButton
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-pressed={true}
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          isActive={true}
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <button
                            aria-pressed={true}
                            className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                            onClick={[Function]}
                            type="button"
                          >
                            <SvgIcon
                              color="currentColor"
                              icon="mobile"
                              size="22px"
                            >
                              <SvgIcon__StyledSvg
                                aria-hidden={true}
                                className="yoast-svg-icon yoast-svg-icon-mobile"
                                fill="currentColor"
                                focusable="false"
                                role="img"
                                size="22px"
                                viewBox="0 0 1792 1792"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="yoast-svg-icon yoast-svg-icon-mobile c24"
                                  fill="currentColor"
                                  focusable="false"
                                  role="img"
                                  size="22px"
                                  viewBox="0 0 1792 1792"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M976 1408q0-33-23.5-56.5t-56.5-23.5-56.5 23.5-23.5 56.5 23.5 56.5 56.5 23.5 56.5-23.5 23.5-56.5zm208-160v-704q0-13-9.5-22.5t-22.5-9.5h-512q-13 0-22.5 9.5t-9.5 22.5v704q0 13 9.5 22.5t22.5 9.5h512q13 0 22.5-9.5t9.5-22.5zm-192-848q0-16-16-16h-160q-16 0-16 16t16 16h160q16 0 16-16zm288-16v1024q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-1024q0-52 38-90t90-38h512q52 0 90 38t38 90z"
                                  />
                                </svg>
                              </SvgIcon__StyledSvg>
                            </SvgIcon>
                            <ScreenReaderText>
                              <span
                                className="screen-reader-text"
                                style={
                                  Object {
                                    "clip": "rect(1px, 1px, 1px, 1px)",
                                    "height": "1px",
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "width": "1px",
                                  }
                                }
                              >
                                Mobile preview
                              </span>
                            </ScreenReaderText>
                          </button>
                        </Button__BaseButton>
                      </Button>
                    </Button>
                  </Button>
                </Button>
              </Button>
            </ModeSwitcher__SwitcherButton>
            <ModeSwitcher__SwitcherButton
              aria-pressed={false}
              isActive={false}
              onClick={[Function]}
            >
              <Button
                aria-pressed={false}
                className="c25"
                isActive={false}
                onClick={[Function]}
              >
                <Button
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-pressed={false}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c25 c2"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  isActive={false}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <Button
                    activeBackgroundColor="#f7f7f7"
                    activeBorderColor="#888"
                    activeColor="#000"
                    aria-pressed={false}
                    backgroundColor="#f7f7f7"
                    borderColor="#ccc"
                    boxShadowColor="#ccc"
                    className="c25 c2 Button-kDSBcD c3"
                    focusBackgroundColor="#fff"
                    focusBorderColor="#0066cd"
                    focusColor="#000"
                    hoverBackgroundColor="#fff"
                    hoverBorderColor="#888"
                    hoverColor="#000"
                    isActive={false}
                    onClick={[Function]}
                    textColor="#555"
                    type="button"
                  >
                    <Button
                      activeBackgroundColor="#f7f7f7"
                      activeBorderColor="#888"
                      activeColor="#000"
                      aria-pressed={false}
                      backgroundColor="#f7f7f7"
                      borderColor="#ccc"
                      boxShadowColor="#ccc"
                      className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                      focusBackgroundColor="#fff"
                      focusBorderColor="#0066cd"
                      focusColor="#000"
                      hoverBackgroundColor="#fff"
                      hoverBorderColor="#888"
                      hoverColor="#000"
                      isActive={false}
                      onClick={[Function]}
                      textColor="#555"
                      type="button"
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-pressed={false}
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        isActive={false}
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button__BaseButton
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-pressed={false}
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          isActive={false}
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <button
                            aria-pressed={false}
                            className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                            onClick={[Function]}
                            type="button"
                          >
                            <SvgIcon
                              color="currentColor"
                              icon="desktop"
                              size="18px"
                            >
                              <SvgIcon__StyledSvg
                                aria-hidden={true}
                                className="yoast-svg-icon yoast-svg-icon-desktop"
                                fill="currentColor"
                                focusable="false"
                                role="img"
                                size="18px"
                                viewBox="0 0 1792 1792"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="yoast-svg-icon yoast-svg-icon-desktop c26"
                                  fill="currentColor"
                                  focusable="false"
                                  role="img"
                                  size="18px"
                                  viewBox="0 0 1792 1792"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M1728 992v-832q0-13-9.5-22.5t-22.5-9.5h-1600q-13 0-22.5 9.5t-9.5 22.5v832q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5zm128-832v1088q0 66-47 113t-113 47h-544q0 37 16 77.5t32 71 16 43.5q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45q0-14 16-44t32-70 16-78h-544q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1600q66 0 113 47t47 113z"
                                  />
                                </svg>
                              </SvgIcon__StyledSvg>
                            </SvgIcon>
                            <ScreenReaderText>
                              <span
                                className="screen-reader-text"
                                style={
                                  Object {
                                    "clip": "rect(1px, 1px, 1px, 1px)",
                                    "height": "1px",
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "width": "1px",
                                  }
                                }
                              >
                                Desktop preview
                              </span>
                            </ScreenReaderText>
                          </button>
                        </Button__BaseButton>
                      </Button>
                    </Button>
                  </Button>
                </Button>
              </Button>
            </ModeSwitcher__SwitcherButton>
          </div>
        </ModeSwitcher__Switcher>
      </ModeSwitcher>
      <Button
        aria-expanded={true}
        innerRef={[Function]}
        onClick={[Function]}
      >
        <Button
          activeBackgroundColor="#f7f7f7"
          activeBorderColor="#888"
          activeColor="#000"
          aria-expanded={true}
          backgroundColor="#f7f7f7"
          borderColor="#ccc"
          boxShadowColor="#ccc"
          className="c27"
          focusBackgroundColor="#fff"
          focusBorderColor="#0066cd"
          focusColor="#000"
          hoverBackgroundColor="#fff"
          hoverBorderColor="#888"
          hoverColor="#000"
          innerRef={[Function]}
          onClick={[Function]}
          textColor="#555"
          type="button"
        >
          <Button
            activeBackgroundColor="#f7f7f7"
            activeBorderColor="#888"
            activeColor="#000"
            aria-expanded={true}
            backgroundColor="#f7f7f7"
            borderColor="#ccc"
            boxShadowColor="#ccc"
            className="c27 Button-kDSBcD c3"
            focusBackgroundColor="#fff"
            focusBorderColor="#0066cd"
            focusColor="#000"
            hoverBackgroundColor="#fff"
            hoverBorderColor="#888"
            hoverColor="#000"
            innerRef={[Function]}
            onClick={[Function]}
            textColor="#555"
            type="button"
          >
            <Button
              activeBackgroundColor="#f7f7f7"
              activeBorderColor="#888"
              activeColor="#000"
              aria-expanded={true}
              backgroundColor="#f7f7f7"
              borderColor="#ccc"
              boxShadowColor="#ccc"
              className="c27 Button-kDSBcD c3 Button-kDSBcD c4"
              focusBackgroundColor="#fff"
              focusBorderColor="#0066cd"
              focusColor="#000"
              hoverBackgroundColor="#fff"
              hoverBorderColor="#888"
              hoverColor="#000"
              innerRef={[Function]}
              onClick={[Function]}
              textColor="#555"
              type="button"
            >
              <Button
                activeBackgroundColor="#f7f7f7"
                activeBorderColor="#888"
                activeColor="#000"
                aria-expanded={true}
                backgroundColor="#f7f7f7"
                borderColor="#ccc"
                boxShadowColor="#ccc"
                className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                focusBackgroundColor="#fff"
                focusBorderColor="#0066cd"
                focusColor="#000"
                hoverBackgroundColor="#fff"
                hoverBorderColor="#888"
                hoverColor="#000"
                innerRef={[Function]}
                onClick={[Function]}
                textColor="#555"
                type="button"
              >
                <Button__BaseButton
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-expanded={true}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  innerRef={[Function]}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <button
                    aria-expanded={true}
                    className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                    onClick={[Function]}
                    type="button"
                  >
                    <SvgIcon
                      icon="edit"
                      size="16px"
                    >
                      <SvgIcon__StyledSvg
                        aria-hidden={true}
                        className="yoast-svg-icon yoast-svg-icon-edit"
                        focusable="false"
                        role="img"
                        size="16px"
                        viewBox="0 0 1792 1792"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <svg
                          aria-hidden={true}
                          className="yoast-svg-icon yoast-svg-icon-edit c9"
                          focusable="false"
                          role="img"
                          size="16px"
                          viewBox="0 0 1792 1792"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M491 1536l91-91-235-235-91 91v107h128v128h107zm523-928q0-22-22-22-10 0-17 7l-542 542q-7 7-7 17 0 22 22 22 10 0 17-7l542-542q7-7 7-17zm-54-192l416 416-832 832h-416v-416zm683 96q0 53-37 90l-166 166-416-416 166-165q36-38 90-38 53 0 91 38l235 234q37 39 37 91z"
                          />
                        </svg>
                      </SvgIcon__StyledSvg>
                    </SvgIcon>
                    Edit snippet
                  </button>
                </Button__BaseButton>
              </Button>
            </Button>
          </Button>
        </Button>
      </Button>
      <SnippetEditorFields
        activeField={null}
        containerPadding="0 20px"
        data={
          Object {
            "description": "Test description, %%replacement_variable%%",
            "slug": "test-slug",
            "title": "Test title",
          }
        }
        descriptionEditorFieldPlaceholder="Modify your meta description by editing it right here"
        descriptionLengthProgress={
          Object {
            "actual": 42,
            "max": 156,
            "score": 6,
          }
        }
        hoveredField={null}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        recommendedReplacementVariables={Array []}
        replacementVariables={Array []}
        titleLengthProgress={
          Object {
            "actual": 0,
            "max": 600,
            "score": 1,
          }
        }
      >
        <Shared__StyledEditor
          padding="0 20px"
        >
          <section
            className="c28"
          >
            <Shared__FormSection>
              <div
                className="c29"
              >
                <ReplacementVariableEditor
                  content="Test title"
                  editorRef={[Function]}
                  fieldId="snippet-editor-field-title"
                  isActive={false}
                  isHovered={false}
                  label="SEO title"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  recommendedReplacementVariables={Array []}
                  replacementVariables={Array []}
                  withCaret={true}
                >
                  <Shared__SimulatedLabel
                    id="30"
                    onClick={[Function]}
                  >
                    <div
                      className="c30"
                      id="30"
                      onClick={[Function]}
                    >
                      SEO title
                    </div>
                  </Shared__SimulatedLabel>
                  <Shared__TriggerReplacementVariableSuggestionsButton
                    onClick={[Function]}
                  >
                    <Button
                      className="c31"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c31 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c31 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <SvgIcon
                                    icon="plus-circle"
                                    size="16px"
                                  >
                                    <SvgIcon__StyledSvg
                                      aria-hidden={true}
                                      className="yoast-svg-icon yoast-svg-icon-plus-circle"
                                      focusable="false"
                                      role="img"
                                      size="16px"
                                      viewBox="0 0 1792 1792"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-plus-circle c9"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M1344 960v-128q0-26-19-45t-45-19h-256v-256q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v256h-256q-26 0-45 19t-19 45v128q0 26 19 45t45 19h256v256q0 26 19 45t45 19h128q26 0 45-19t19-45v-256h256q26 0 45-19t19-45zm320-64q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                        />
                                      </svg>
                                    </SvgIcon__StyledSvg>
                                  </SvgIcon>
                                  Insert snippet variable
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </Shared__TriggerReplacementVariableSuggestionsButton>
                  <Shared__InputContainer
                    id="snippet-editor-field-title"
                    isActive={false}
                    isHovered={false}
                    onClick={[Function]}
                  >
                    <div
                      className="c32"
                      id="snippet-editor-field-title"
                      onClick={[Function]}
                    >
                      <Wrapper
                        ariaLabelledBy="30"
                        content="Test title"
                        innerRef={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        recommendedReplacementVariables={Array []}
                        replacementVariables={Array []}
                      >
                        <ReplacementVariableEditorStandalone
                          ariaLabelledBy="30"
                          content="Test title"
                          innerRef={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          recommendedReplacementVariables={Array []}
                          replacementVariables={Array []}
                        >
                          <div />
                        </ReplacementVariableEditorStandalone>
                      </Wrapper>
                    </div>
                  </Shared__InputContainer>
                </ReplacementVariableEditor>
                <ProgressBar
                  aria-hidden="true"
                  backgroundColor="#f7f7f7"
                  borderColor="#ddd"
                  max={600}
                  progressColor="#dc3232"
                  value={0}
                >
                  <progress
                    aria-hidden="true"
                    className="c33"
                    max={600}
                    value={0}
                  />
                </ProgressBar>
              </div>
            </Shared__FormSection>
            <Shared__FormSection>
              <div
                className="c29"
              >
                <Shared__SimulatedLabel
                  id="snippet-editor-field-29-slug"
                  onClick={[Function]}
                >
                  <div
                    className="c30"
                    id="snippet-editor-field-29-slug"
                    onClick={[Function]}
                  >
                    Slug
                  </div>
                </Shared__SimulatedLabel>
                <Shared__InputContainer
                  isActive={false}
                  isHovered={false}
                  onClick={[Function]}
                >
                  <div
                    className="c34"
                    onClick={[Function]}
                  >
                    <SnippetEditorFields__SlugInput
                      aria-labelledby="snippet-editor-field-29-slug"
                      id="snippet-editor-field-slug"
                      innerRef={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      value="test-slug"
                    >
                      <input
                        aria-labelledby="snippet-editor-field-29-slug"
                        className="c35"
                        id="snippet-editor-field-slug"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        value="test-slug"
                      />
                    </SnippetEditorFields__SlugInput>
                  </div>
                </Shared__InputContainer>
              </div>
            </Shared__FormSection>
            <Shared__FormSection>
              <div
                className="c29"
              >
                <ReplacementVariableEditor
                  content="Test description, %%replacement_variable%%"
                  editorRef={[Function]}
                  fieldId="snippet-editor-field-description"
                  isActive={false}
                  isHovered={false}
                  label="Meta description"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  placeholder="Modify your meta description by editing it right here"
                  recommendedReplacementVariables={Array []}
                  replacementVariables={Array []}
                  type="description"
                  withCaret={true}
                >
                  <Shared__SimulatedLabel
                    id="31"
                    onClick={[Function]}
                  >
                    <div
                      className="c30"
                      id="31"
                      onClick={[Function]}
                    >
                      Meta description
                    </div>
                  </Shared__SimulatedLabel>
                  <Shared__TriggerReplacementVariableSuggestionsButton
                    onClick={[Function]}
                  >
                    <Button
                      className="c31"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c31 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c31 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <SvgIcon
                                    icon="plus-circle"
                                    size="16px"
                                  >
                                    <SvgIcon__StyledSvg
                                      aria-hidden={true}
                                      className="yoast-svg-icon yoast-svg-icon-plus-circle"
                                      focusable="false"
                                      role="img"
                                      size="16px"
                                      viewBox="0 0 1792 1792"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-plus-circle c9"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M1344 960v-128q0-26-19-45t-45-19h-256v-256q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v256h-256q-26 0-45 19t-19 45v128q0 26 19 45t45 19h256v256q0 26 19 45t45 19h128q26 0 45-19t19-45v-256h256q26 0 45-19t19-45zm320-64q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                        />
                                      </svg>
                                    </SvgIcon__StyledSvg>
                                  </SvgIcon>
                                  Insert snippet variable
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </Shared__TriggerReplacementVariableSuggestionsButton>
                  <Shared__InputContainer
                    id="snippet-editor-field-description"
                    isActive={false}
                    isHovered={false}
                    onClick={[Function]}
                  >
                    <div
                      className="c36"
                      id="snippet-editor-field-description"
                      onClick={[Function]}
                    >
                      <Wrapper
                        ariaLabelledBy="31"
                        content="Test description, %%replacement_variable%%"
                        innerRef={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        placeholder="Modify your meta description by editing it right here"
                        recommendedReplacementVariables={Array []}
                        replacementVariables={Array []}
                      >
                        <ReplacementVariableEditorStandalone
                          ariaLabelledBy="31"
                          content="Test description, %%replacement_variable%%"
                          innerRef={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Modify your meta description by editing it right here"
                          recommendedReplacementVariables={Array []}
                          replacementVariables={Array []}
                        >
                          <div />
                        </ReplacementVariableEditorStandalone>
                      </Wrapper>
                    </div>
                  </Shared__InputContainer>
                </ReplacementVariableEditor>
                <ProgressBar
                  aria-hidden="true"
                  backgroundColor="#f7f7f7"
                  borderColor="#ddd"
                  max={156}
                  progressColor="#ee7c1b"
                  value={42}
                >
                  <progress
                    aria-hidden="true"
                    className="c37"
                    max={156}
                    value={42}
                  />
                </ProgressBar>
              </div>
            </Shared__FormSection>
          </section>
        </Shared__StyledEditor>
      </SnippetEditorFields>
      <Button
        onClick={[Function]}
      >
        <Button
          activeBackgroundColor="#f7f7f7"
          activeBorderColor="#888"
          activeColor="#000"
          backgroundColor="#f7f7f7"
          borderColor="#ccc"
          boxShadowColor="#ccc"
          className="c38"
          focusBackgroundColor="#fff"
          focusBorderColor="#0066cd"
          focusColor="#000"
          hoverBackgroundColor="#fff"
          hoverBorderColor="#888"
          hoverColor="#000"
          onClick={[Function]}
          textColor="#555"
          type="button"
        >
          <Button
            activeBackgroundColor="#f7f7f7"
            activeBorderColor="#888"
            activeColor="#000"
            backgroundColor="#f7f7f7"
            borderColor="#ccc"
            boxShadowColor="#ccc"
            className="c38 Button-kDSBcD c3"
            focusBackgroundColor="#fff"
            focusBorderColor="#0066cd"
            focusColor="#000"
            hoverBackgroundColor="#fff"
            hoverBorderColor="#888"
            hoverColor="#000"
            onClick={[Function]}
            textColor="#555"
            type="button"
          >
            <Button
              activeBackgroundColor="#f7f7f7"
              activeBorderColor="#888"
              activeColor="#000"
              backgroundColor="#f7f7f7"
              borderColor="#ccc"
              boxShadowColor="#ccc"
              className="c38 Button-kDSBcD c3 Button-kDSBcD c4"
              focusBackgroundColor="#fff"
              focusBorderColor="#0066cd"
              focusColor="#000"
              hoverBackgroundColor="#fff"
              hoverBorderColor="#888"
              hoverColor="#000"
              onClick={[Function]}
              textColor="#555"
              type="button"
            >
              <Button
                activeBackgroundColor="#f7f7f7"
                activeBorderColor="#888"
                activeColor="#000"
                backgroundColor="#f7f7f7"
                borderColor="#ccc"
                boxShadowColor="#ccc"
                className="c38 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                focusBackgroundColor="#fff"
                focusBorderColor="#0066cd"
                focusColor="#000"
                hoverBackgroundColor="#fff"
                hoverBorderColor="#888"
                hoverColor="#000"
                onClick={[Function]}
                textColor="#555"
                type="button"
              >
                <Button__BaseButton
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c38 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <button
                    className="c38 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                    onClick={[Function]}
                    type="button"
                  >
                    Close snippet editor
                  </button>
                </Button__BaseButton>
              </Button>
            </Button>
          </Button>
        </Button>
      </Button>
    </div>
  </ErrorBoundary>
</SnippetEditor>
`;

exports[`SnippetEditor calls callbacks when the editors are focused or changed 3`] = `
.c7 {
  color: #555;
  border-color: #ccc;
  background: #f7f7f7;
  box-shadow: 0 1px 0 rgba( 204,204,204,1 );
}

.c2 {
  font-size: 0.8rem;
}

.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  vertical-align: middle;
  border-width: 1px;
  border-style: solid;
  margin: 0;
  padding: 4px 10px;
  border-radius: 3px;
  cursor: pointer;
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  font-weight: inherit;
  text-align: left;
  overflow: visible;
  min-height: 32px;
}

.c3 svg {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c4:hover {
  color: #000;
  background-color: #fff;
  border-color: #888;
}

.c5::-moz-focus-inner {
  border-width: 0;
}

.c5:focus {
  outline: none;
  border-color: #0066cd;
  color: #000;
  background-color: #fff;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c6:active {
  color: #000;
  background-color: #f7f7f7;
  border-color: #888;
  box-shadow: inset 0 2px 5px -3px rgba( 0,0,0,0.5 );
}

.c27 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 10px 0 0 4px;
  fill: #555;
  padding-left: 8px;
}

.c27 svg {
  margin-right: 7px;
}

.c38 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin-top: 24px;
}

.c10 >:first-child {
  overflow: hidden;
  -webkit-transition: height 300ms ease-out;
  transition: height 300ms ease-out;
}

.c0 {
  max-width: 600px;
  font-weight: normal;
  margin: 0 20px 0 25px;
}

.c1 {
  min-width: 14px;
  min-height: 14px;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  border: 1px solid transparent;
  box-shadow: none;
  display: block;
  margin: -44px -10px 10px 0;
  background-color: transparent;
  float: right;
  padding: 3px 0 0 6px;
}

.c1:hover {
  color: #0066cd;
}

.c1:focus {
  border: 1px solid #0066cd;
  outline: none;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c1:focus svg {
  fill: #0066cd;
  color: #0066cd;
}

.c1:active {
  box-shadow: none;
}

.c8:hover {
  fill: #0066cd;
}

.c32 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
}

.c32 .public-DraftStyleDefault-block {
  line-height: 24px;
}

.c32::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c34 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
}

.c34::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c36 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
  min-height: 72px;
  padding: 2px 6px;
  line-height: 24px;
}

.c36 .public-DraftEditorPlaceholder-root {
  color: #646464;
}

.c36 .public-DraftEditorPlaceholder-hasFocus {
  color: #646464;
}

.c36::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c29 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin: 24px 0 0 0;
}

.c28 {
  padding: 0 20px;
}

.c30 {
  -webkit-flex: 1 1 200px;
  -ms-flex: 1 1 200px;
  flex: 1 1 200px;
  min-width: 200px;
  cursor: pointer;
  font-size: 16px;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 4px 0;
}

.c31 {
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  padding-left: 8px;
  height: 33px;
  border: 1px solid #dbdbdb;
  font-size: 13px;
}

.c31 svg {
  margin-right: 7px;
  fill: #555;
}

.c11 {
  border-bottom: 1px hidden #fff;
  border-radius: 2px;
  box-shadow: 0 1px 2px rgba(0,0,0,.2);
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  max-width: 600px;
  box-sizing: border-box;
  font-size: 14px;
}

.c13 {
  cursor: pointer;
  position: relative;
}

.c15 {
  color: #1e0fbe;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-size: 18px;
  line-height: 1.2;
  font-weight: normal;
  margin: 0;
  display: inline-block;
  overflow: hidden;
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c14 {
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c16 {
  display: inline-block;
  font-size: 16px;
  line-height: 1.2em;
  max-height: 2.4em;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c17 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
}

.c18 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%;
}

.c21 {
  color: #545454;
  cursor: pointer;
  position: relative;
  max-width: 600px;
  font-size: 13px;
}

.c20 {
  font-size: 14px;
  line-height: 20px;
}

.c12 {
  padding: 8px 16px;
}

.c19 {
  border: 0;
  border-bottom: 1px solid #DFE1E5;
  margin: 0;
}

.c33 {
  box-sizing: border-box;
  width: 100%;
  height: 8px;
  display: block;
  margin-top: 8px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #f7f7f7;
  border: 1px solid #ddd;
}

.c33::-webkit-progress-bar {
  background-color: #f7f7f7;
}

.c33::-webkit-progress-value {
  background-color: #dc3232;
  -webkit-transition: width 250ms;
  transition: width 250ms;
}

.c33::-moz-progress-bar {
  background-color: #dc3232;
}

.c33::-ms-fill {
  background-color: #dc3232;
  border: 0;
}

.c37 {
  box-sizing: border-box;
  width: 100%;
  height: 8px;
  display: block;
  margin-top: 8px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #f7f7f7;
  border: 1px solid #ddd;
}

.c37::-webkit-progress-bar {
  background-color: #f7f7f7;
}

.c37::-webkit-progress-value {
  background-color: #ee7c1b;
  -webkit-transition: width 250ms;
  transition: width 250ms;
}

.c37::-moz-progress-bar {
  background-color: #ee7c1b;
}

.c37::-ms-fill {
  background-color: #ee7c1b;
  border: 0;
}

.c35 {
  border: none;
  width: 100%;
  height: inherit;
  line-height: inherit;
  font-family: inherit;
  font-size: inherit;
  color: inherit;
}

.c35:focus {
  outline: 0;
}

.c23 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: #555;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 3px 0 0 3px;
}

.c23:hover,
.c23:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c25 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: transparent;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 0 3px 3px 0;
}

.c25:hover,
.c25:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c22 {
  display: inline-block;
  margin-top: 10px;
  border: 1px solid #dbdbdb;
  border-radius: 4px;
  background-color: #f7f7f7;
  vertical-align: top;
}

.c9 {
  width: 16px;
  height: 16px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c24 {
  width: 22px;
  height: 22px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c26 {
  width: 18px;
  height: 18px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

@media all and (-ms-high-contrast:none),(-ms-high-contrast:active) {
  .c3::after {
    display: inline-block;
    content: "";
    min-height: 22px;
  }
}

<SnippetEditor
  baseUrl="http://example.org/"
  data={
    Object {
      "description": "Test description, %%replacement_variable%%",
      "slug": "test-slug",
      "title": "Test title",
    }
  }
  date=""
  descriptionEditorFieldPlaceholder="Modify your meta description by editing it right here"
  descriptionLengthProgress={
    Object {
      "actual": 0,
      "max": 156,
      "score": 0,
    }
  }
  hasPaperStyle={true}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "textComponent": "span",
    }
  }
  locale="en"
  mapEditorDataToPreview={null}
  mode="mobile"
  onChange={[MockFunction]}
  onChangeAnalysisData={[Function]}
  recommendedReplacementVariables={Array []}
  replacementVariables={Array []}
  titleLengthProgress={
    Object {
      "actual": 0,
      "max": 600,
      "score": 0,
    }
  }
>
  <ErrorBoundary>
    <div>
      <SnippetPreview
        activeField={null}
        breadcrumbs={null}
        date=""
        description="Test description, %%replacement_variable%%"
        hoveredField={null}
        isAmp={false}
        keyword=""
        locale="en"
        mode="mobile"
        onHover={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        title="Test title"
        url="example.org/test-slug"
      >
        <section>
          <div>
            <HelpTextWrapper
              className="yoast-help"
              helpText={
                Array [
                  "This is a rendering of what this post might look like in Google's search results. ",
                  <OutboundLink
                    href="https://yoa.st/snippet-preview"
                  >
                    Learn more about the Snippet Preview.
                  </OutboundLink>,
                ]
              }
              helpTextButtonLabel="Help on the Snippet Preview"
              panelMaxWidth="400px"
            >
              <HelpTextWrapper__HelpTextContainer
                className="yoast-help"
              >
                <div
                  className="yoast-help c0"
                >
                  <HelpTextWrapper__HelpTextButton
                    aria-controls={null}
                    aria-expanded={false}
                    aria-label="Help on the Snippet Preview"
                    className="yoast-help__button"
                    onClick={[Function]}
                  >
                    <Button
                      aria-controls={null}
                      aria-expanded={false}
                      aria-label="Help on the Snippet Preview"
                      className="yoast-help__button c1"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-controls={null}
                        aria-expanded={false}
                        aria-label="Help on the Snippet Preview"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="yoast-help__button c1 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-controls={null}
                          aria-expanded={false}
                          aria-label="Help on the Snippet Preview"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="yoast-help__button c1 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            aria-controls={null}
                            aria-expanded={false}
                            aria-label="Help on the Snippet Preview"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              aria-controls={null}
                              aria-expanded={false}
                              aria-label="Help on the Snippet Preview"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                aria-controls={null}
                                aria-expanded={false}
                                aria-label="Help on the Snippet Preview"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  aria-controls={null}
                                  aria-expanded={false}
                                  aria-label="Help on the Snippet Preview"
                                  className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <HelpTextWrapper__StyledSvg
                                    color="#646464"
                                    icon="question-circle"
                                    size="16px"
                                  >
                                    <SvgIcon
                                      className="c8"
                                      color="#646464"
                                      icon="question-circle"
                                      size="16px"
                                    >
                                      <SvgIcon__StyledSvg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-question-circle c8"
                                        fill="#646464"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="yoast-svg-icon yoast-svg-icon-question-circle c8 c9"
                                          fill="#646464"
                                          focusable="false"
                                          role="img"
                                          size="16px"
                                          viewBox="0 0 1792 1792"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M1024 1376v-192q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23-9t9-23zm256-672q0-88-55.5-163t-138.5-116-170-41q-243 0-371 213-15 24 8 42l132 100q7 6 19 6 16 0 25-12 53-68 86-92 34-24 86-24 48 0 85.5 26t37.5 59q0 38-20 61t-68 45q-63 28-115.5 86.5t-52.5 125.5v36q0 14 9 23t23 9h192q14 0 23-9t9-23q0-19 21.5-49.5t54.5-49.5q32-18 49-28.5t46-35 44.5-48 28-60.5 12.5-81zm384 192q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                          />
                                        </svg>
                                      </SvgIcon__StyledSvg>
                                    </SvgIcon>
                                  </HelpTextWrapper__StyledSvg>
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </HelpTextWrapper__HelpTextButton>
                  <YoastSlideToggle
                    duration={300}
                    isOpen={false}
                  >
                    <animations__YoastSlideToggleContainer
                      duration={300}
                    >
                      <div
                        className="c10"
                      >
                        <CSSTransition
                          classNames="slide"
                          in={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={true}
                        >
                          <Transition
                            appear={false}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={true}
                          />
                        </CSSTransition>
                      </div>
                    </animations__YoastSlideToggleContainer>
                  </YoastSlideToggle>
                </div>
              </HelpTextWrapper__HelpTextContainer>
            </HelpTextWrapper>
          </div>
          <SnippetPreview__MobileContainer
            padding={20}
            width={640}
          >
            <div
              className="c11"
              width={640}
            >
              <SnippetPreview__MobilePartContainer>
                <div
                  className="c12"
                >
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      SEO title preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__BaseTitle
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                  >
                    <div
                      className="c13"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                    >
                      <SnippetPreview__TitleBounded>
                        <SnippetPreview__Title
                          className="c14"
                        >
                          <div
                            className="c14 c15"
                          >
                            <SnippetPreview__TitleUnboundedMobile
                              innerRef={[Function]}
                            >
                              <span
                                className="c16"
                              >
                                Test title
                              </span>
                            </SnippetPreview__TitleUnboundedMobile>
                          </div>
                        </SnippetPreview__Title>
                      </SnippetPreview__TitleBounded>
                    </div>
                  </SnippetPreview__BaseTitle>
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      Url preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__BaseUrl>
                    <div
                      className="c17"
                    >
                      <SnippetPreview__BaseUrlOverflowContainer
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                      >
                        <div
                          className="c18"
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                        >
                          example.org â€º test-slug
                        </div>
                      </SnippetPreview__BaseUrlOverflowContainer>
                    </div>
                  </SnippetPreview__BaseUrl>
                </div>
              </SnippetPreview__MobilePartContainer>
              <SnippetPreview__Separator>
                <hr
                  className="c19"
                />
              </SnippetPreview__Separator>
              <SnippetPreview__MobilePartContainer>
                <div
                  className="c12"
                >
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      Meta description preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__MobileDescription
                    isDescriptionPlaceholder={false}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                  >
                    <SnippetPreview__DesktopDescription
                      className="c20"
                      isDescriptionPlaceholder={false}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                    >
                      <div
                        className="c20 c21"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                      >
                        <SnippetPreview__MobileDescription
                          innerRef={[Function]}
                          isDescriptionPlaceholder={false}
                        >
                          <SnippetPreview__DesktopDescription
                            className="c20"
                            innerRef={[Function]}
                            isDescriptionPlaceholder={false}
                          >
                            <div
                              className="c20 c21"
                            >
                              Test description, %%replacement_variable%%
                            </div>
                          </SnippetPreview__DesktopDescription>
                        </SnippetPreview__MobileDescription>
                      </div>
                    </SnippetPreview__DesktopDescription>
                  </SnippetPreview__MobileDescription>
                </div>
              </SnippetPreview__MobilePartContainer>
            </div>
          </SnippetPreview__MobileContainer>
        </section>
      </SnippetPreview>
      <ModeSwitcher
        active="mobile"
        onChange={[Function]}
      >
        <ModeSwitcher__Switcher>
          <div
            className="c22"
          >
            <ModeSwitcher__SwitcherButton
              aria-pressed={true}
              isActive={true}
              onClick={[Function]}
            >
              <Button
                aria-pressed={true}
                className="c23"
                isActive={true}
                onClick={[Function]}
              >
                <Button
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-pressed={true}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c23 c2"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  isActive={true}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <Button
                    activeBackgroundColor="#f7f7f7"
                    activeBorderColor="#888"
                    activeColor="#000"
                    aria-pressed={true}
                    backgroundColor="#f7f7f7"
                    borderColor="#ccc"
                    boxShadowColor="#ccc"
                    className="c23 c2 Button-kDSBcD c3"
                    focusBackgroundColor="#fff"
                    focusBorderColor="#0066cd"
                    focusColor="#000"
                    hoverBackgroundColor="#fff"
                    hoverBorderColor="#888"
                    hoverColor="#000"
                    isActive={true}
                    onClick={[Function]}
                    textColor="#555"
                    type="button"
                  >
                    <Button
                      activeBackgroundColor="#f7f7f7"
                      activeBorderColor="#888"
                      activeColor="#000"
                      aria-pressed={true}
                      backgroundColor="#f7f7f7"
                      borderColor="#ccc"
                      boxShadowColor="#ccc"
                      className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                      focusBackgroundColor="#fff"
                      focusBorderColor="#0066cd"
                      focusColor="#000"
                      hoverBackgroundColor="#fff"
                      hoverBorderColor="#888"
                      hoverColor="#000"
                      isActive={true}
                      onClick={[Function]}
                      textColor="#555"
                      type="button"
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-pressed={true}
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        isActive={true}
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button__BaseButton
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-pressed={true}
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          isActive={true}
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <button
                            aria-pressed={true}
                            className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                            onClick={[Function]}
                            type="button"
                          >
                            <SvgIcon
                              color="currentColor"
                              icon="mobile"
                              size="22px"
                            >
                              <SvgIcon__StyledSvg
                                aria-hidden={true}
                                className="yoast-svg-icon yoast-svg-icon-mobile"
                                fill="currentColor"
                                focusable="false"
                                role="img"
                                size="22px"
                                viewBox="0 0 1792 1792"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="yoast-svg-icon yoast-svg-icon-mobile c24"
                                  fill="currentColor"
                                  focusable="false"
                                  role="img"
                                  size="22px"
                                  viewBox="0 0 1792 1792"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M976 1408q0-33-23.5-56.5t-56.5-23.5-56.5 23.5-23.5 56.5 23.5 56.5 56.5 23.5 56.5-23.5 23.5-56.5zm208-160v-704q0-13-9.5-22.5t-22.5-9.5h-512q-13 0-22.5 9.5t-9.5 22.5v704q0 13 9.5 22.5t22.5 9.5h512q13 0 22.5-9.5t9.5-22.5zm-192-848q0-16-16-16h-160q-16 0-16 16t16 16h160q16 0 16-16zm288-16v1024q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-1024q0-52 38-90t90-38h512q52 0 90 38t38 90z"
                                  />
                                </svg>
                              </SvgIcon__StyledSvg>
                            </SvgIcon>
                            <ScreenReaderText>
                              <span
                                className="screen-reader-text"
                                style={
                                  Object {
                                    "clip": "rect(1px, 1px, 1px, 1px)",
                                    "height": "1px",
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "width": "1px",
                                  }
                                }
                              >
                                Mobile preview
                              </span>
                            </ScreenReaderText>
                          </button>
                        </Button__BaseButton>
                      </Button>
                    </Button>
                  </Button>
                </Button>
              </Button>
            </ModeSwitcher__SwitcherButton>
            <ModeSwitcher__SwitcherButton
              aria-pressed={false}
              isActive={false}
              onClick={[Function]}
            >
              <Button
                aria-pressed={false}
                className="c25"
                isActive={false}
                onClick={[Function]}
              >
                <Button
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-pressed={false}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c25 c2"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  isActive={false}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <Button
                    activeBackgroundColor="#f7f7f7"
                    activeBorderColor="#888"
                    activeColor="#000"
                    aria-pressed={false}
                    backgroundColor="#f7f7f7"
                    borderColor="#ccc"
                    boxShadowColor="#ccc"
                    className="c25 c2 Button-kDSBcD c3"
                    focusBackgroundColor="#fff"
                    focusBorderColor="#0066cd"
                    focusColor="#000"
                    hoverBackgroundColor="#fff"
                    hoverBorderColor="#888"
                    hoverColor="#000"
                    isActive={false}
                    onClick={[Function]}
                    textColor="#555"
                    type="button"
                  >
                    <Button
                      activeBackgroundColor="#f7f7f7"
                      activeBorderColor="#888"
                      activeColor="#000"
                      aria-pressed={false}
                      backgroundColor="#f7f7f7"
                      borderColor="#ccc"
                      boxShadowColor="#ccc"
                      className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                      focusBackgroundColor="#fff"
                      focusBorderColor="#0066cd"
                      focusColor="#000"
                      hoverBackgroundColor="#fff"
                      hoverBorderColor="#888"
                      hoverColor="#000"
                      isActive={false}
                      onClick={[Function]}
                      textColor="#555"
                      type="button"
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-pressed={false}
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        isActive={false}
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button__BaseButton
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-pressed={false}
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          isActive={false}
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <button
                            aria-pressed={false}
                            className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                            onClick={[Function]}
                            type="button"
                          >
                            <SvgIcon
                              color="currentColor"
                              icon="desktop"
                              size="18px"
                            >
                              <SvgIcon__StyledSvg
                                aria-hidden={true}
                                className="yoast-svg-icon yoast-svg-icon-desktop"
                                fill="currentColor"
                                focusable="false"
                                role="img"
                                size="18px"
                                viewBox="0 0 1792 1792"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="yoast-svg-icon yoast-svg-icon-desktop c26"
                                  fill="currentColor"
                                  focusable="false"
                                  role="img"
                                  size="18px"
                                  viewBox="0 0 1792 1792"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M1728 992v-832q0-13-9.5-22.5t-22.5-9.5h-1600q-13 0-22.5 9.5t-9.5 22.5v832q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5zm128-832v1088q0 66-47 113t-113 47h-544q0 37 16 77.5t32 71 16 43.5q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45q0-14 16-44t32-70 16-78h-544q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1600q66 0 113 47t47 113z"
                                  />
                                </svg>
                              </SvgIcon__StyledSvg>
                            </SvgIcon>
                            <ScreenReaderText>
                              <span
                                className="screen-reader-text"
                                style={
                                  Object {
                                    "clip": "rect(1px, 1px, 1px, 1px)",
                                    "height": "1px",
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "width": "1px",
                                  }
                                }
                              >
                                Desktop preview
                              </span>
                            </ScreenReaderText>
                          </button>
                        </Button__BaseButton>
                      </Button>
                    </Button>
                  </Button>
                </Button>
              </Button>
            </ModeSwitcher__SwitcherButton>
          </div>
        </ModeSwitcher__Switcher>
      </ModeSwitcher>
      <Button
        aria-expanded={true}
        innerRef={[Function]}
        onClick={[Function]}
      >
        <Button
          activeBackgroundColor="#f7f7f7"
          activeBorderColor="#888"
          activeColor="#000"
          aria-expanded={true}
          backgroundColor="#f7f7f7"
          borderColor="#ccc"
          boxShadowColor="#ccc"
          className="c27"
          focusBackgroundColor="#fff"
          focusBorderColor="#0066cd"
          focusColor="#000"
          hoverBackgroundColor="#fff"
          hoverBorderColor="#888"
          hoverColor="#000"
          innerRef={[Function]}
          onClick={[Function]}
          textColor="#555"
          type="button"
        >
          <Button
            activeBackgroundColor="#f7f7f7"
            activeBorderColor="#888"
            activeColor="#000"
            aria-expanded={true}
            backgroundColor="#f7f7f7"
            borderColor="#ccc"
            boxShadowColor="#ccc"
            className="c27 Button-kDSBcD c3"
            focusBackgroundColor="#fff"
            focusBorderColor="#0066cd"
            focusColor="#000"
            hoverBackgroundColor="#fff"
            hoverBorderColor="#888"
            hoverColor="#000"
            innerRef={[Function]}
            onClick={[Function]}
            textColor="#555"
            type="button"
          >
            <Button
              activeBackgroundColor="#f7f7f7"
              activeBorderColor="#888"
              activeColor="#000"
              aria-expanded={true}
              backgroundColor="#f7f7f7"
              borderColor="#ccc"
              boxShadowColor="#ccc"
              className="c27 Button-kDSBcD c3 Button-kDSBcD c4"
              focusBackgroundColor="#fff"
              focusBorderColor="#0066cd"
              focusColor="#000"
              hoverBackgroundColor="#fff"
              hoverBorderColor="#888"
              hoverColor="#000"
              innerRef={[Function]}
              onClick={[Function]}
              textColor="#555"
              type="button"
            >
              <Button
                activeBackgroundColor="#f7f7f7"
                activeBorderColor="#888"
                activeColor="#000"
                aria-expanded={true}
                backgroundColor="#f7f7f7"
                borderColor="#ccc"
                boxShadowColor="#ccc"
                className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                focusBackgroundColor="#fff"
                focusBorderColor="#0066cd"
                focusColor="#000"
                hoverBackgroundColor="#fff"
                hoverBorderColor="#888"
                hoverColor="#000"
                innerRef={[Function]}
                onClick={[Function]}
                textColor="#555"
                type="button"
              >
                <Button__BaseButton
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-expanded={true}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  innerRef={[Function]}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <button
                    aria-expanded={true}
                    className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                    onClick={[Function]}
                    type="button"
                  >
                    <SvgIcon
                      icon="edit"
                      size="16px"
                    >
                      <SvgIcon__StyledSvg
                        aria-hidden={true}
                        className="yoast-svg-icon yoast-svg-icon-edit"
                        focusable="false"
                        role="img"
                        size="16px"
                        viewBox="0 0 1792 1792"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <svg
                          aria-hidden={true}
                          className="yoast-svg-icon yoast-svg-icon-edit c9"
                          focusable="false"
                          role="img"
                          size="16px"
                          viewBox="0 0 1792 1792"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M491 1536l91-91-235-235-91 91v107h128v128h107zm523-928q0-22-22-22-10 0-17 7l-542 542q-7 7-7 17 0 22 22 22 10 0 17-7l542-542q7-7 7-17zm-54-192l416 416-832 832h-416v-416zm683 96q0 53-37 90l-166 166-416-416 166-165q36-38 90-38 53 0 91 38l235 234q37 39 37 91z"
                          />
                        </svg>
                      </SvgIcon__StyledSvg>
                    </SvgIcon>
                    Edit snippet
                  </button>
                </Button__BaseButton>
              </Button>
            </Button>
          </Button>
        </Button>
      </Button>
      <SnippetEditorFields
        activeField={null}
        containerPadding="0 20px"
        data={
          Object {
            "description": "Test description, %%replacement_variable%%",
            "slug": "test-slug",
            "title": "Test title",
          }
        }
        descriptionEditorFieldPlaceholder="Modify your meta description by editing it right here"
        descriptionLengthProgress={
          Object {
            "actual": 42,
            "max": 156,
            "score": 6,
          }
        }
        hoveredField={null}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        recommendedReplacementVariables={Array []}
        replacementVariables={Array []}
        titleLengthProgress={
          Object {
            "actual": 0,
            "max": 600,
            "score": 1,
          }
        }
      >
        <Shared__StyledEditor
          padding="0 20px"
        >
          <section
            className="c28"
          >
            <Shared__FormSection>
              <div
                className="c29"
              >
                <ReplacementVariableEditor
                  content="Test title"
                  editorRef={[Function]}
                  fieldId="snippet-editor-field-title"
                  isActive={false}
                  isHovered={false}
                  label="SEO title"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  recommendedReplacementVariables={Array []}
                  replacementVariables={Array []}
                  withCaret={true}
                >
                  <Shared__SimulatedLabel
                    id="30"
                    onClick={[Function]}
                  >
                    <div
                      className="c30"
                      id="30"
                      onClick={[Function]}
                    >
                      SEO title
                    </div>
                  </Shared__SimulatedLabel>
                  <Shared__TriggerReplacementVariableSuggestionsButton
                    onClick={[Function]}
                  >
                    <Button
                      className="c31"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c31 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c31 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <SvgIcon
                                    icon="plus-circle"
                                    size="16px"
                                  >
                                    <SvgIcon__StyledSvg
                                      aria-hidden={true}
                                      className="yoast-svg-icon yoast-svg-icon-plus-circle"
                                      focusable="false"
                                      role="img"
                                      size="16px"
                                      viewBox="0 0 1792 1792"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-plus-circle c9"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M1344 960v-128q0-26-19-45t-45-19h-256v-256q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v256h-256q-26 0-45 19t-19 45v128q0 26 19 45t45 19h256v256q0 26 19 45t45 19h128q26 0 45-19t19-45v-256h256q26 0 45-19t19-45zm320-64q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                        />
                                      </svg>
                                    </SvgIcon__StyledSvg>
                                  </SvgIcon>
                                  Insert snippet variable
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </Shared__TriggerReplacementVariableSuggestionsButton>
                  <Shared__InputContainer
                    id="snippet-editor-field-title"
                    isActive={false}
                    isHovered={false}
                    onClick={[Function]}
                  >
                    <div
                      className="c32"
                      id="snippet-editor-field-title"
                      onClick={[Function]}
                    >
                      <Wrapper
                        ariaLabelledBy="30"
                        content="Test title"
                        innerRef={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        recommendedReplacementVariables={Array []}
                        replacementVariables={Array []}
                      >
                        <ReplacementVariableEditorStandalone
                          ariaLabelledBy="30"
                          content="Test title"
                          innerRef={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          recommendedReplacementVariables={Array []}
                          replacementVariables={Array []}
                        >
                          <div />
                        </ReplacementVariableEditorStandalone>
                      </Wrapper>
                    </div>
                  </Shared__InputContainer>
                </ReplacementVariableEditor>
                <ProgressBar
                  aria-hidden="true"
                  backgroundColor="#f7f7f7"
                  borderColor="#ddd"
                  max={600}
                  progressColor="#dc3232"
                  value={0}
                >
                  <progress
                    aria-hidden="true"
                    className="c33"
                    max={600}
                    value={0}
                  />
                </ProgressBar>
              </div>
            </Shared__FormSection>
            <Shared__FormSection>
              <div
                className="c29"
              >
                <Shared__SimulatedLabel
                  id="snippet-editor-field-29-slug"
                  onClick={[Function]}
                >
                  <div
                    className="c30"
                    id="snippet-editor-field-29-slug"
                    onClick={[Function]}
                  >
                    Slug
                  </div>
                </Shared__SimulatedLabel>
                <Shared__InputContainer
                  isActive={false}
                  isHovered={false}
                  onClick={[Function]}
                >
                  <div
                    className="c34"
                    onClick={[Function]}
                  >
                    <SnippetEditorFields__SlugInput
                      aria-labelledby="snippet-editor-field-29-slug"
                      id="snippet-editor-field-slug"
                      innerRef={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      value="test-slug"
                    >
                      <input
                        aria-labelledby="snippet-editor-field-29-slug"
                        className="c35"
                        id="snippet-editor-field-slug"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        value="test-slug"
                      />
                    </SnippetEditorFields__SlugInput>
                  </div>
                </Shared__InputContainer>
              </div>
            </Shared__FormSection>
            <Shared__FormSection>
              <div
                className="c29"
              >
                <ReplacementVariableEditor
                  content="Test description, %%replacement_variable%%"
                  editorRef={[Function]}
                  fieldId="snippet-editor-field-description"
                  isActive={false}
                  isHovered={false}
                  label="Meta description"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  placeholder="Modify your meta description by editing it right here"
                  recommendedReplacementVariables={Array []}
                  replacementVariables={Array []}
                  type="description"
                  withCaret={true}
                >
                  <Shared__SimulatedLabel
                    id="31"
                    onClick={[Function]}
                  >
                    <div
                      className="c30"
                      id="31"
                      onClick={[Function]}
                    >
                      Meta description
                    </div>
                  </Shared__SimulatedLabel>
                  <Shared__TriggerReplacementVariableSuggestionsButton
                    onClick={[Function]}
                  >
                    <Button
                      className="c31"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c31 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c31 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <SvgIcon
                                    icon="plus-circle"
                                    size="16px"
                                  >
                                    <SvgIcon__StyledSvg
                                      aria-hidden={true}
                                      className="yoast-svg-icon yoast-svg-icon-plus-circle"
                                      focusable="false"
                                      role="img"
                                      size="16px"
                                      viewBox="0 0 1792 1792"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-plus-circle c9"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M1344 960v-128q0-26-19-45t-45-19h-256v-256q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v256h-256q-26 0-45 19t-19 45v128q0 26 19 45t45 19h256v256q0 26 19 45t45 19h128q26 0 45-19t19-45v-256h256q26 0 45-19t19-45zm320-64q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                        />
                                      </svg>
                                    </SvgIcon__StyledSvg>
                                  </SvgIcon>
                                  Insert snippet variable
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </Shared__TriggerReplacementVariableSuggestionsButton>
                  <Shared__InputContainer
                    id="snippet-editor-field-description"
                    isActive={false}
                    isHovered={false}
                    onClick={[Function]}
                  >
                    <div
                      className="c36"
                      id="snippet-editor-field-description"
                      onClick={[Function]}
                    >
                      <Wrapper
                        ariaLabelledBy="31"
                        content="Test description, %%replacement_variable%%"
                        innerRef={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        placeholder="Modify your meta description by editing it right here"
                        recommendedReplacementVariables={Array []}
                        replacementVariables={Array []}
                      >
                        <ReplacementVariableEditorStandalone
                          ariaLabelledBy="31"
                          content="Test description, %%replacement_variable%%"
                          innerRef={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Modify your meta description by editing it right here"
                          recommendedReplacementVariables={Array []}
                          replacementVariables={Array []}
                        >
                          <div />
                        </ReplacementVariableEditorStandalone>
                      </Wrapper>
                    </div>
                  </Shared__InputContainer>
                </ReplacementVariableEditor>
                <ProgressBar
                  aria-hidden="true"
                  backgroundColor="#f7f7f7"
                  borderColor="#ddd"
                  max={156}
                  progressColor="#ee7c1b"
                  value={42}
                >
                  <progress
                    aria-hidden="true"
                    className="c37"
                    max={156}
                    value={42}
                  />
                </ProgressBar>
              </div>
            </Shared__FormSection>
          </section>
        </Shared__StyledEditor>
      </SnippetEditorFields>
      <Button
        onClick={[Function]}
      >
        <Button
          activeBackgroundColor="#f7f7f7"
          activeBorderColor="#888"
          activeColor="#000"
          backgroundColor="#f7f7f7"
          borderColor="#ccc"
          boxShadowColor="#ccc"
          className="c38"
          focusBackgroundColor="#fff"
          focusBorderColor="#0066cd"
          focusColor="#000"
          hoverBackgroundColor="#fff"
          hoverBorderColor="#888"
          hoverColor="#000"
          onClick={[Function]}
          textColor="#555"
          type="button"
        >
          <Button
            activeBackgroundColor="#f7f7f7"
            activeBorderColor="#888"
            activeColor="#000"
            backgroundColor="#f7f7f7"
            borderColor="#ccc"
            boxShadowColor="#ccc"
            className="c38 Button-kDSBcD c3"
            focusBackgroundColor="#fff"
            focusBorderColor="#0066cd"
            focusColor="#000"
            hoverBackgroundColor="#fff"
            hoverBorderColor="#888"
            hoverColor="#000"
            onClick={[Function]}
            textColor="#555"
            type="button"
          >
            <Button
              activeBackgroundColor="#f7f7f7"
              activeBorderColor="#888"
              activeColor="#000"
              backgroundColor="#f7f7f7"
              borderColor="#ccc"
              boxShadowColor="#ccc"
              className="c38 Button-kDSBcD c3 Button-kDSBcD c4"
              focusBackgroundColor="#fff"
              focusBorderColor="#0066cd"
              focusColor="#000"
              hoverBackgroundColor="#fff"
              hoverBorderColor="#888"
              hoverColor="#000"
              onClick={[Function]}
              textColor="#555"
              type="button"
            >
              <Button
                activeBackgroundColor="#f7f7f7"
                activeBorderColor="#888"
                activeColor="#000"
                backgroundColor="#f7f7f7"
                borderColor="#ccc"
                boxShadowColor="#ccc"
                className="c38 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                focusBackgroundColor="#fff"
                focusBorderColor="#0066cd"
                focusColor="#000"
                hoverBackgroundColor="#fff"
                hoverBorderColor="#888"
                hoverColor="#000"
                onClick={[Function]}
                textColor="#555"
                type="button"
              >
                <Button__BaseButton
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c38 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <button
                    className="c38 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                    onClick={[Function]}
                    type="button"
                  >
                    Close snippet editor
                  </button>
                </Button__BaseButton>
              </Button>
            </Button>
          </Button>
        </Button>
      </Button>
    </div>
  </ErrorBoundary>
</SnippetEditor>
`;

exports[`SnippetEditor closes when calling close() 1`] = `
.c7 {
  color: #555;
  border-color: #ccc;
  background: #f7f7f7;
  box-shadow: 0 1px 0 rgba( 204,204,204,1 );
}

.c2 {
  font-size: 0.8rem;
}

.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  vertical-align: middle;
  border-width: 1px;
  border-style: solid;
  margin: 0;
  padding: 4px 10px;
  border-radius: 3px;
  cursor: pointer;
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  font-weight: inherit;
  text-align: left;
  overflow: visible;
  min-height: 32px;
}

.c3 svg {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c4:hover {
  color: #000;
  background-color: #fff;
  border-color: #888;
}

.c5::-moz-focus-inner {
  border-width: 0;
}

.c5:focus {
  outline: none;
  border-color: #0066cd;
  color: #000;
  background-color: #fff;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c6:active {
  color: #000;
  background-color: #f7f7f7;
  border-color: #888;
  box-shadow: inset 0 2px 5px -3px rgba( 0,0,0,0.5 );
}

.c27 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 10px 0 0 4px;
  fill: #555;
  padding-left: 8px;
}

.c27 svg {
  margin-right: 7px;
}

.c38 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin-top: 24px;
}

.c10 >:first-child {
  overflow: hidden;
  -webkit-transition: height 300ms ease-out;
  transition: height 300ms ease-out;
}

.c0 {
  max-width: 600px;
  font-weight: normal;
  margin: 0 20px 0 25px;
}

.c1 {
  min-width: 14px;
  min-height: 14px;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  border: 1px solid transparent;
  box-shadow: none;
  display: block;
  margin: -44px -10px 10px 0;
  background-color: transparent;
  float: right;
  padding: 3px 0 0 6px;
}

.c1:hover {
  color: #0066cd;
}

.c1:focus {
  border: 1px solid #0066cd;
  outline: none;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c1:focus svg {
  fill: #0066cd;
  color: #0066cd;
}

.c1:active {
  box-shadow: none;
}

.c8:hover {
  fill: #0066cd;
}

.c32 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
}

.c32 .public-DraftStyleDefault-block {
  line-height: 24px;
}

.c32::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c34 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
}

.c34::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c36 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
  min-height: 72px;
  padding: 2px 6px;
  line-height: 24px;
}

.c36 .public-DraftEditorPlaceholder-root {
  color: #646464;
}

.c36 .public-DraftEditorPlaceholder-hasFocus {
  color: #646464;
}

.c36::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c29 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin: 24px 0 0 0;
}

.c28 {
  padding: 0 20px;
}

.c30 {
  -webkit-flex: 1 1 200px;
  -ms-flex: 1 1 200px;
  flex: 1 1 200px;
  min-width: 200px;
  cursor: pointer;
  font-size: 16px;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 4px 0;
}

.c31 {
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  padding-left: 8px;
  height: 33px;
  border: 1px solid #dbdbdb;
  font-size: 13px;
}

.c31 svg {
  margin-right: 7px;
  fill: #555;
}

.c11 {
  border-bottom: 1px hidden #fff;
  border-radius: 2px;
  box-shadow: 0 1px 2px rgba(0,0,0,.2);
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  max-width: 600px;
  box-sizing: border-box;
  font-size: 14px;
}

.c13 {
  cursor: pointer;
  position: relative;
}

.c15 {
  color: #1e0fbe;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-size: 18px;
  line-height: 1.2;
  font-weight: normal;
  margin: 0;
  display: inline-block;
  overflow: hidden;
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c14 {
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c16 {
  display: inline-block;
  font-size: 16px;
  line-height: 1.2em;
  max-height: 2.4em;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c17 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
}

.c18 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%;
}

.c21 {
  color: #545454;
  cursor: pointer;
  position: relative;
  max-width: 600px;
  font-size: 13px;
}

.c20 {
  font-size: 14px;
  line-height: 20px;
}

.c12 {
  padding: 8px 16px;
}

.c19 {
  border: 0;
  border-bottom: 1px solid #DFE1E5;
  margin: 0;
}

.c33 {
  box-sizing: border-box;
  width: 100%;
  height: 8px;
  display: block;
  margin-top: 8px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #f7f7f7;
  border: 1px solid #ddd;
}

.c33::-webkit-progress-bar {
  background-color: #f7f7f7;
}

.c33::-webkit-progress-value {
  background-color: #dc3232;
  -webkit-transition: width 250ms;
  transition: width 250ms;
}

.c33::-moz-progress-bar {
  background-color: #dc3232;
}

.c33::-ms-fill {
  background-color: #dc3232;
  border: 0;
}

.c37 {
  box-sizing: border-box;
  width: 100%;
  height: 8px;
  display: block;
  margin-top: 8px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #f7f7f7;
  border: 1px solid #ddd;
}

.c37::-webkit-progress-bar {
  background-color: #f7f7f7;
}

.c37::-webkit-progress-value {
  background-color: #ee7c1b;
  -webkit-transition: width 250ms;
  transition: width 250ms;
}

.c37::-moz-progress-bar {
  background-color: #ee7c1b;
}

.c37::-ms-fill {
  background-color: #ee7c1b;
  border: 0;
}

.c35 {
  border: none;
  width: 100%;
  height: inherit;
  line-height: inherit;
  font-family: inherit;
  font-size: inherit;
  color: inherit;
}

.c35:focus {
  outline: 0;
}

.c23 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: #555;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 3px 0 0 3px;
}

.c23:hover,
.c23:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c25 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: transparent;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 0 3px 3px 0;
}

.c25:hover,
.c25:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c22 {
  display: inline-block;
  margin-top: 10px;
  border: 1px solid #dbdbdb;
  border-radius: 4px;
  background-color: #f7f7f7;
  vertical-align: top;
}

.c9 {
  width: 16px;
  height: 16px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c24 {
  width: 22px;
  height: 22px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c26 {
  width: 18px;
  height: 18px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

@media all and (-ms-high-contrast:none),(-ms-high-contrast:active) {
  .c3::after {
    display: inline-block;
    content: "";
    min-height: 22px;
  }
}

<SnippetEditor
  baseUrl="http://example.org/"
  data={
    Object {
      "description": "Test description, %%replacement_variable%%",
      "slug": "test-slug",
      "title": "Test title",
    }
  }
  date=""
  descriptionEditorFieldPlaceholder="Modify your meta description by editing it right here"
  descriptionLengthProgress={
    Object {
      "actual": 0,
      "max": 156,
      "score": 0,
    }
  }
  hasPaperStyle={true}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "textComponent": "span",
    }
  }
  locale="en"
  mapEditorDataToPreview={null}
  mode="mobile"
  onChange={[MockFunction]}
  onChangeAnalysisData={[Function]}
  recommendedReplacementVariables={Array []}
  replacementVariables={Array []}
  titleLengthProgress={
    Object {
      "actual": 0,
      "max": 600,
      "score": 0,
    }
  }
>
  <ErrorBoundary>
    <div>
      <SnippetPreview
        activeField={null}
        breadcrumbs={null}
        date=""
        description="Test description, %%replacement_variable%%"
        hoveredField={null}
        isAmp={false}
        keyword=""
        locale="en"
        mode="mobile"
        onHover={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        title="Test title"
        url="example.org/test-slug"
      >
        <section>
          <div>
            <HelpTextWrapper
              className="yoast-help"
              helpText={
                Array [
                  "This is a rendering of what this post might look like in Google's search results. ",
                  <OutboundLink
                    href="https://yoa.st/snippet-preview"
                  >
                    Learn more about the Snippet Preview.
                  </OutboundLink>,
                ]
              }
              helpTextButtonLabel="Help on the Snippet Preview"
              panelMaxWidth="400px"
            >
              <HelpTextWrapper__HelpTextContainer
                className="yoast-help"
              >
                <div
                  className="yoast-help c0"
                >
                  <HelpTextWrapper__HelpTextButton
                    aria-controls={null}
                    aria-expanded={false}
                    aria-label="Help on the Snippet Preview"
                    className="yoast-help__button"
                    onClick={[Function]}
                  >
                    <Button
                      aria-controls={null}
                      aria-expanded={false}
                      aria-label="Help on the Snippet Preview"
                      className="yoast-help__button c1"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-controls={null}
                        aria-expanded={false}
                        aria-label="Help on the Snippet Preview"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="yoast-help__button c1 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-controls={null}
                          aria-expanded={false}
                          aria-label="Help on the Snippet Preview"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="yoast-help__button c1 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            aria-controls={null}
                            aria-expanded={false}
                            aria-label="Help on the Snippet Preview"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              aria-controls={null}
                              aria-expanded={false}
                              aria-label="Help on the Snippet Preview"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                aria-controls={null}
                                aria-expanded={false}
                                aria-label="Help on the Snippet Preview"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  aria-controls={null}
                                  aria-expanded={false}
                                  aria-label="Help on the Snippet Preview"
                                  className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <HelpTextWrapper__StyledSvg
                                    color="#646464"
                                    icon="question-circle"
                                    size="16px"
                                  >
                                    <SvgIcon
                                      className="c8"
                                      color="#646464"
                                      icon="question-circle"
                                      size="16px"
                                    >
                                      <SvgIcon__StyledSvg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-question-circle c8"
                                        fill="#646464"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="yoast-svg-icon yoast-svg-icon-question-circle c8 c9"
                                          fill="#646464"
                                          focusable="false"
                                          role="img"
                                          size="16px"
                                          viewBox="0 0 1792 1792"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M1024 1376v-192q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23-9t9-23zm256-672q0-88-55.5-163t-138.5-116-170-41q-243 0-371 213-15 24 8 42l132 100q7 6 19 6 16 0 25-12 53-68 86-92 34-24 86-24 48 0 85.5 26t37.5 59q0 38-20 61t-68 45q-63 28-115.5 86.5t-52.5 125.5v36q0 14 9 23t23 9h192q14 0 23-9t9-23q0-19 21.5-49.5t54.5-49.5q32-18 49-28.5t46-35 44.5-48 28-60.5 12.5-81zm384 192q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                          />
                                        </svg>
                                      </SvgIcon__StyledSvg>
                                    </SvgIcon>
                                  </HelpTextWrapper__StyledSvg>
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </HelpTextWrapper__HelpTextButton>
                  <YoastSlideToggle
                    duration={300}
                    isOpen={false}
                  >
                    <animations__YoastSlideToggleContainer
                      duration={300}
                    >
                      <div
                        className="c10"
                      >
                        <CSSTransition
                          classNames="slide"
                          in={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={true}
                        >
                          <Transition
                            appear={false}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={true}
                          />
                        </CSSTransition>
                      </div>
                    </animations__YoastSlideToggleContainer>
                  </YoastSlideToggle>
                </div>
              </HelpTextWrapper__HelpTextContainer>
            </HelpTextWrapper>
          </div>
          <SnippetPreview__MobileContainer
            padding={20}
            width={640}
          >
            <div
              className="c11"
              width={640}
            >
              <SnippetPreview__MobilePartContainer>
                <div
                  className="c12"
                >
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      SEO title preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__BaseTitle
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                  >
                    <div
                      className="c13"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                    >
                      <SnippetPreview__TitleBounded>
                        <SnippetPreview__Title
                          className="c14"
                        >
                          <div
                            className="c14 c15"
                          >
                            <SnippetPreview__TitleUnboundedMobile
                              innerRef={[Function]}
                            >
                              <span
                                className="c16"
                              >
                                Test title
                              </span>
                            </SnippetPreview__TitleUnboundedMobile>
                          </div>
                        </SnippetPreview__Title>
                      </SnippetPreview__TitleBounded>
                    </div>
                  </SnippetPreview__BaseTitle>
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      Url preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__BaseUrl>
                    <div
                      className="c17"
                    >
                      <SnippetPreview__BaseUrlOverflowContainer
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                      >
                        <div
                          className="c18"
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                        >
                          example.org â€º test-slug
                        </div>
                      </SnippetPreview__BaseUrlOverflowContainer>
                    </div>
                  </SnippetPreview__BaseUrl>
                </div>
              </SnippetPreview__MobilePartContainer>
              <SnippetPreview__Separator>
                <hr
                  className="c19"
                />
              </SnippetPreview__Separator>
              <SnippetPreview__MobilePartContainer>
                <div
                  className="c12"
                >
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      Meta description preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__MobileDescription
                    isDescriptionPlaceholder={false}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                  >
                    <SnippetPreview__DesktopDescription
                      className="c20"
                      isDescriptionPlaceholder={false}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                    >
                      <div
                        className="c20 c21"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                      >
                        <SnippetPreview__MobileDescription
                          innerRef={[Function]}
                          isDescriptionPlaceholder={false}
                        >
                          <SnippetPreview__DesktopDescription
                            className="c20"
                            innerRef={[Function]}
                            isDescriptionPlaceholder={false}
                          >
                            <div
                              className="c20 c21"
                            >
                              Test description, %%replacement_variable%%
                            </div>
                          </SnippetPreview__DesktopDescription>
                        </SnippetPreview__MobileDescription>
                      </div>
                    </SnippetPreview__DesktopDescription>
                  </SnippetPreview__MobileDescription>
                </div>
              </SnippetPreview__MobilePartContainer>
            </div>
          </SnippetPreview__MobileContainer>
        </section>
      </SnippetPreview>
      <ModeSwitcher
        active="mobile"
        onChange={[Function]}
      >
        <ModeSwitcher__Switcher>
          <div
            className="c22"
          >
            <ModeSwitcher__SwitcherButton
              aria-pressed={true}
              isActive={true}
              onClick={[Function]}
            >
              <Button
                aria-pressed={true}
                className="c23"
                isActive={true}
                onClick={[Function]}
              >
                <Button
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-pressed={true}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c23 c2"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  isActive={true}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <Button
                    activeBackgroundColor="#f7f7f7"
                    activeBorderColor="#888"
                    activeColor="#000"
                    aria-pressed={true}
                    backgroundColor="#f7f7f7"
                    borderColor="#ccc"
                    boxShadowColor="#ccc"
                    className="c23 c2 Button-kDSBcD c3"
                    focusBackgroundColor="#fff"
                    focusBorderColor="#0066cd"
                    focusColor="#000"
                    hoverBackgroundColor="#fff"
                    hoverBorderColor="#888"
                    hoverColor="#000"
                    isActive={true}
                    onClick={[Function]}
                    textColor="#555"
                    type="button"
                  >
                    <Button
                      activeBackgroundColor="#f7f7f7"
                      activeBorderColor="#888"
                      activeColor="#000"
                      aria-pressed={true}
                      backgroundColor="#f7f7f7"
                      borderColor="#ccc"
                      boxShadowColor="#ccc"
                      className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                      focusBackgroundColor="#fff"
                      focusBorderColor="#0066cd"
                      focusColor="#000"
                      hoverBackgroundColor="#fff"
                      hoverBorderColor="#888"
                      hoverColor="#000"
                      isActive={true}
                      onClick={[Function]}
                      textColor="#555"
                      type="button"
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-pressed={true}
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        isActive={true}
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button__BaseButton
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-pressed={true}
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          isActive={true}
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <button
                            aria-pressed={true}
                            className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                            onClick={[Function]}
                            type="button"
                          >
                            <SvgIcon
                              color="currentColor"
                              icon="mobile"
                              size="22px"
                            >
                              <SvgIcon__StyledSvg
                                aria-hidden={true}
                                className="yoast-svg-icon yoast-svg-icon-mobile"
                                fill="currentColor"
                                focusable="false"
                                role="img"
                                size="22px"
                                viewBox="0 0 1792 1792"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="yoast-svg-icon yoast-svg-icon-mobile c24"
                                  fill="currentColor"
                                  focusable="false"
                                  role="img"
                                  size="22px"
                                  viewBox="0 0 1792 1792"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M976 1408q0-33-23.5-56.5t-56.5-23.5-56.5 23.5-23.5 56.5 23.5 56.5 56.5 23.5 56.5-23.5 23.5-56.5zm208-160v-704q0-13-9.5-22.5t-22.5-9.5h-512q-13 0-22.5 9.5t-9.5 22.5v704q0 13 9.5 22.5t22.5 9.5h512q13 0 22.5-9.5t9.5-22.5zm-192-848q0-16-16-16h-160q-16 0-16 16t16 16h160q16 0 16-16zm288-16v1024q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-1024q0-52 38-90t90-38h512q52 0 90 38t38 90z"
                                  />
                                </svg>
                              </SvgIcon__StyledSvg>
                            </SvgIcon>
                            <ScreenReaderText>
                              <span
                                className="screen-reader-text"
                                style={
                                  Object {
                                    "clip": "rect(1px, 1px, 1px, 1px)",
                                    "height": "1px",
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "width": "1px",
                                  }
                                }
                              >
                                Mobile preview
                              </span>
                            </ScreenReaderText>
                          </button>
                        </Button__BaseButton>
                      </Button>
                    </Button>
                  </Button>
                </Button>
              </Button>
            </ModeSwitcher__SwitcherButton>
            <ModeSwitcher__SwitcherButton
              aria-pressed={false}
              isActive={false}
              onClick={[Function]}
            >
              <Button
                aria-pressed={false}
                className="c25"
                isActive={false}
                onClick={[Function]}
              >
                <Button
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-pressed={false}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c25 c2"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  isActive={false}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <Button
                    activeBackgroundColor="#f7f7f7"
                    activeBorderColor="#888"
                    activeColor="#000"
                    aria-pressed={false}
                    backgroundColor="#f7f7f7"
                    borderColor="#ccc"
                    boxShadowColor="#ccc"
                    className="c25 c2 Button-kDSBcD c3"
                    focusBackgroundColor="#fff"
                    focusBorderColor="#0066cd"
                    focusColor="#000"
                    hoverBackgroundColor="#fff"
                    hoverBorderColor="#888"
                    hoverColor="#000"
                    isActive={false}
                    onClick={[Function]}
                    textColor="#555"
                    type="button"
                  >
                    <Button
                      activeBackgroundColor="#f7f7f7"
                      activeBorderColor="#888"
                      activeColor="#000"
                      aria-pressed={false}
                      backgroundColor="#f7f7f7"
                      borderColor="#ccc"
                      boxShadowColor="#ccc"
                      className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                      focusBackgroundColor="#fff"
                      focusBorderColor="#0066cd"
                      focusColor="#000"
                      hoverBackgroundColor="#fff"
                      hoverBorderColor="#888"
                      hoverColor="#000"
                      isActive={false}
                      onClick={[Function]}
                      textColor="#555"
                      type="button"
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-pressed={false}
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        isActive={false}
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button__BaseButton
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-pressed={false}
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          isActive={false}
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <button
                            aria-pressed={false}
                            className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                            onClick={[Function]}
                            type="button"
                          >
                            <SvgIcon
                              color="currentColor"
                              icon="desktop"
                              size="18px"
                            >
                              <SvgIcon__StyledSvg
                                aria-hidden={true}
                                className="yoast-svg-icon yoast-svg-icon-desktop"
                                fill="currentColor"
                                focusable="false"
                                role="img"
                                size="18px"
                                viewBox="0 0 1792 1792"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="yoast-svg-icon yoast-svg-icon-desktop c26"
                                  fill="currentColor"
                                  focusable="false"
                                  role="img"
                                  size="18px"
                                  viewBox="0 0 1792 1792"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M1728 992v-832q0-13-9.5-22.5t-22.5-9.5h-1600q-13 0-22.5 9.5t-9.5 22.5v832q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5zm128-832v1088q0 66-47 113t-113 47h-544q0 37 16 77.5t32 71 16 43.5q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45q0-14 16-44t32-70 16-78h-544q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1600q66 0 113 47t47 113z"
                                  />
                                </svg>
                              </SvgIcon__StyledSvg>
                            </SvgIcon>
                            <ScreenReaderText>
                              <span
                                className="screen-reader-text"
                                style={
                                  Object {
                                    "clip": "rect(1px, 1px, 1px, 1px)",
                                    "height": "1px",
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "width": "1px",
                                  }
                                }
                              >
                                Desktop preview
                              </span>
                            </ScreenReaderText>
                          </button>
                        </Button__BaseButton>
                      </Button>
                    </Button>
                  </Button>
                </Button>
              </Button>
            </ModeSwitcher__SwitcherButton>
          </div>
        </ModeSwitcher__Switcher>
      </ModeSwitcher>
      <Button
        aria-expanded={true}
        innerRef={[Function]}
        onClick={[Function]}
      >
        <Button
          activeBackgroundColor="#f7f7f7"
          activeBorderColor="#888"
          activeColor="#000"
          aria-expanded={true}
          backgroundColor="#f7f7f7"
          borderColor="#ccc"
          boxShadowColor="#ccc"
          className="c27"
          focusBackgroundColor="#fff"
          focusBorderColor="#0066cd"
          focusColor="#000"
          hoverBackgroundColor="#fff"
          hoverBorderColor="#888"
          hoverColor="#000"
          innerRef={[Function]}
          onClick={[Function]}
          textColor="#555"
          type="button"
        >
          <Button
            activeBackgroundColor="#f7f7f7"
            activeBorderColor="#888"
            activeColor="#000"
            aria-expanded={true}
            backgroundColor="#f7f7f7"
            borderColor="#ccc"
            boxShadowColor="#ccc"
            className="c27 Button-kDSBcD c3"
            focusBackgroundColor="#fff"
            focusBorderColor="#0066cd"
            focusColor="#000"
            hoverBackgroundColor="#fff"
            hoverBorderColor="#888"
            hoverColor="#000"
            innerRef={[Function]}
            onClick={[Function]}
            textColor="#555"
            type="button"
          >
            <Button
              activeBackgroundColor="#f7f7f7"
              activeBorderColor="#888"
              activeColor="#000"
              aria-expanded={true}
              backgroundColor="#f7f7f7"
              borderColor="#ccc"
              boxShadowColor="#ccc"
              className="c27 Button-kDSBcD c3 Button-kDSBcD c4"
              focusBackgroundColor="#fff"
              focusBorderColor="#0066cd"
              focusColor="#000"
              hoverBackgroundColor="#fff"
              hoverBorderColor="#888"
              hoverColor="#000"
              innerRef={[Function]}
              onClick={[Function]}
              textColor="#555"
              type="button"
            >
              <Button
                activeBackgroundColor="#f7f7f7"
                activeBorderColor="#888"
                activeColor="#000"
                aria-expanded={true}
                backgroundColor="#f7f7f7"
                borderColor="#ccc"
                boxShadowColor="#ccc"
                className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                focusBackgroundColor="#fff"
                focusBorderColor="#0066cd"
                focusColor="#000"
                hoverBackgroundColor="#fff"
                hoverBorderColor="#888"
                hoverColor="#000"
                innerRef={[Function]}
                onClick={[Function]}
                textColor="#555"
                type="button"
              >
                <Button__BaseButton
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-expanded={true}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  innerRef={[Function]}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <button
                    aria-expanded={true}
                    className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                    onClick={[Function]}
                    type="button"
                  >
                    <SvgIcon
                      icon="edit"
                      size="16px"
                    >
                      <SvgIcon__StyledSvg
                        aria-hidden={true}
                        className="yoast-svg-icon yoast-svg-icon-edit"
                        focusable="false"
                        role="img"
                        size="16px"
                        viewBox="0 0 1792 1792"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <svg
                          aria-hidden={true}
                          className="yoast-svg-icon yoast-svg-icon-edit c9"
                          focusable="false"
                          role="img"
                          size="16px"
                          viewBox="0 0 1792 1792"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M491 1536l91-91-235-235-91 91v107h128v128h107zm523-928q0-22-22-22-10 0-17 7l-542 542q-7 7-7 17 0 22 22 22 10 0 17-7l542-542q7-7 7-17zm-54-192l416 416-832 832h-416v-416zm683 96q0 53-37 90l-166 166-416-416 166-165q36-38 90-38 53 0 91 38l235 234q37 39 37 91z"
                          />
                        </svg>
                      </SvgIcon__StyledSvg>
                    </SvgIcon>
                    Edit snippet
                  </button>
                </Button__BaseButton>
              </Button>
            </Button>
          </Button>
        </Button>
      </Button>
      <SnippetEditorFields
        activeField={null}
        containerPadding="0 20px"
        data={
          Object {
            "description": "Test description, %%replacement_variable%%",
            "slug": "test-slug",
            "title": "Test title",
          }
        }
        descriptionEditorFieldPlaceholder="Modify your meta description by editing it right here"
        descriptionLengthProgress={
          Object {
            "actual": 42,
            "max": 156,
            "score": 6,
          }
        }
        hoveredField={null}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        recommendedReplacementVariables={Array []}
        replacementVariables={Array []}
        titleLengthProgress={
          Object {
            "actual": 0,
            "max": 600,
            "score": 1,
          }
        }
      >
        <Shared__StyledEditor
          padding="0 20px"
        >
          <section
            className="c28"
          >
            <Shared__FormSection>
              <div
                className="c29"
              >
                <ReplacementVariableEditor
                  content="Test title"
                  editorRef={[Function]}
                  fieldId="snippet-editor-field-title"
                  isActive={false}
                  isHovered={false}
                  label="SEO title"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  recommendedReplacementVariables={Array []}
                  replacementVariables={Array []}
                  withCaret={true}
                >
                  <Shared__SimulatedLabel
                    id="13"
                    onClick={[Function]}
                  >
                    <div
                      className="c30"
                      id="13"
                      onClick={[Function]}
                    >
                      SEO title
                    </div>
                  </Shared__SimulatedLabel>
                  <Shared__TriggerReplacementVariableSuggestionsButton
                    onClick={[Function]}
                  >
                    <Button
                      className="c31"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c31 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c31 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <SvgIcon
                                    icon="plus-circle"
                                    size="16px"
                                  >
                                    <SvgIcon__StyledSvg
                                      aria-hidden={true}
                                      className="yoast-svg-icon yoast-svg-icon-plus-circle"
                                      focusable="false"
                                      role="img"
                                      size="16px"
                                      viewBox="0 0 1792 1792"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-plus-circle c9"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M1344 960v-128q0-26-19-45t-45-19h-256v-256q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v256h-256q-26 0-45 19t-19 45v128q0 26 19 45t45 19h256v256q0 26 19 45t45 19h128q26 0 45-19t19-45v-256h256q26 0 45-19t19-45zm320-64q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                        />
                                      </svg>
                                    </SvgIcon__StyledSvg>
                                  </SvgIcon>
                                  Insert snippet variable
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </Shared__TriggerReplacementVariableSuggestionsButton>
                  <Shared__InputContainer
                    id="snippet-editor-field-title"
                    isActive={false}
                    isHovered={false}
                    onClick={[Function]}
                  >
                    <div
                      className="c32"
                      id="snippet-editor-field-title"
                      onClick={[Function]}
                    >
                      <Wrapper
                        ariaLabelledBy="13"
                        content="Test title"
                        innerRef={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        recommendedReplacementVariables={Array []}
                        replacementVariables={Array []}
                      >
                        <ReplacementVariableEditorStandalone
                          ariaLabelledBy="13"
                          content="Test title"
                          innerRef={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          recommendedReplacementVariables={Array []}
                          replacementVariables={Array []}
                        >
                          <div />
                        </ReplacementVariableEditorStandalone>
                      </Wrapper>
                    </div>
                  </Shared__InputContainer>
                </ReplacementVariableEditor>
                <ProgressBar
                  aria-hidden="true"
                  backgroundColor="#f7f7f7"
                  borderColor="#ddd"
                  max={600}
                  progressColor="#dc3232"
                  value={0}
                >
                  <progress
                    aria-hidden="true"
                    className="c33"
                    max={600}
                    value={0}
                  />
                </ProgressBar>
              </div>
            </Shared__FormSection>
            <Shared__FormSection>
              <div
                className="c29"
              >
                <Shared__SimulatedLabel
                  id="snippet-editor-field-12-slug"
                  onClick={[Function]}
                >
                  <div
                    className="c30"
                    id="snippet-editor-field-12-slug"
                    onClick={[Function]}
                  >
                    Slug
                  </div>
                </Shared__SimulatedLabel>
                <Shared__InputContainer
                  isActive={false}
                  isHovered={false}
                  onClick={[Function]}
                >
                  <div
                    className="c34"
                    onClick={[Function]}
                  >
                    <SnippetEditorFields__SlugInput
                      aria-labelledby="snippet-editor-field-12-slug"
                      id="snippet-editor-field-slug"
                      innerRef={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      value="test-slug"
                    >
                      <input
                        aria-labelledby="snippet-editor-field-12-slug"
                        className="c35"
                        id="snippet-editor-field-slug"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        value="test-slug"
                      />
                    </SnippetEditorFields__SlugInput>
                  </div>
                </Shared__InputContainer>
              </div>
            </Shared__FormSection>
            <Shared__FormSection>
              <div
                className="c29"
              >
                <ReplacementVariableEditor
                  content="Test description, %%replacement_variable%%"
                  editorRef={[Function]}
                  fieldId="snippet-editor-field-description"
                  isActive={false}
                  isHovered={false}
                  label="Meta description"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  placeholder="Modify your meta description by editing it right here"
                  recommendedReplacementVariables={Array []}
                  replacementVariables={Array []}
                  type="description"
                  withCaret={true}
                >
                  <Shared__SimulatedLabel
                    id="14"
                    onClick={[Function]}
                  >
                    <div
                      className="c30"
                      id="14"
                      onClick={[Function]}
                    >
                      Meta description
                    </div>
                  </Shared__SimulatedLabel>
                  <Shared__TriggerReplacementVariableSuggestionsButton
                    onClick={[Function]}
                  >
                    <Button
                      className="c31"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c31 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c31 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <SvgIcon
                                    icon="plus-circle"
                                    size="16px"
                                  >
                                    <SvgIcon__StyledSvg
                                      aria-hidden={true}
                                      className="yoast-svg-icon yoast-svg-icon-plus-circle"
                                      focusable="false"
                                      role="img"
                                      size="16px"
                                      viewBox="0 0 1792 1792"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-plus-circle c9"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M1344 960v-128q0-26-19-45t-45-19h-256v-256q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v256h-256q-26 0-45 19t-19 45v128q0 26 19 45t45 19h256v256q0 26 19 45t45 19h128q26 0 45-19t19-45v-256h256q26 0 45-19t19-45zm320-64q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                        />
                                      </svg>
                                    </SvgIcon__StyledSvg>
                                  </SvgIcon>
                                  Insert snippet variable
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </Shared__TriggerReplacementVariableSuggestionsButton>
                  <Shared__InputContainer
                    id="snippet-editor-field-description"
                    isActive={false}
                    isHovered={false}
                    onClick={[Function]}
                  >
                    <div
                      className="c36"
                      id="snippet-editor-field-description"
                      onClick={[Function]}
                    >
                      <Wrapper
                        ariaLabelledBy="14"
                        content="Test description, %%replacement_variable%%"
                        innerRef={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        placeholder="Modify your meta description by editing it right here"
                        recommendedReplacementVariables={Array []}
                        replacementVariables={Array []}
                      >
                        <ReplacementVariableEditorStandalone
                          ariaLabelledBy="14"
                          content="Test description, %%replacement_variable%%"
                          innerRef={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Modify your meta description by editing it right here"
                          recommendedReplacementVariables={Array []}
                          replacementVariables={Array []}
                        >
                          <div />
                        </ReplacementVariableEditorStandalone>
                      </Wrapper>
                    </div>
                  </Shared__InputContainer>
                </ReplacementVariableEditor>
                <ProgressBar
                  aria-hidden="true"
                  backgroundColor="#f7f7f7"
                  borderColor="#ddd"
                  max={156}
                  progressColor="#ee7c1b"
                  value={42}
                >
                  <progress
                    aria-hidden="true"
                    className="c37"
                    max={156}
                    value={42}
                  />
                </ProgressBar>
              </div>
            </Shared__FormSection>
          </section>
        </Shared__StyledEditor>
      </SnippetEditorFields>
      <Button
        onClick={[Function]}
      >
        <Button
          activeBackgroundColor="#f7f7f7"
          activeBorderColor="#888"
          activeColor="#000"
          backgroundColor="#f7f7f7"
          borderColor="#ccc"
          boxShadowColor="#ccc"
          className="c38"
          focusBackgroundColor="#fff"
          focusBorderColor="#0066cd"
          focusColor="#000"
          hoverBackgroundColor="#fff"
          hoverBorderColor="#888"
          hoverColor="#000"
          onClick={[Function]}
          textColor="#555"
          type="button"
        >
          <Button
            activeBackgroundColor="#f7f7f7"
            activeBorderColor="#888"
            activeColor="#000"
            backgroundColor="#f7f7f7"
            borderColor="#ccc"
            boxShadowColor="#ccc"
            className="c38 Button-kDSBcD c3"
            focusBackgroundColor="#fff"
            focusBorderColor="#0066cd"
            focusColor="#000"
            hoverBackgroundColor="#fff"
            hoverBorderColor="#888"
            hoverColor="#000"
            onClick={[Function]}
            textColor="#555"
            type="button"
          >
            <Button
              activeBackgroundColor="#f7f7f7"
              activeBorderColor="#888"
              activeColor="#000"
              backgroundColor="#f7f7f7"
              borderColor="#ccc"
              boxShadowColor="#ccc"
              className="c38 Button-kDSBcD c3 Button-kDSBcD c4"
              focusBackgroundColor="#fff"
              focusBorderColor="#0066cd"
              focusColor="#000"
              hoverBackgroundColor="#fff"
              hoverBorderColor="#888"
              hoverColor="#000"
              onClick={[Function]}
              textColor="#555"
              type="button"
            >
              <Button
                activeBackgroundColor="#f7f7f7"
                activeBorderColor="#888"
                activeColor="#000"
                backgroundColor="#f7f7f7"
                borderColor="#ccc"
                boxShadowColor="#ccc"
                className="c38 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                focusBackgroundColor="#fff"
                focusBorderColor="#0066cd"
                focusColor="#000"
                hoverBackgroundColor="#fff"
                hoverBorderColor="#888"
                hoverColor="#000"
                onClick={[Function]}
                textColor="#555"
                type="button"
              >
                <Button__BaseButton
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c38 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <button
                    className="c38 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                    onClick={[Function]}
                    type="button"
                  >
                    Close snippet editor
                  </button>
                </Button__BaseButton>
              </Button>
            </Button>
          </Button>
        </Button>
      </Button>
    </div>
  </ErrorBoundary>
</SnippetEditor>
`;

exports[`SnippetEditor closes when calling close() 2`] = `
.c7 {
  color: #555;
  border-color: #ccc;
  background: #f7f7f7;
  box-shadow: 0 1px 0 rgba( 204,204,204,1 );
}

.c2 {
  font-size: 0.8rem;
}

.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  vertical-align: middle;
  border-width: 1px;
  border-style: solid;
  margin: 0;
  padding: 4px 10px;
  border-radius: 3px;
  cursor: pointer;
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  font-weight: inherit;
  text-align: left;
  overflow: visible;
  min-height: 32px;
}

.c3 svg {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c4:hover {
  color: #000;
  background-color: #fff;
  border-color: #888;
}

.c5::-moz-focus-inner {
  border-width: 0;
}

.c5:focus {
  outline: none;
  border-color: #0066cd;
  color: #000;
  background-color: #fff;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c6:active {
  color: #000;
  background-color: #f7f7f7;
  border-color: #888;
  box-shadow: inset 0 2px 5px -3px rgba( 0,0,0,0.5 );
}

.c27 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 10px 0 0 4px;
  fill: #555;
  padding-left: 8px;
}

.c27 svg {
  margin-right: 7px;
}

.c10 >:first-child {
  overflow: hidden;
  -webkit-transition: height 300ms ease-out;
  transition: height 300ms ease-out;
}

.c0 {
  max-width: 600px;
  font-weight: normal;
  margin: 0 20px 0 25px;
}

.c1 {
  min-width: 14px;
  min-height: 14px;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  border: 1px solid transparent;
  box-shadow: none;
  display: block;
  margin: -44px -10px 10px 0;
  background-color: transparent;
  float: right;
  padding: 3px 0 0 6px;
}

.c1:hover {
  color: #0066cd;
}

.c1:focus {
  border: 1px solid #0066cd;
  outline: none;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c1:focus svg {
  fill: #0066cd;
  color: #0066cd;
}

.c1:active {
  box-shadow: none;
}

.c8:hover {
  fill: #0066cd;
}

.c11 {
  border-bottom: 1px hidden #fff;
  border-radius: 2px;
  box-shadow: 0 1px 2px rgba(0,0,0,.2);
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  max-width: 600px;
  box-sizing: border-box;
  font-size: 14px;
}

.c13 {
  cursor: pointer;
  position: relative;
}

.c15 {
  color: #1e0fbe;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-size: 18px;
  line-height: 1.2;
  font-weight: normal;
  margin: 0;
  display: inline-block;
  overflow: hidden;
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c14 {
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c16 {
  display: inline-block;
  font-size: 16px;
  line-height: 1.2em;
  max-height: 2.4em;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c17 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
}

.c18 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%;
}

.c21 {
  color: #545454;
  cursor: pointer;
  position: relative;
  max-width: 600px;
  font-size: 13px;
}

.c20 {
  font-size: 14px;
  line-height: 20px;
}

.c12 {
  padding: 8px 16px;
}

.c19 {
  border: 0;
  border-bottom: 1px solid #DFE1E5;
  margin: 0;
}

.c23 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: #555;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 3px 0 0 3px;
}

.c23:hover,
.c23:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c25 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: transparent;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 0 3px 3px 0;
}

.c25:hover,
.c25:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c22 {
  display: inline-block;
  margin-top: 10px;
  border: 1px solid #dbdbdb;
  border-radius: 4px;
  background-color: #f7f7f7;
  vertical-align: top;
}

.c9 {
  width: 16px;
  height: 16px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c24 {
  width: 22px;
  height: 22px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c26 {
  width: 18px;
  height: 18px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

@media all and (-ms-high-contrast:none),(-ms-high-contrast:active) {
  .c3::after {
    display: inline-block;
    content: "";
    min-height: 22px;
  }
}

<SnippetEditor
  baseUrl="http://example.org/"
  data={
    Object {
      "description": "Test description, %%replacement_variable%%",
      "slug": "test-slug",
      "title": "Test title",
    }
  }
  date=""
  descriptionEditorFieldPlaceholder="Modify your meta description by editing it right here"
  descriptionLengthProgress={
    Object {
      "actual": 0,
      "max": 156,
      "score": 0,
    }
  }
  hasPaperStyle={true}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "textComponent": "span",
    }
  }
  locale="en"
  mapEditorDataToPreview={null}
  mode="mobile"
  onChange={[MockFunction]}
  onChangeAnalysisData={[Function]}
  recommendedReplacementVariables={Array []}
  replacementVariables={Array []}
  titleLengthProgress={
    Object {
      "actual": 0,
      "max": 600,
      "score": 0,
    }
  }
>
  <ErrorBoundary>
    <div>
      <SnippetPreview
        activeField={null}
        breadcrumbs={null}
        date=""
        description="Test description, %%replacement_variable%%"
        hoveredField={null}
        isAmp={false}
        keyword=""
        locale="en"
        mode="mobile"
        onHover={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        title="Test title"
        url="example.org/test-slug"
      >
        <section>
          <div>
            <HelpTextWrapper
              className="yoast-help"
              helpText={
                Array [
                  "This is a rendering of what this post might look like in Google's search results. ",
                  <OutboundLink
                    href="https://yoa.st/snippet-preview"
                  >
                    Learn more about the Snippet Preview.
                  </OutboundLink>,
                ]
              }
              helpTextButtonLabel="Help on the Snippet Preview"
              panelMaxWidth="400px"
            >
              <HelpTextWrapper__HelpTextContainer
                className="yoast-help"
              >
                <div
                  className="yoast-help c0"
                >
                  <HelpTextWrapper__HelpTextButton
                    aria-controls={null}
                    aria-expanded={false}
                    aria-label="Help on the Snippet Preview"
                    className="yoast-help__button"
                    onClick={[Function]}
                  >
                    <Button
                      aria-controls={null}
                      aria-expanded={false}
                      aria-label="Help on the Snippet Preview"
                      className="yoast-help__button c1"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-controls={null}
                        aria-expanded={false}
                        aria-label="Help on the Snippet Preview"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="yoast-help__button c1 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-controls={null}
                          aria-expanded={false}
                          aria-label="Help on the Snippet Preview"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="yoast-help__button c1 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            aria-controls={null}
                            aria-expanded={false}
                            aria-label="Help on the Snippet Preview"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              aria-controls={null}
                              aria-expanded={false}
                              aria-label="Help on the Snippet Preview"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                aria-controls={null}
                                aria-expanded={false}
                                aria-label="Help on the Snippet Preview"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  aria-controls={null}
                                  aria-expanded={false}
                                  aria-label="Help on the Snippet Preview"
                                  className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <HelpTextWrapper__StyledSvg
                                    color="#646464"
                                    icon="question-circle"
                                    size="16px"
                                  >
                                    <SvgIcon
                                      className="c8"
                                      color="#646464"
                                      icon="question-circle"
                                      size="16px"
                                    >
                                      <SvgIcon__StyledSvg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-question-circle c8"
                                        fill="#646464"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="yoast-svg-icon yoast-svg-icon-question-circle c8 c9"
                                          fill="#646464"
                                          focusable="false"
                                          role="img"
                                          size="16px"
                                          viewBox="0 0 1792 1792"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M1024 1376v-192q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23-9t9-23zm256-672q0-88-55.5-163t-138.5-116-170-41q-243 0-371 213-15 24 8 42l132 100q7 6 19 6 16 0 25-12 53-68 86-92 34-24 86-24 48 0 85.5 26t37.5 59q0 38-20 61t-68 45q-63 28-115.5 86.5t-52.5 125.5v36q0 14 9 23t23 9h192q14 0 23-9t9-23q0-19 21.5-49.5t54.5-49.5q32-18 49-28.5t46-35 44.5-48 28-60.5 12.5-81zm384 192q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                          />
                                        </svg>
                                      </SvgIcon__StyledSvg>
                                    </SvgIcon>
                                  </HelpTextWrapper__StyledSvg>
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </HelpTextWrapper__HelpTextButton>
                  <YoastSlideToggle
                    duration={300}
                    isOpen={false}
                  >
                    <animations__YoastSlideToggleContainer
                      duration={300}
                    >
                      <div
                        className="c10"
                      >
                        <CSSTransition
                          classNames="slide"
                          in={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={true}
                        >
                          <Transition
                            appear={false}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={true}
                          />
                        </CSSTransition>
                      </div>
                    </animations__YoastSlideToggleContainer>
                  </YoastSlideToggle>
                </div>
              </HelpTextWrapper__HelpTextContainer>
            </HelpTextWrapper>
          </div>
          <SnippetPreview__MobileContainer
            padding={20}
            width={640}
          >
            <div
              className="c11"
              width={640}
            >
              <SnippetPreview__MobilePartContainer>
                <div
                  className="c12"
                >
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      SEO title preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__BaseTitle
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                  >
                    <div
                      className="c13"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                    >
                      <SnippetPreview__TitleBounded>
                        <SnippetPreview__Title
                          className="c14"
                        >
                          <div
                            className="c14 c15"
                          >
                            <SnippetPreview__TitleUnboundedMobile
                              innerRef={[Function]}
                            >
                              <span
                                className="c16"
                              >
                                Test title
                              </span>
                            </SnippetPreview__TitleUnboundedMobile>
                          </div>
                        </SnippetPreview__Title>
                      </SnippetPreview__TitleBounded>
                    </div>
                  </SnippetPreview__BaseTitle>
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      Url preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__BaseUrl>
                    <div
                      className="c17"
                    >
                      <SnippetPreview__BaseUrlOverflowContainer
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                      >
                        <div
                          className="c18"
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                        >
                          example.org â€º test-slug
                        </div>
                      </SnippetPreview__BaseUrlOverflowContainer>
                    </div>
                  </SnippetPreview__BaseUrl>
                </div>
              </SnippetPreview__MobilePartContainer>
              <SnippetPreview__Separator>
                <hr
                  className="c19"
                />
              </SnippetPreview__Separator>
              <SnippetPreview__MobilePartContainer>
                <div
                  className="c12"
                >
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      Meta description preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__MobileDescription
                    isDescriptionPlaceholder={false}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                  >
                    <SnippetPreview__DesktopDescription
                      className="c20"
                      isDescriptionPlaceholder={false}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                    >
                      <div
                        className="c20 c21"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                      >
                        <SnippetPreview__MobileDescription
                          innerRef={[Function]}
                          isDescriptionPlaceholder={false}
                        >
                          <SnippetPreview__DesktopDescription
                            className="c20"
                            innerRef={[Function]}
                            isDescriptionPlaceholder={false}
                          >
                            <div
                              className="c20 c21"
                            >
                              Test description, %%replacement_variable%%
                            </div>
                          </SnippetPreview__DesktopDescription>
                        </SnippetPreview__MobileDescription>
                      </div>
                    </SnippetPreview__DesktopDescription>
                  </SnippetPreview__MobileDescription>
                </div>
              </SnippetPreview__MobilePartContainer>
            </div>
          </SnippetPreview__MobileContainer>
        </section>
      </SnippetPreview>
      <ModeSwitcher
        active="mobile"
        onChange={[Function]}
      >
        <ModeSwitcher__Switcher>
          <div
            className="c22"
          >
            <ModeSwitcher__SwitcherButton
              aria-pressed={true}
              isActive={true}
              onClick={[Function]}
            >
              <Button
                aria-pressed={true}
                className="c23"
                isActive={true}
                onClick={[Function]}
              >
                <Button
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-pressed={true}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c23 c2"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  isActive={true}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <Button
                    activeBackgroundColor="#f7f7f7"
                    activeBorderColor="#888"
                    activeColor="#000"
                    aria-pressed={true}
                    backgroundColor="#f7f7f7"
                    borderColor="#ccc"
                    boxShadowColor="#ccc"
                    className="c23 c2 Button-kDSBcD c3"
                    focusBackgroundColor="#fff"
                    focusBorderColor="#0066cd"
                    focusColor="#000"
                    hoverBackgroundColor="#fff"
                    hoverBorderColor="#888"
                    hoverColor="#000"
                    isActive={true}
                    onClick={[Function]}
                    textColor="#555"
                    type="button"
                  >
                    <Button
                      activeBackgroundColor="#f7f7f7"
                      activeBorderColor="#888"
                      activeColor="#000"
                      aria-pressed={true}
                      backgroundColor="#f7f7f7"
                      borderColor="#ccc"
                      boxShadowColor="#ccc"
                      className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                      focusBackgroundColor="#fff"
                      focusBorderColor="#0066cd"
                      focusColor="#000"
                      hoverBackgroundColor="#fff"
                      hoverBorderColor="#888"
                      hoverColor="#000"
                      isActive={true}
                      onClick={[Function]}
                      textColor="#555"
                      type="button"
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-pressed={true}
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        isActive={true}
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button__BaseButton
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-pressed={true}
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          isActive={true}
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <button
                            aria-pressed={true}
                            className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                            onClick={[Function]}
                            type="button"
                          >
                            <SvgIcon
                              color="currentColor"
                              icon="mobile"
                              size="22px"
                            >
                              <SvgIcon__StyledSvg
                                aria-hidden={true}
                                className="yoast-svg-icon yoast-svg-icon-mobile"
                                fill="currentColor"
                                focusable="false"
                                role="img"
                                size="22px"
                                viewBox="0 0 1792 1792"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="yoast-svg-icon yoast-svg-icon-mobile c24"
                                  fill="currentColor"
                                  focusable="false"
                                  role="img"
                                  size="22px"
                                  viewBox="0 0 1792 1792"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M976 1408q0-33-23.5-56.5t-56.5-23.5-56.5 23.5-23.5 56.5 23.5 56.5 56.5 23.5 56.5-23.5 23.5-56.5zm208-160v-704q0-13-9.5-22.5t-22.5-9.5h-512q-13 0-22.5 9.5t-9.5 22.5v704q0 13 9.5 22.5t22.5 9.5h512q13 0 22.5-9.5t9.5-22.5zm-192-848q0-16-16-16h-160q-16 0-16 16t16 16h160q16 0 16-16zm288-16v1024q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-1024q0-52 38-90t90-38h512q52 0 90 38t38 90z"
                                  />
                                </svg>
                              </SvgIcon__StyledSvg>
                            </SvgIcon>
                            <ScreenReaderText>
                              <span
                                className="screen-reader-text"
                                style={
                                  Object {
                                    "clip": "rect(1px, 1px, 1px, 1px)",
                                    "height": "1px",
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "width": "1px",
                                  }
                                }
                              >
                                Mobile preview
                              </span>
                            </ScreenReaderText>
                          </button>
                        </Button__BaseButton>
                      </Button>
                    </Button>
                  </Button>
                </Button>
              </Button>
            </ModeSwitcher__SwitcherButton>
            <ModeSwitcher__SwitcherButton
              aria-pressed={false}
              isActive={false}
              onClick={[Function]}
            >
              <Button
                aria-pressed={false}
                className="c25"
                isActive={false}
                onClick={[Function]}
              >
                <Button
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-pressed={false}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c25 c2"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  isActive={false}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <Button
                    activeBackgroundColor="#f7f7f7"
                    activeBorderColor="#888"
                    activeColor="#000"
                    aria-pressed={false}
                    backgroundColor="#f7f7f7"
                    borderColor="#ccc"
                    boxShadowColor="#ccc"
                    className="c25 c2 Button-kDSBcD c3"
                    focusBackgroundColor="#fff"
                    focusBorderColor="#0066cd"
                    focusColor="#000"
                    hoverBackgroundColor="#fff"
                    hoverBorderColor="#888"
                    hoverColor="#000"
                    isActive={false}
                    onClick={[Function]}
                    textColor="#555"
                    type="button"
                  >
                    <Button
                      activeBackgroundColor="#f7f7f7"
                      activeBorderColor="#888"
                      activeColor="#000"
                      aria-pressed={false}
                      backgroundColor="#f7f7f7"
                      borderColor="#ccc"
                      boxShadowColor="#ccc"
                      className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                      focusBackgroundColor="#fff"
                      focusBorderColor="#0066cd"
                      focusColor="#000"
                      hoverBackgroundColor="#fff"
                      hoverBorderColor="#888"
                      hoverColor="#000"
                      isActive={false}
                      onClick={[Function]}
                      textColor="#555"
                      type="button"
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-pressed={false}
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        isActive={false}
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button__BaseButton
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-pressed={false}
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          isActive={false}
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <button
                            aria-pressed={false}
                            className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                            onClick={[Function]}
                            type="button"
                          >
                            <SvgIcon
                              color="currentColor"
                              icon="desktop"
                              size="18px"
                            >
                              <SvgIcon__StyledSvg
                                aria-hidden={true}
                                className="yoast-svg-icon yoast-svg-icon-desktop"
                                fill="currentColor"
                                focusable="false"
                                role="img"
                                size="18px"
                                viewBox="0 0 1792 1792"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="yoast-svg-icon yoast-svg-icon-desktop c26"
                                  fill="currentColor"
                                  focusable="false"
                                  role="img"
                                  size="18px"
                                  viewBox="0 0 1792 1792"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M1728 992v-832q0-13-9.5-22.5t-22.5-9.5h-1600q-13 0-22.5 9.5t-9.5 22.5v832q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5zm128-832v1088q0 66-47 113t-113 47h-544q0 37 16 77.5t32 71 16 43.5q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45q0-14 16-44t32-70 16-78h-544q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1600q66 0 113 47t47 113z"
                                  />
                                </svg>
                              </SvgIcon__StyledSvg>
                            </SvgIcon>
                            <ScreenReaderText>
                              <span
                                className="screen-reader-text"
                                style={
                                  Object {
                                    "clip": "rect(1px, 1px, 1px, 1px)",
                                    "height": "1px",
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "width": "1px",
                                  }
                                }
                              >
                                Desktop preview
                              </span>
                            </ScreenReaderText>
                          </button>
                        </Button__BaseButton>
                      </Button>
                    </Button>
                  </Button>
                </Button>
              </Button>
            </ModeSwitcher__SwitcherButton>
          </div>
        </ModeSwitcher__Switcher>
      </ModeSwitcher>
      <Button
        aria-expanded={false}
        innerRef={[Function]}
        onClick={[Function]}
      >
        <Button
          activeBackgroundColor="#f7f7f7"
          activeBorderColor="#888"
          activeColor="#000"
          aria-expanded={false}
          backgroundColor="#f7f7f7"
          borderColor="#ccc"
          boxShadowColor="#ccc"
          className="c27"
          focusBackgroundColor="#fff"
          focusBorderColor="#0066cd"
          focusColor="#000"
          hoverBackgroundColor="#fff"
          hoverBorderColor="#888"
          hoverColor="#000"
          innerRef={[Function]}
          onClick={[Function]}
          textColor="#555"
          type="button"
        >
          <Button
            activeBackgroundColor="#f7f7f7"
            activeBorderColor="#888"
            activeColor="#000"
            aria-expanded={false}
            backgroundColor="#f7f7f7"
            borderColor="#ccc"
            boxShadowColor="#ccc"
            className="c27 Button-kDSBcD c3"
            focusBackgroundColor="#fff"
            focusBorderColor="#0066cd"
            focusColor="#000"
            hoverBackgroundColor="#fff"
            hoverBorderColor="#888"
            hoverColor="#000"
            innerRef={[Function]}
            onClick={[Function]}
            textColor="#555"
            type="button"
          >
            <Button
              activeBackgroundColor="#f7f7f7"
              activeBorderColor="#888"
              activeColor="#000"
              aria-expanded={false}
              backgroundColor="#f7f7f7"
              borderColor="#ccc"
              boxShadowColor="#ccc"
              className="c27 Button-kDSBcD c3 Button-kDSBcD c4"
              focusBackgroundColor="#fff"
              focusBorderColor="#0066cd"
              focusColor="#000"
              hoverBackgroundColor="#fff"
              hoverBorderColor="#888"
              hoverColor="#000"
              innerRef={[Function]}
              onClick={[Function]}
              textColor="#555"
              type="button"
            >
              <Button
                activeBackgroundColor="#f7f7f7"
                activeBorderColor="#888"
                activeColor="#000"
                aria-expanded={false}
                backgroundColor="#f7f7f7"
                borderColor="#ccc"
                boxShadowColor="#ccc"
                className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                focusBackgroundColor="#fff"
                focusBorderColor="#0066cd"
                focusColor="#000"
                hoverBackgroundColor="#fff"
                hoverBorderColor="#888"
                hoverColor="#000"
                innerRef={[Function]}
                onClick={[Function]}
                textColor="#555"
                type="button"
              >
                <Button__BaseButton
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-expanded={false}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  innerRef={[Function]}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <button
                    aria-expanded={false}
                    className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                    onClick={[Function]}
                    type="button"
                  >
                    <SvgIcon
                      icon="edit"
                      size="16px"
                    >
                      <SvgIcon__StyledSvg
                        aria-hidden={true}
                        className="yoast-svg-icon yoast-svg-icon-edit"
                        focusable="false"
                        role="img"
                        size="16px"
                        viewBox="0 0 1792 1792"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <svg
                          aria-hidden={true}
                          className="yoast-svg-icon yoast-svg-icon-edit c9"
                          focusable="false"
                          role="img"
                          size="16px"
                          viewBox="0 0 1792 1792"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M491 1536l91-91-235-235-91 91v107h128v128h107zm523-928q0-22-22-22-10 0-17 7l-542 542q-7 7-7 17 0 22 22 22 10 0 17-7l542-542q7-7 7-17zm-54-192l416 416-832 832h-416v-416zm683 96q0 53-37 90l-166 166-416-416 166-165q36-38 90-38 53 0 91 38l235 234q37 39 37 91z"
                          />
                        </svg>
                      </SvgIcon__StyledSvg>
                    </SvgIcon>
                    Edit snippet
                  </button>
                </Button__BaseButton>
              </Button>
            </Button>
          </Button>
        </Button>
      </Button>
    </div>
  </ErrorBoundary>
</SnippetEditor>
`;

exports[`SnippetEditor colored progress bars can handle a score of 6 1`] = `
.c7 {
  color: #555;
  border-color: #ccc;
  background: #f7f7f7;
  box-shadow: 0 1px 0 rgba( 204,204,204,1 );
}

.c2 {
  font-size: 0.8rem;
}

.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  vertical-align: middle;
  border-width: 1px;
  border-style: solid;
  margin: 0;
  padding: 4px 10px;
  border-radius: 3px;
  cursor: pointer;
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  font-weight: inherit;
  text-align: left;
  overflow: visible;
  min-height: 32px;
}

.c3 svg {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c4:hover {
  color: #000;
  background-color: #fff;
  border-color: #888;
}

.c5::-moz-focus-inner {
  border-width: 0;
}

.c5:focus {
  outline: none;
  border-color: #0066cd;
  color: #000;
  background-color: #fff;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c6:active {
  color: #000;
  background-color: #f7f7f7;
  border-color: #888;
  box-shadow: inset 0 2px 5px -3px rgba( 0,0,0,0.5 );
}

.c27 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 10px 0 0 4px;
  fill: #555;
  padding-left: 8px;
}

.c27 svg {
  margin-right: 7px;
}

.c38 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin-top: 24px;
}

.c10 >:first-child {
  overflow: hidden;
  -webkit-transition: height 300ms ease-out;
  transition: height 300ms ease-out;
}

.c0 {
  max-width: 600px;
  font-weight: normal;
  margin: 0 20px 0 25px;
}

.c1 {
  min-width: 14px;
  min-height: 14px;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  border: 1px solid transparent;
  box-shadow: none;
  display: block;
  margin: -44px -10px 10px 0;
  background-color: transparent;
  float: right;
  padding: 3px 0 0 6px;
}

.c1:hover {
  color: #0066cd;
}

.c1:focus {
  border: 1px solid #0066cd;
  outline: none;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c1:focus svg {
  fill: #0066cd;
  color: #0066cd;
}

.c1:active {
  box-shadow: none;
}

.c8:hover {
  fill: #0066cd;
}

.c32 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
}

.c32 .public-DraftStyleDefault-block {
  line-height: 24px;
}

.c32::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c34 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
}

.c34::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c36 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
  min-height: 72px;
  padding: 2px 6px;
  line-height: 24px;
}

.c36 .public-DraftEditorPlaceholder-root {
  color: #646464;
}

.c36 .public-DraftEditorPlaceholder-hasFocus {
  color: #646464;
}

.c36::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c29 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin: 24px 0 0 0;
}

.c28 {
  padding: 0 20px;
}

.c30 {
  -webkit-flex: 1 1 200px;
  -ms-flex: 1 1 200px;
  flex: 1 1 200px;
  min-width: 200px;
  cursor: pointer;
  font-size: 16px;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 4px 0;
}

.c31 {
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  padding-left: 8px;
  height: 33px;
  border: 1px solid #dbdbdb;
  font-size: 13px;
}

.c31 svg {
  margin-right: 7px;
  fill: #555;
}

.c11 {
  border-bottom: 1px hidden #fff;
  border-radius: 2px;
  box-shadow: 0 1px 2px rgba(0,0,0,.2);
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  max-width: 600px;
  box-sizing: border-box;
  font-size: 14px;
}

.c13 {
  cursor: pointer;
  position: relative;
}

.c15 {
  color: #1e0fbe;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-size: 18px;
  line-height: 1.2;
  font-weight: normal;
  margin: 0;
  display: inline-block;
  overflow: hidden;
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c14 {
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c16 {
  display: inline-block;
  font-size: 16px;
  line-height: 1.2em;
  max-height: 2.4em;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c17 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
}

.c18 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%;
}

.c21 {
  color: #545454;
  cursor: pointer;
  position: relative;
  max-width: 600px;
  font-size: 13px;
}

.c20 {
  font-size: 14px;
  line-height: 20px;
}

.c12 {
  padding: 8px 16px;
}

.c19 {
  border: 0;
  border-bottom: 1px solid #DFE1E5;
  margin: 0;
}

.c33 {
  box-sizing: border-box;
  width: 100%;
  height: 8px;
  display: block;
  margin-top: 8px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #f7f7f7;
  border: 1px solid #ddd;
}

.c33::-webkit-progress-bar {
  background-color: #f7f7f7;
}

.c33::-webkit-progress-value {
  background-color: #dc3232;
  -webkit-transition: width 250ms;
  transition: width 250ms;
}

.c33::-moz-progress-bar {
  background-color: #dc3232;
}

.c33::-ms-fill {
  background-color: #dc3232;
  border: 0;
}

.c37 {
  box-sizing: border-box;
  width: 100%;
  height: 8px;
  display: block;
  margin-top: 8px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #f7f7f7;
  border: 1px solid #ddd;
}

.c37::-webkit-progress-bar {
  background-color: #f7f7f7;
}

.c37::-webkit-progress-value {
  background-color: #ee7c1b;
  -webkit-transition: width 250ms;
  transition: width 250ms;
}

.c37::-moz-progress-bar {
  background-color: #ee7c1b;
}

.c37::-ms-fill {
  background-color: #ee7c1b;
  border: 0;
}

.c35 {
  border: none;
  width: 100%;
  height: inherit;
  line-height: inherit;
  font-family: inherit;
  font-size: inherit;
  color: inherit;
}

.c35:focus {
  outline: 0;
}

.c23 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: #555;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 3px 0 0 3px;
}

.c23:hover,
.c23:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c25 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: transparent;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 0 3px 3px 0;
}

.c25:hover,
.c25:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c22 {
  display: inline-block;
  margin-top: 10px;
  border: 1px solid #dbdbdb;
  border-radius: 4px;
  background-color: #f7f7f7;
  vertical-align: top;
}

.c9 {
  width: 16px;
  height: 16px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c24 {
  width: 22px;
  height: 22px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c26 {
  width: 18px;
  height: 18px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

@media all and (-ms-high-contrast:none),(-ms-high-contrast:active) {
  .c3::after {
    display: inline-block;
    content: "";
    min-height: 22px;
  }
}

<SnippetEditor
  baseUrl="http://example.org/"
  data={
    Object {
      "description": "Test description, %%replacement_variable%%",
      "slug": "test-slug",
      "title": "Test title",
    }
  }
  date=""
  descriptionEditorFieldPlaceholder="Modify your meta description by editing it right here"
  descriptionLengthProgress={
    Object {
      "actual": 0,
      "max": 156,
      "score": 0,
    }
  }
  hasPaperStyle={true}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "textComponent": "span",
    }
  }
  locale="en"
  mapEditorDataToPreview={null}
  mode="mobile"
  onChange={[MockFunction]}
  onChangeAnalysisData={[Function]}
  recommendedReplacementVariables={Array []}
  replacementVariables={Array []}
  titleLengthProgress={
    Object {
      "actual": 361,
      "max": 550,
      "score": 6,
    }
  }
>
  <ErrorBoundary>
    <div>
      <SnippetPreview
        activeField={null}
        breadcrumbs={null}
        date=""
        description="Test description, %%replacement_variable%%"
        hoveredField={null}
        isAmp={false}
        keyword=""
        locale="en"
        mode="mobile"
        onHover={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        title="Test title"
        url="example.org/test-slug"
      >
        <section>
          <div>
            <HelpTextWrapper
              className="yoast-help"
              helpText={
                Array [
                  "This is a rendering of what this post might look like in Google's search results. ",
                  <OutboundLink
                    href="https://yoa.st/snippet-preview"
                  >
                    Learn more about the Snippet Preview.
                  </OutboundLink>,
                ]
              }
              helpTextButtonLabel="Help on the Snippet Preview"
              panelMaxWidth="400px"
            >
              <HelpTextWrapper__HelpTextContainer
                className="yoast-help"
              >
                <div
                  className="yoast-help c0"
                >
                  <HelpTextWrapper__HelpTextButton
                    aria-controls={null}
                    aria-expanded={false}
                    aria-label="Help on the Snippet Preview"
                    className="yoast-help__button"
                    onClick={[Function]}
                  >
                    <Button
                      aria-controls={null}
                      aria-expanded={false}
                      aria-label="Help on the Snippet Preview"
                      className="yoast-help__button c1"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-controls={null}
                        aria-expanded={false}
                        aria-label="Help on the Snippet Preview"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="yoast-help__button c1 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-controls={null}
                          aria-expanded={false}
                          aria-label="Help on the Snippet Preview"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="yoast-help__button c1 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            aria-controls={null}
                            aria-expanded={false}
                            aria-label="Help on the Snippet Preview"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              aria-controls={null}
                              aria-expanded={false}
                              aria-label="Help on the Snippet Preview"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                aria-controls={null}
                                aria-expanded={false}
                                aria-label="Help on the Snippet Preview"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  aria-controls={null}
                                  aria-expanded={false}
                                  aria-label="Help on the Snippet Preview"
                                  className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <HelpTextWrapper__StyledSvg
                                    color="#646464"
                                    icon="question-circle"
                                    size="16px"
                                  >
                                    <SvgIcon
                                      className="c8"
                                      color="#646464"
                                      icon="question-circle"
                                      size="16px"
                                    >
                                      <SvgIcon__StyledSvg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-question-circle c8"
                                        fill="#646464"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="yoast-svg-icon yoast-svg-icon-question-circle c8 c9"
                                          fill="#646464"
                                          focusable="false"
                                          role="img"
                                          size="16px"
                                          viewBox="0 0 1792 1792"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M1024 1376v-192q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23-9t9-23zm256-672q0-88-55.5-163t-138.5-116-170-41q-243 0-371 213-15 24 8 42l132 100q7 6 19 6 16 0 25-12 53-68 86-92 34-24 86-24 48 0 85.5 26t37.5 59q0 38-20 61t-68 45q-63 28-115.5 86.5t-52.5 125.5v36q0 14 9 23t23 9h192q14 0 23-9t9-23q0-19 21.5-49.5t54.5-49.5q32-18 49-28.5t46-35 44.5-48 28-60.5 12.5-81zm384 192q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                          />
                                        </svg>
                                      </SvgIcon__StyledSvg>
                                    </SvgIcon>
                                  </HelpTextWrapper__StyledSvg>
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </HelpTextWrapper__HelpTextButton>
                  <YoastSlideToggle
                    duration={300}
                    isOpen={false}
                  >
                    <animations__YoastSlideToggleContainer
                      duration={300}
                    >
                      <div
                        className="c10"
                      >
                        <CSSTransition
                          classNames="slide"
                          in={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={true}
                        >
                          <Transition
                            appear={false}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={true}
                          />
                        </CSSTransition>
                      </div>
                    </animations__YoastSlideToggleContainer>
                  </YoastSlideToggle>
                </div>
              </HelpTextWrapper__HelpTextContainer>
            </HelpTextWrapper>
          </div>
          <SnippetPreview__MobileContainer
            padding={20}
            width={640}
          >
            <div
              className="c11"
              width={640}
            >
              <SnippetPreview__MobilePartContainer>
                <div
                  className="c12"
                >
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      SEO title preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__BaseTitle
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                  >
                    <div
                      className="c13"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                    >
                      <SnippetPreview__TitleBounded>
                        <SnippetPreview__Title
                          className="c14"
                        >
                          <div
                            className="c14 c15"
                          >
                            <SnippetPreview__TitleUnboundedMobile
                              innerRef={[Function]}
                            >
                              <span
                                className="c16"
                              >
                                Test title
                              </span>
                            </SnippetPreview__TitleUnboundedMobile>
                          </div>
                        </SnippetPreview__Title>
                      </SnippetPreview__TitleBounded>
                    </div>
                  </SnippetPreview__BaseTitle>
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      Url preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__BaseUrl>
                    <div
                      className="c17"
                    >
                      <SnippetPreview__BaseUrlOverflowContainer
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                      >
                        <div
                          className="c18"
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                        >
                          example.org â€º test-slug
                        </div>
                      </SnippetPreview__BaseUrlOverflowContainer>
                    </div>
                  </SnippetPreview__BaseUrl>
                </div>
              </SnippetPreview__MobilePartContainer>
              <SnippetPreview__Separator>
                <hr
                  className="c19"
                />
              </SnippetPreview__Separator>
              <SnippetPreview__MobilePartContainer>
                <div
                  className="c12"
                >
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      Meta description preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__MobileDescription
                    isDescriptionPlaceholder={false}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                  >
                    <SnippetPreview__DesktopDescription
                      className="c20"
                      isDescriptionPlaceholder={false}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                    >
                      <div
                        className="c20 c21"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                      >
                        <SnippetPreview__MobileDescription
                          innerRef={[Function]}
                          isDescriptionPlaceholder={false}
                        >
                          <SnippetPreview__DesktopDescription
                            className="c20"
                            innerRef={[Function]}
                            isDescriptionPlaceholder={false}
                          >
                            <div
                              className="c20 c21"
                            >
                              Test description, %%replacement_variable%%
                            </div>
                          </SnippetPreview__DesktopDescription>
                        </SnippetPreview__MobileDescription>
                      </div>
                    </SnippetPreview__DesktopDescription>
                  </SnippetPreview__MobileDescription>
                </div>
              </SnippetPreview__MobilePartContainer>
            </div>
          </SnippetPreview__MobileContainer>
        </section>
      </SnippetPreview>
      <ModeSwitcher
        active="mobile"
        onChange={[Function]}
      >
        <ModeSwitcher__Switcher>
          <div
            className="c22"
          >
            <ModeSwitcher__SwitcherButton
              aria-pressed={true}
              isActive={true}
              onClick={[Function]}
            >
              <Button
                aria-pressed={true}
                className="c23"
                isActive={true}
                onClick={[Function]}
              >
                <Button
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-pressed={true}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c23 c2"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  isActive={true}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <Button
                    activeBackgroundColor="#f7f7f7"
                    activeBorderColor="#888"
                    activeColor="#000"
                    aria-pressed={true}
                    backgroundColor="#f7f7f7"
                    borderColor="#ccc"
                    boxShadowColor="#ccc"
                    className="c23 c2 Button-kDSBcD c3"
                    focusBackgroundColor="#fff"
                    focusBorderColor="#0066cd"
                    focusColor="#000"
                    hoverBackgroundColor="#fff"
                    hoverBorderColor="#888"
                    hoverColor="#000"
                    isActive={true}
                    onClick={[Function]}
                    textColor="#555"
                    type="button"
                  >
                    <Button
                      activeBackgroundColor="#f7f7f7"
                      activeBorderColor="#888"
                      activeColor="#000"
                      aria-pressed={true}
                      backgroundColor="#f7f7f7"
                      borderColor="#ccc"
                      boxShadowColor="#ccc"
                      className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                      focusBackgroundColor="#fff"
                      focusBorderColor="#0066cd"
                      focusColor="#000"
                      hoverBackgroundColor="#fff"
                      hoverBorderColor="#888"
                      hoverColor="#000"
                      isActive={true}
                      onClick={[Function]}
                      textColor="#555"
                      type="button"
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-pressed={true}
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        isActive={true}
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button__BaseButton
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-pressed={true}
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          isActive={true}
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <button
                            aria-pressed={true}
                            className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                            onClick={[Function]}
                            type="button"
                          >
                            <SvgIcon
                              color="currentColor"
                              icon="mobile"
                              size="22px"
                            >
                              <SvgIcon__StyledSvg
                                aria-hidden={true}
                                className="yoast-svg-icon yoast-svg-icon-mobile"
                                fill="currentColor"
                                focusable="false"
                                role="img"
                                size="22px"
                                viewBox="0 0 1792 1792"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="yoast-svg-icon yoast-svg-icon-mobile c24"
                                  fill="currentColor"
                                  focusable="false"
                                  role="img"
                                  size="22px"
                                  viewBox="0 0 1792 1792"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M976 1408q0-33-23.5-56.5t-56.5-23.5-56.5 23.5-23.5 56.5 23.5 56.5 56.5 23.5 56.5-23.5 23.5-56.5zm208-160v-704q0-13-9.5-22.5t-22.5-9.5h-512q-13 0-22.5 9.5t-9.5 22.5v704q0 13 9.5 22.5t22.5 9.5h512q13 0 22.5-9.5t9.5-22.5zm-192-848q0-16-16-16h-160q-16 0-16 16t16 16h160q16 0 16-16zm288-16v1024q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-1024q0-52 38-90t90-38h512q52 0 90 38t38 90z"
                                  />
                                </svg>
                              </SvgIcon__StyledSvg>
                            </SvgIcon>
                            <ScreenReaderText>
                              <span
                                className="screen-reader-text"
                                style={
                                  Object {
                                    "clip": "rect(1px, 1px, 1px, 1px)",
                                    "height": "1px",
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "width": "1px",
                                  }
                                }
                              >
                                Mobile preview
                              </span>
                            </ScreenReaderText>
                          </button>
                        </Button__BaseButton>
                      </Button>
                    </Button>
                  </Button>
                </Button>
              </Button>
            </ModeSwitcher__SwitcherButton>
            <ModeSwitcher__SwitcherButton
              aria-pressed={false}
              isActive={false}
              onClick={[Function]}
            >
              <Button
                aria-pressed={false}
                className="c25"
                isActive={false}
                onClick={[Function]}
              >
                <Button
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-pressed={false}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c25 c2"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  isActive={false}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <Button
                    activeBackgroundColor="#f7f7f7"
                    activeBorderColor="#888"
                    activeColor="#000"
                    aria-pressed={false}
                    backgroundColor="#f7f7f7"
                    borderColor="#ccc"
                    boxShadowColor="#ccc"
                    className="c25 c2 Button-kDSBcD c3"
                    focusBackgroundColor="#fff"
                    focusBorderColor="#0066cd"
                    focusColor="#000"
                    hoverBackgroundColor="#fff"
                    hoverBorderColor="#888"
                    hoverColor="#000"
                    isActive={false}
                    onClick={[Function]}
                    textColor="#555"
                    type="button"
                  >
                    <Button
                      activeBackgroundColor="#f7f7f7"
                      activeBorderColor="#888"
                      activeColor="#000"
                      aria-pressed={false}
                      backgroundColor="#f7f7f7"
                      borderColor="#ccc"
                      boxShadowColor="#ccc"
                      className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                      focusBackgroundColor="#fff"
                      focusBorderColor="#0066cd"
                      focusColor="#000"
                      hoverBackgroundColor="#fff"
                      hoverBorderColor="#888"
                      hoverColor="#000"
                      isActive={false}
                      onClick={[Function]}
                      textColor="#555"
                      type="button"
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-pressed={false}
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        isActive={false}
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button__BaseButton
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-pressed={false}
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          isActive={false}
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <button
                            aria-pressed={false}
                            className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                            onClick={[Function]}
                            type="button"
                          >
                            <SvgIcon
                              color="currentColor"
                              icon="desktop"
                              size="18px"
                            >
                              <SvgIcon__StyledSvg
                                aria-hidden={true}
                                className="yoast-svg-icon yoast-svg-icon-desktop"
                                fill="currentColor"
                                focusable="false"
                                role="img"
                                size="18px"
                                viewBox="0 0 1792 1792"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="yoast-svg-icon yoast-svg-icon-desktop c26"
                                  fill="currentColor"
                                  focusable="false"
                                  role="img"
                                  size="18px"
                                  viewBox="0 0 1792 1792"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M1728 992v-832q0-13-9.5-22.5t-22.5-9.5h-1600q-13 0-22.5 9.5t-9.5 22.5v832q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5zm128-832v1088q0 66-47 113t-113 47h-544q0 37 16 77.5t32 71 16 43.5q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45q0-14 16-44t32-70 16-78h-544q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1600q66 0 113 47t47 113z"
                                  />
                                </svg>
                              </SvgIcon__StyledSvg>
                            </SvgIcon>
                            <ScreenReaderText>
                              <span
                                className="screen-reader-text"
                                style={
                                  Object {
                                    "clip": "rect(1px, 1px, 1px, 1px)",
                                    "height": "1px",
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "width": "1px",
                                  }
                                }
                              >
                                Desktop preview
                              </span>
                            </ScreenReaderText>
                          </button>
                        </Button__BaseButton>
                      </Button>
                    </Button>
                  </Button>
                </Button>
              </Button>
            </ModeSwitcher__SwitcherButton>
          </div>
        </ModeSwitcher__Switcher>
      </ModeSwitcher>
      <Button
        aria-expanded={true}
        innerRef={[Function]}
        onClick={[Function]}
      >
        <Button
          activeBackgroundColor="#f7f7f7"
          activeBorderColor="#888"
          activeColor="#000"
          aria-expanded={true}
          backgroundColor="#f7f7f7"
          borderColor="#ccc"
          boxShadowColor="#ccc"
          className="c27"
          focusBackgroundColor="#fff"
          focusBorderColor="#0066cd"
          focusColor="#000"
          hoverBackgroundColor="#fff"
          hoverBorderColor="#888"
          hoverColor="#000"
          innerRef={[Function]}
          onClick={[Function]}
          textColor="#555"
          type="button"
        >
          <Button
            activeBackgroundColor="#f7f7f7"
            activeBorderColor="#888"
            activeColor="#000"
            aria-expanded={true}
            backgroundColor="#f7f7f7"
            borderColor="#ccc"
            boxShadowColor="#ccc"
            className="c27 Button-kDSBcD c3"
            focusBackgroundColor="#fff"
            focusBorderColor="#0066cd"
            focusColor="#000"
            hoverBackgroundColor="#fff"
            hoverBorderColor="#888"
            hoverColor="#000"
            innerRef={[Function]}
            onClick={[Function]}
            textColor="#555"
            type="button"
          >
            <Button
              activeBackgroundColor="#f7f7f7"
              activeBorderColor="#888"
              activeColor="#000"
              aria-expanded={true}
              backgroundColor="#f7f7f7"
              borderColor="#ccc"
              boxShadowColor="#ccc"
              className="c27 Button-kDSBcD c3 Button-kDSBcD c4"
              focusBackgroundColor="#fff"
              focusBorderColor="#0066cd"
              focusColor="#000"
              hoverBackgroundColor="#fff"
              hoverBorderColor="#888"
              hoverColor="#000"
              innerRef={[Function]}
              onClick={[Function]}
              textColor="#555"
              type="button"
            >
              <Button
                activeBackgroundColor="#f7f7f7"
                activeBorderColor="#888"
                activeColor="#000"
                aria-expanded={true}
                backgroundColor="#f7f7f7"
                borderColor="#ccc"
                boxShadowColor="#ccc"
                className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                focusBackgroundColor="#fff"
                focusBorderColor="#0066cd"
                focusColor="#000"
                hoverBackgroundColor="#fff"
                hoverBorderColor="#888"
                hoverColor="#000"
                innerRef={[Function]}
                onClick={[Function]}
                textColor="#555"
                type="button"
              >
                <Button__BaseButton
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-expanded={true}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  innerRef={[Function]}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <button
                    aria-expanded={true}
                    className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                    onClick={[Function]}
                    type="button"
                  >
                    <SvgIcon
                      icon="edit"
                      size="16px"
                    >
                      <SvgIcon__StyledSvg
                        aria-hidden={true}
                        className="yoast-svg-icon yoast-svg-icon-edit"
                        focusable="false"
                        role="img"
                        size="16px"
                        viewBox="0 0 1792 1792"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <svg
                          aria-hidden={true}
                          className="yoast-svg-icon yoast-svg-icon-edit c9"
                          focusable="false"
                          role="img"
                          size="16px"
                          viewBox="0 0 1792 1792"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M491 1536l91-91-235-235-91 91v107h128v128h107zm523-928q0-22-22-22-10 0-17 7l-542 542q-7 7-7 17 0 22 22 22 10 0 17-7l542-542q7-7 7-17zm-54-192l416 416-832 832h-416v-416zm683 96q0 53-37 90l-166 166-416-416 166-165q36-38 90-38 53 0 91 38l235 234q37 39 37 91z"
                          />
                        </svg>
                      </SvgIcon__StyledSvg>
                    </SvgIcon>
                    Edit snippet
                  </button>
                </Button__BaseButton>
              </Button>
            </Button>
          </Button>
        </Button>
      </Button>
      <SnippetEditorFields
        activeField={null}
        containerPadding="0 20px"
        data={
          Object {
            "description": "Test description, %%replacement_variable%%",
            "slug": "test-slug",
            "title": "Test title",
          }
        }
        descriptionEditorFieldPlaceholder="Modify your meta description by editing it right here"
        descriptionLengthProgress={
          Object {
            "actual": 42,
            "max": 156,
            "score": 6,
          }
        }
        hoveredField={null}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        recommendedReplacementVariables={Array []}
        replacementVariables={Array []}
        titleLengthProgress={
          Object {
            "actual": 0,
            "max": 600,
            "score": 1,
          }
        }
      >
        <Shared__StyledEditor
          padding="0 20px"
        >
          <section
            className="c28"
          >
            <Shared__FormSection>
              <div
                className="c29"
              >
                <ReplacementVariableEditor
                  content="Test title"
                  editorRef={[Function]}
                  fieldId="snippet-editor-field-title"
                  isActive={false}
                  isHovered={false}
                  label="SEO title"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  recommendedReplacementVariables={Array []}
                  replacementVariables={Array []}
                  withCaret={true}
                >
                  <Shared__SimulatedLabel
                    id="42"
                    onClick={[Function]}
                  >
                    <div
                      className="c30"
                      id="42"
                      onClick={[Function]}
                    >
                      SEO title
                    </div>
                  </Shared__SimulatedLabel>
                  <Shared__TriggerReplacementVariableSuggestionsButton
                    onClick={[Function]}
                  >
                    <Button
                      className="c31"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c31 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c31 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <SvgIcon
                                    icon="plus-circle"
                                    size="16px"
                                  >
                                    <SvgIcon__StyledSvg
                                      aria-hidden={true}
                                      className="yoast-svg-icon yoast-svg-icon-plus-circle"
                                      focusable="false"
                                      role="img"
                                      size="16px"
                                      viewBox="0 0 1792 1792"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-plus-circle c9"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M1344 960v-128q0-26-19-45t-45-19h-256v-256q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v256h-256q-26 0-45 19t-19 45v128q0 26 19 45t45 19h256v256q0 26 19 45t45 19h128q26 0 45-19t19-45v-256h256q26 0 45-19t19-45zm320-64q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                        />
                                      </svg>
                                    </SvgIcon__StyledSvg>
                                  </SvgIcon>
                                  Insert snippet variable
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </Shared__TriggerReplacementVariableSuggestionsButton>
                  <Shared__InputContainer
                    id="snippet-editor-field-title"
                    isActive={false}
                    isHovered={false}
                    onClick={[Function]}
                  >
                    <div
                      className="c32"
                      id="snippet-editor-field-title"
                      onClick={[Function]}
                    >
                      <Wrapper
                        ariaLabelledBy="42"
                        content="Test title"
                        innerRef={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        recommendedReplacementVariables={Array []}
                        replacementVariables={Array []}
                      >
                        <ReplacementVariableEditorStandalone
                          ariaLabelledBy="42"
                          content="Test title"
                          innerRef={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          recommendedReplacementVariables={Array []}
                          replacementVariables={Array []}
                        >
                          <div />
                        </ReplacementVariableEditorStandalone>
                      </Wrapper>
                    </div>
                  </Shared__InputContainer>
                </ReplacementVariableEditor>
                <ProgressBar
                  aria-hidden="true"
                  backgroundColor="#f7f7f7"
                  borderColor="#ddd"
                  max={600}
                  progressColor="#dc3232"
                  value={0}
                >
                  <progress
                    aria-hidden="true"
                    className="c33"
                    max={600}
                    value={0}
                  />
                </ProgressBar>
              </div>
            </Shared__FormSection>
            <Shared__FormSection>
              <div
                className="c29"
              >
                <Shared__SimulatedLabel
                  id="snippet-editor-field-41-slug"
                  onClick={[Function]}
                >
                  <div
                    className="c30"
                    id="snippet-editor-field-41-slug"
                    onClick={[Function]}
                  >
                    Slug
                  </div>
                </Shared__SimulatedLabel>
                <Shared__InputContainer
                  isActive={false}
                  isHovered={false}
                  onClick={[Function]}
                >
                  <div
                    className="c34"
                    onClick={[Function]}
                  >
                    <SnippetEditorFields__SlugInput
                      aria-labelledby="snippet-editor-field-41-slug"
                      id="snippet-editor-field-slug"
                      innerRef={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      value="test-slug"
                    >
                      <input
                        aria-labelledby="snippet-editor-field-41-slug"
                        className="c35"
                        id="snippet-editor-field-slug"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        value="test-slug"
                      />
                    </SnippetEditorFields__SlugInput>
                  </div>
                </Shared__InputContainer>
              </div>
            </Shared__FormSection>
            <Shared__FormSection>
              <div
                className="c29"
              >
                <ReplacementVariableEditor
                  content="Test description, %%replacement_variable%%"
                  editorRef={[Function]}
                  fieldId="snippet-editor-field-description"
                  isActive={false}
                  isHovered={false}
                  label="Meta description"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  placeholder="Modify your meta description by editing it right here"
                  recommendedReplacementVariables={Array []}
                  replacementVariables={Array []}
                  type="description"
                  withCaret={true}
                >
                  <Shared__SimulatedLabel
                    id="43"
                    onClick={[Function]}
                  >
                    <div
                      className="c30"
                      id="43"
                      onClick={[Function]}
                    >
                      Meta description
                    </div>
                  </Shared__SimulatedLabel>
                  <Shared__TriggerReplacementVariableSuggestionsButton
                    onClick={[Function]}
                  >
                    <Button
                      className="c31"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c31 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c31 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <SvgIcon
                                    icon="plus-circle"
                                    size="16px"
                                  >
                                    <SvgIcon__StyledSvg
                                      aria-hidden={true}
                                      className="yoast-svg-icon yoast-svg-icon-plus-circle"
                                      focusable="false"
                                      role="img"
                                      size="16px"
                                      viewBox="0 0 1792 1792"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-plus-circle c9"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M1344 960v-128q0-26-19-45t-45-19h-256v-256q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v256h-256q-26 0-45 19t-19 45v128q0 26 19 45t45 19h256v256q0 26 19 45t45 19h128q26 0 45-19t19-45v-256h256q26 0 45-19t19-45zm320-64q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                        />
                                      </svg>
                                    </SvgIcon__StyledSvg>
                                  </SvgIcon>
                                  Insert snippet variable
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </Shared__TriggerReplacementVariableSuggestionsButton>
                  <Shared__InputContainer
                    id="snippet-editor-field-description"
                    isActive={false}
                    isHovered={false}
                    onClick={[Function]}
                  >
                    <div
                      className="c36"
                      id="snippet-editor-field-description"
                      onClick={[Function]}
                    >
                      <Wrapper
                        ariaLabelledBy="43"
                        content="Test description, %%replacement_variable%%"
                        innerRef={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        placeholder="Modify your meta description by editing it right here"
                        recommendedReplacementVariables={Array []}
                        replacementVariables={Array []}
                      >
                        <ReplacementVariableEditorStandalone
                          ariaLabelledBy="43"
                          content="Test description, %%replacement_variable%%"
                          innerRef={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Modify your meta description by editing it right here"
                          recommendedReplacementVariables={Array []}
                          replacementVariables={Array []}
                        >
                          <div />
                        </ReplacementVariableEditorStandalone>
                      </Wrapper>
                    </div>
                  </Shared__InputContainer>
                </ReplacementVariableEditor>
                <ProgressBar
                  aria-hidden="true"
                  backgroundColor="#f7f7f7"
                  borderColor="#ddd"
                  max={156}
                  progressColor="#ee7c1b"
                  value={42}
                >
                  <progress
                    aria-hidden="true"
                    className="c37"
                    max={156}
                    value={42}
                  />
                </ProgressBar>
              </div>
            </Shared__FormSection>
          </section>
        </Shared__StyledEditor>
      </SnippetEditorFields>
      <Button
        onClick={[Function]}
      >
        <Button
          activeBackgroundColor="#f7f7f7"
          activeBorderColor="#888"
          activeColor="#000"
          backgroundColor="#f7f7f7"
          borderColor="#ccc"
          boxShadowColor="#ccc"
          className="c38"
          focusBackgroundColor="#fff"
          focusBorderColor="#0066cd"
          focusColor="#000"
          hoverBackgroundColor="#fff"
          hoverBorderColor="#888"
          hoverColor="#000"
          onClick={[Function]}
          textColor="#555"
          type="button"
        >
          <Button
            activeBackgroundColor="#f7f7f7"
            activeBorderColor="#888"
            activeColor="#000"
            backgroundColor="#f7f7f7"
            borderColor="#ccc"
            boxShadowColor="#ccc"
            className="c38 Button-kDSBcD c3"
            focusBackgroundColor="#fff"
            focusBorderColor="#0066cd"
            focusColor="#000"
            hoverBackgroundColor="#fff"
            hoverBorderColor="#888"
            hoverColor="#000"
            onClick={[Function]}
            textColor="#555"
            type="button"
          >
            <Button
              activeBackgroundColor="#f7f7f7"
              activeBorderColor="#888"
              activeColor="#000"
              backgroundColor="#f7f7f7"
              borderColor="#ccc"
              boxShadowColor="#ccc"
              className="c38 Button-kDSBcD c3 Button-kDSBcD c4"
              focusBackgroundColor="#fff"
              focusBorderColor="#0066cd"
              focusColor="#000"
              hoverBackgroundColor="#fff"
              hoverBorderColor="#888"
              hoverColor="#000"
              onClick={[Function]}
              textColor="#555"
              type="button"
            >
              <Button
                activeBackgroundColor="#f7f7f7"
                activeBorderColor="#888"
                activeColor="#000"
                backgroundColor="#f7f7f7"
                borderColor="#ccc"
                boxShadowColor="#ccc"
                className="c38 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                focusBackgroundColor="#fff"
                focusBorderColor="#0066cd"
                focusColor="#000"
                hoverBackgroundColor="#fff"
                hoverBorderColor="#888"
                hoverColor="#000"
                onClick={[Function]}
                textColor="#555"
                type="button"
              >
                <Button__BaseButton
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c38 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <button
                    className="c38 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                    onClick={[Function]}
                    type="button"
                  >
                    Close snippet editor
                  </button>
                </Button__BaseButton>
              </Button>
            </Button>
          </Button>
        </Button>
      </Button>
    </div>
  </ErrorBoundary>
</SnippetEditor>
`;

exports[`SnippetEditor colored progress bars can handle scores of 3 and 9 1`] = `
.c7 {
  color: #555;
  border-color: #ccc;
  background: #f7f7f7;
  box-shadow: 0 1px 0 rgba( 204,204,204,1 );
}

.c2 {
  font-size: 0.8rem;
}

.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  vertical-align: middle;
  border-width: 1px;
  border-style: solid;
  margin: 0;
  padding: 4px 10px;
  border-radius: 3px;
  cursor: pointer;
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  font-weight: inherit;
  text-align: left;
  overflow: visible;
  min-height: 32px;
}

.c3 svg {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c4:hover {
  color: #000;
  background-color: #fff;
  border-color: #888;
}

.c5::-moz-focus-inner {
  border-width: 0;
}

.c5:focus {
  outline: none;
  border-color: #0066cd;
  color: #000;
  background-color: #fff;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c6:active {
  color: #000;
  background-color: #f7f7f7;
  border-color: #888;
  box-shadow: inset 0 2px 5px -3px rgba( 0,0,0,0.5 );
}

.c27 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 10px 0 0 4px;
  fill: #555;
  padding-left: 8px;
}

.c27 svg {
  margin-right: 7px;
}

.c38 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin-top: 24px;
}

.c10 >:first-child {
  overflow: hidden;
  -webkit-transition: height 300ms ease-out;
  transition: height 300ms ease-out;
}

.c0 {
  max-width: 600px;
  font-weight: normal;
  margin: 0 20px 0 25px;
}

.c1 {
  min-width: 14px;
  min-height: 14px;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  border: 1px solid transparent;
  box-shadow: none;
  display: block;
  margin: -44px -10px 10px 0;
  background-color: transparent;
  float: right;
  padding: 3px 0 0 6px;
}

.c1:hover {
  color: #0066cd;
}

.c1:focus {
  border: 1px solid #0066cd;
  outline: none;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c1:focus svg {
  fill: #0066cd;
  color: #0066cd;
}

.c1:active {
  box-shadow: none;
}

.c8:hover {
  fill: #0066cd;
}

.c32 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
}

.c32 .public-DraftStyleDefault-block {
  line-height: 24px;
}

.c32::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c34 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
}

.c34::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c36 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
  min-height: 72px;
  padding: 2px 6px;
  line-height: 24px;
}

.c36 .public-DraftEditorPlaceholder-root {
  color: #646464;
}

.c36 .public-DraftEditorPlaceholder-hasFocus {
  color: #646464;
}

.c36::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c29 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin: 24px 0 0 0;
}

.c28 {
  padding: 0 20px;
}

.c30 {
  -webkit-flex: 1 1 200px;
  -ms-flex: 1 1 200px;
  flex: 1 1 200px;
  min-width: 200px;
  cursor: pointer;
  font-size: 16px;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 4px 0;
}

.c31 {
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  padding-left: 8px;
  height: 33px;
  border: 1px solid #dbdbdb;
  font-size: 13px;
}

.c31 svg {
  margin-right: 7px;
  fill: #555;
}

.c11 {
  border-bottom: 1px hidden #fff;
  border-radius: 2px;
  box-shadow: 0 1px 2px rgba(0,0,0,.2);
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  max-width: 600px;
  box-sizing: border-box;
  font-size: 14px;
}

.c13 {
  cursor: pointer;
  position: relative;
}

.c15 {
  color: #1e0fbe;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-size: 18px;
  line-height: 1.2;
  font-weight: normal;
  margin: 0;
  display: inline-block;
  overflow: hidden;
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c14 {
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c16 {
  display: inline-block;
  font-size: 16px;
  line-height: 1.2em;
  max-height: 2.4em;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c17 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
}

.c18 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%;
}

.c21 {
  color: #545454;
  cursor: pointer;
  position: relative;
  max-width: 600px;
  font-size: 13px;
}

.c20 {
  font-size: 14px;
  line-height: 20px;
}

.c12 {
  padding: 8px 16px;
}

.c19 {
  border: 0;
  border-bottom: 1px solid #DFE1E5;
  margin: 0;
}

.c33 {
  box-sizing: border-box;
  width: 100%;
  height: 8px;
  display: block;
  margin-top: 8px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #f7f7f7;
  border: 1px solid #ddd;
}

.c33::-webkit-progress-bar {
  background-color: #f7f7f7;
}

.c33::-webkit-progress-value {
  background-color: #dc3232;
  -webkit-transition: width 250ms;
  transition: width 250ms;
}

.c33::-moz-progress-bar {
  background-color: #dc3232;
}

.c33::-ms-fill {
  background-color: #dc3232;
  border: 0;
}

.c37 {
  box-sizing: border-box;
  width: 100%;
  height: 8px;
  display: block;
  margin-top: 8px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #f7f7f7;
  border: 1px solid #ddd;
}

.c37::-webkit-progress-bar {
  background-color: #f7f7f7;
}

.c37::-webkit-progress-value {
  background-color: #ee7c1b;
  -webkit-transition: width 250ms;
  transition: width 250ms;
}

.c37::-moz-progress-bar {
  background-color: #ee7c1b;
}

.c37::-ms-fill {
  background-color: #ee7c1b;
  border: 0;
}

.c35 {
  border: none;
  width: 100%;
  height: inherit;
  line-height: inherit;
  font-family: inherit;
  font-size: inherit;
  color: inherit;
}

.c35:focus {
  outline: 0;
}

.c23 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: #555;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 3px 0 0 3px;
}

.c23:hover,
.c23:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c25 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: transparent;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 0 3px 3px 0;
}

.c25:hover,
.c25:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c22 {
  display: inline-block;
  margin-top: 10px;
  border: 1px solid #dbdbdb;
  border-radius: 4px;
  background-color: #f7f7f7;
  vertical-align: top;
}

.c9 {
  width: 16px;
  height: 16px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c24 {
  width: 22px;
  height: 22px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c26 {
  width: 18px;
  height: 18px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

@media all and (-ms-high-contrast:none),(-ms-high-contrast:active) {
  .c3::after {
    display: inline-block;
    content: "";
    min-height: 22px;
  }
}

<SnippetEditor
  baseUrl="http://example.org/"
  data={
    Object {
      "description": "Test description, %%replacement_variable%%",
      "slug": "test-slug",
      "title": "Test title",
    }
  }
  date=""
  descriptionEditorFieldPlaceholder="Modify your meta description by editing it right here"
  descriptionLengthProgress={
    Object {
      "actual": 330,
      "max": 650,
      "score": 9,
    }
  }
  hasPaperStyle={true}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "textComponent": "span",
    }
  }
  locale="en"
  mapEditorDataToPreview={null}
  mode="mobile"
  onChange={[MockFunction]}
  onChangeAnalysisData={[Function]}
  recommendedReplacementVariables={Array []}
  replacementVariables={Array []}
  titleLengthProgress={
    Object {
      "actual": 100,
      "max": 550,
      "score": 3,
    }
  }
>
  <ErrorBoundary>
    <div>
      <SnippetPreview
        activeField={null}
        breadcrumbs={null}
        date=""
        description="Test description, %%replacement_variable%%"
        hoveredField={null}
        isAmp={false}
        keyword=""
        locale="en"
        mode="mobile"
        onHover={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        title="Test title"
        url="example.org/test-slug"
      >
        <section>
          <div>
            <HelpTextWrapper
              className="yoast-help"
              helpText={
                Array [
                  "This is a rendering of what this post might look like in Google's search results. ",
                  <OutboundLink
                    href="https://yoa.st/snippet-preview"
                  >
                    Learn more about the Snippet Preview.
                  </OutboundLink>,
                ]
              }
              helpTextButtonLabel="Help on the Snippet Preview"
              panelMaxWidth="400px"
            >
              <HelpTextWrapper__HelpTextContainer
                className="yoast-help"
              >
                <div
                  className="yoast-help c0"
                >
                  <HelpTextWrapper__HelpTextButton
                    aria-controls={null}
                    aria-expanded={false}
                    aria-label="Help on the Snippet Preview"
                    className="yoast-help__button"
                    onClick={[Function]}
                  >
                    <Button
                      aria-controls={null}
                      aria-expanded={false}
                      aria-label="Help on the Snippet Preview"
                      className="yoast-help__button c1"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-controls={null}
                        aria-expanded={false}
                        aria-label="Help on the Snippet Preview"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="yoast-help__button c1 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-controls={null}
                          aria-expanded={false}
                          aria-label="Help on the Snippet Preview"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="yoast-help__button c1 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            aria-controls={null}
                            aria-expanded={false}
                            aria-label="Help on the Snippet Preview"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              aria-controls={null}
                              aria-expanded={false}
                              aria-label="Help on the Snippet Preview"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                aria-controls={null}
                                aria-expanded={false}
                                aria-label="Help on the Snippet Preview"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  aria-controls={null}
                                  aria-expanded={false}
                                  aria-label="Help on the Snippet Preview"
                                  className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <HelpTextWrapper__StyledSvg
                                    color="#646464"
                                    icon="question-circle"
                                    size="16px"
                                  >
                                    <SvgIcon
                                      className="c8"
                                      color="#646464"
                                      icon="question-circle"
                                      size="16px"
                                    >
                                      <SvgIcon__StyledSvg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-question-circle c8"
                                        fill="#646464"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="yoast-svg-icon yoast-svg-icon-question-circle c8 c9"
                                          fill="#646464"
                                          focusable="false"
                                          role="img"
                                          size="16px"
                                          viewBox="0 0 1792 1792"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M1024 1376v-192q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23-9t9-23zm256-672q0-88-55.5-163t-138.5-116-170-41q-243 0-371 213-15 24 8 42l132 100q7 6 19 6 16 0 25-12 53-68 86-92 34-24 86-24 48 0 85.5 26t37.5 59q0 38-20 61t-68 45q-63 28-115.5 86.5t-52.5 125.5v36q0 14 9 23t23 9h192q14 0 23-9t9-23q0-19 21.5-49.5t54.5-49.5q32-18 49-28.5t46-35 44.5-48 28-60.5 12.5-81zm384 192q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                          />
                                        </svg>
                                      </SvgIcon__StyledSvg>
                                    </SvgIcon>
                                  </HelpTextWrapper__StyledSvg>
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </HelpTextWrapper__HelpTextButton>
                  <YoastSlideToggle
                    duration={300}
                    isOpen={false}
                  >
                    <animations__YoastSlideToggleContainer
                      duration={300}
                    >
                      <div
                        className="c10"
                      >
                        <CSSTransition
                          classNames="slide"
                          in={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={true}
                        >
                          <Transition
                            appear={false}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={true}
                          />
                        </CSSTransition>
                      </div>
                    </animations__YoastSlideToggleContainer>
                  </YoastSlideToggle>
                </div>
              </HelpTextWrapper__HelpTextContainer>
            </HelpTextWrapper>
          </div>
          <SnippetPreview__MobileContainer
            padding={20}
            width={640}
          >
            <div
              className="c11"
              width={640}
            >
              <SnippetPreview__MobilePartContainer>
                <div
                  className="c12"
                >
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      SEO title preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__BaseTitle
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                  >
                    <div
                      className="c13"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                    >
                      <SnippetPreview__TitleBounded>
                        <SnippetPreview__Title
                          className="c14"
                        >
                          <div
                            className="c14 c15"
                          >
                            <SnippetPreview__TitleUnboundedMobile
                              innerRef={[Function]}
                            >
                              <span
                                className="c16"
                              >
                                Test title
                              </span>
                            </SnippetPreview__TitleUnboundedMobile>
                          </div>
                        </SnippetPreview__Title>
                      </SnippetPreview__TitleBounded>
                    </div>
                  </SnippetPreview__BaseTitle>
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      Url preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__BaseUrl>
                    <div
                      className="c17"
                    >
                      <SnippetPreview__BaseUrlOverflowContainer
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                      >
                        <div
                          className="c18"
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                        >
                          example.org â€º test-slug
                        </div>
                      </SnippetPreview__BaseUrlOverflowContainer>
                    </div>
                  </SnippetPreview__BaseUrl>
                </div>
              </SnippetPreview__MobilePartContainer>
              <SnippetPreview__Separator>
                <hr
                  className="c19"
                />
              </SnippetPreview__Separator>
              <SnippetPreview__MobilePartContainer>
                <div
                  className="c12"
                >
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      Meta description preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__MobileDescription
                    isDescriptionPlaceholder={false}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                  >
                    <SnippetPreview__DesktopDescription
                      className="c20"
                      isDescriptionPlaceholder={false}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                    >
                      <div
                        className="c20 c21"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                      >
                        <SnippetPreview__MobileDescription
                          innerRef={[Function]}
                          isDescriptionPlaceholder={false}
                        >
                          <SnippetPreview__DesktopDescription
                            className="c20"
                            innerRef={[Function]}
                            isDescriptionPlaceholder={false}
                          >
                            <div
                              className="c20 c21"
                            >
                              Test description, %%replacement_variable%%
                            </div>
                          </SnippetPreview__DesktopDescription>
                        </SnippetPreview__MobileDescription>
                      </div>
                    </SnippetPreview__DesktopDescription>
                  </SnippetPreview__MobileDescription>
                </div>
              </SnippetPreview__MobilePartContainer>
            </div>
          </SnippetPreview__MobileContainer>
        </section>
      </SnippetPreview>
      <ModeSwitcher
        active="mobile"
        onChange={[Function]}
      >
        <ModeSwitcher__Switcher>
          <div
            className="c22"
          >
            <ModeSwitcher__SwitcherButton
              aria-pressed={true}
              isActive={true}
              onClick={[Function]}
            >
              <Button
                aria-pressed={true}
                className="c23"
                isActive={true}
                onClick={[Function]}
              >
                <Button
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-pressed={true}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c23 c2"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  isActive={true}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <Button
                    activeBackgroundColor="#f7f7f7"
                    activeBorderColor="#888"
                    activeColor="#000"
                    aria-pressed={true}
                    backgroundColor="#f7f7f7"
                    borderColor="#ccc"
                    boxShadowColor="#ccc"
                    className="c23 c2 Button-kDSBcD c3"
                    focusBackgroundColor="#fff"
                    focusBorderColor="#0066cd"
                    focusColor="#000"
                    hoverBackgroundColor="#fff"
                    hoverBorderColor="#888"
                    hoverColor="#000"
                    isActive={true}
                    onClick={[Function]}
                    textColor="#555"
                    type="button"
                  >
                    <Button
                      activeBackgroundColor="#f7f7f7"
                      activeBorderColor="#888"
                      activeColor="#000"
                      aria-pressed={true}
                      backgroundColor="#f7f7f7"
                      borderColor="#ccc"
                      boxShadowColor="#ccc"
                      className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                      focusBackgroundColor="#fff"
                      focusBorderColor="#0066cd"
                      focusColor="#000"
                      hoverBackgroundColor="#fff"
                      hoverBorderColor="#888"
                      hoverColor="#000"
                      isActive={true}
                      onClick={[Function]}
                      textColor="#555"
                      type="button"
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-pressed={true}
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        isActive={true}
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button__BaseButton
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-pressed={true}
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          isActive={true}
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <button
                            aria-pressed={true}
                            className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                            onClick={[Function]}
                            type="button"
                          >
                            <SvgIcon
                              color="currentColor"
                              icon="mobile"
                              size="22px"
                            >
                              <SvgIcon__StyledSvg
                                aria-hidden={true}
                                className="yoast-svg-icon yoast-svg-icon-mobile"
                                fill="currentColor"
                                focusable="false"
                                role="img"
                                size="22px"
                                viewBox="0 0 1792 1792"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="yoast-svg-icon yoast-svg-icon-mobile c24"
                                  fill="currentColor"
                                  focusable="false"
                                  role="img"
                                  size="22px"
                                  viewBox="0 0 1792 1792"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M976 1408q0-33-23.5-56.5t-56.5-23.5-56.5 23.5-23.5 56.5 23.5 56.5 56.5 23.5 56.5-23.5 23.5-56.5zm208-160v-704q0-13-9.5-22.5t-22.5-9.5h-512q-13 0-22.5 9.5t-9.5 22.5v704q0 13 9.5 22.5t22.5 9.5h512q13 0 22.5-9.5t9.5-22.5zm-192-848q0-16-16-16h-160q-16 0-16 16t16 16h160q16 0 16-16zm288-16v1024q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-1024q0-52 38-90t90-38h512q52 0 90 38t38 90z"
                                  />
                                </svg>
                              </SvgIcon__StyledSvg>
                            </SvgIcon>
                            <ScreenReaderText>
                              <span
                                className="screen-reader-text"
                                style={
                                  Object {
                                    "clip": "rect(1px, 1px, 1px, 1px)",
                                    "height": "1px",
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "width": "1px",
                                  }
                                }
                              >
                                Mobile preview
                              </span>
                            </ScreenReaderText>
                          </button>
                        </Button__BaseButton>
                      </Button>
                    </Button>
                  </Button>
                </Button>
              </Button>
            </ModeSwitcher__SwitcherButton>
            <ModeSwitcher__SwitcherButton
              aria-pressed={false}
              isActive={false}
              onClick={[Function]}
            >
              <Button
                aria-pressed={false}
                className="c25"
                isActive={false}
                onClick={[Function]}
              >
                <Button
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-pressed={false}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c25 c2"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  isActive={false}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <Button
                    activeBackgroundColor="#f7f7f7"
                    activeBorderColor="#888"
                    activeColor="#000"
                    aria-pressed={false}
                    backgroundColor="#f7f7f7"
                    borderColor="#ccc"
                    boxShadowColor="#ccc"
                    className="c25 c2 Button-kDSBcD c3"
                    focusBackgroundColor="#fff"
                    focusBorderColor="#0066cd"
                    focusColor="#000"
                    hoverBackgroundColor="#fff"
                    hoverBorderColor="#888"
                    hoverColor="#000"
                    isActive={false}
                    onClick={[Function]}
                    textColor="#555"
                    type="button"
                  >
                    <Button
                      activeBackgroundColor="#f7f7f7"
                      activeBorderColor="#888"
                      activeColor="#000"
                      aria-pressed={false}
                      backgroundColor="#f7f7f7"
                      borderColor="#ccc"
                      boxShadowColor="#ccc"
                      className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                      focusBackgroundColor="#fff"
                      focusBorderColor="#0066cd"
                      focusColor="#000"
                      hoverBackgroundColor="#fff"
                      hoverBorderColor="#888"
                      hoverColor="#000"
                      isActive={false}
                      onClick={[Function]}
                      textColor="#555"
                      type="button"
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-pressed={false}
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        isActive={false}
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button__BaseButton
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-pressed={false}
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          isActive={false}
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <button
                            aria-pressed={false}
                            className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                            onClick={[Function]}
                            type="button"
                          >
                            <SvgIcon
                              color="currentColor"
                              icon="desktop"
                              size="18px"
                            >
                              <SvgIcon__StyledSvg
                                aria-hidden={true}
                                className="yoast-svg-icon yoast-svg-icon-desktop"
                                fill="currentColor"
                                focusable="false"
                                role="img"
                                size="18px"
                                viewBox="0 0 1792 1792"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="yoast-svg-icon yoast-svg-icon-desktop c26"
                                  fill="currentColor"
                                  focusable="false"
                                  role="img"
                                  size="18px"
                                  viewBox="0 0 1792 1792"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M1728 992v-832q0-13-9.5-22.5t-22.5-9.5h-1600q-13 0-22.5 9.5t-9.5 22.5v832q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5zm128-832v1088q0 66-47 113t-113 47h-544q0 37 16 77.5t32 71 16 43.5q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45q0-14 16-44t32-70 16-78h-544q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1600q66 0 113 47t47 113z"
                                  />
                                </svg>
                              </SvgIcon__StyledSvg>
                            </SvgIcon>
                            <ScreenReaderText>
                              <span
                                className="screen-reader-text"
                                style={
                                  Object {
                                    "clip": "rect(1px, 1px, 1px, 1px)",
                                    "height": "1px",
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "width": "1px",
                                  }
                                }
                              >
                                Desktop preview
                              </span>
                            </ScreenReaderText>
                          </button>
                        </Button__BaseButton>
                      </Button>
                    </Button>
                  </Button>
                </Button>
              </Button>
            </ModeSwitcher__SwitcherButton>
          </div>
        </ModeSwitcher__Switcher>
      </ModeSwitcher>
      <Button
        aria-expanded={true}
        innerRef={[Function]}
        onClick={[Function]}
      >
        <Button
          activeBackgroundColor="#f7f7f7"
          activeBorderColor="#888"
          activeColor="#000"
          aria-expanded={true}
          backgroundColor="#f7f7f7"
          borderColor="#ccc"
          boxShadowColor="#ccc"
          className="c27"
          focusBackgroundColor="#fff"
          focusBorderColor="#0066cd"
          focusColor="#000"
          hoverBackgroundColor="#fff"
          hoverBorderColor="#888"
          hoverColor="#000"
          innerRef={[Function]}
          onClick={[Function]}
          textColor="#555"
          type="button"
        >
          <Button
            activeBackgroundColor="#f7f7f7"
            activeBorderColor="#888"
            activeColor="#000"
            aria-expanded={true}
            backgroundColor="#f7f7f7"
            borderColor="#ccc"
            boxShadowColor="#ccc"
            className="c27 Button-kDSBcD c3"
            focusBackgroundColor="#fff"
            focusBorderColor="#0066cd"
            focusColor="#000"
            hoverBackgroundColor="#fff"
            hoverBorderColor="#888"
            hoverColor="#000"
            innerRef={[Function]}
            onClick={[Function]}
            textColor="#555"
            type="button"
          >
            <Button
              activeBackgroundColor="#f7f7f7"
              activeBorderColor="#888"
              activeColor="#000"
              aria-expanded={true}
              backgroundColor="#f7f7f7"
              borderColor="#ccc"
              boxShadowColor="#ccc"
              className="c27 Button-kDSBcD c3 Button-kDSBcD c4"
              focusBackgroundColor="#fff"
              focusBorderColor="#0066cd"
              focusColor="#000"
              hoverBackgroundColor="#fff"
              hoverBorderColor="#888"
              hoverColor="#000"
              innerRef={[Function]}
              onClick={[Function]}
              textColor="#555"
              type="button"
            >
              <Button
                activeBackgroundColor="#f7f7f7"
                activeBorderColor="#888"
                activeColor="#000"
                aria-expanded={true}
                backgroundColor="#f7f7f7"
                borderColor="#ccc"
                boxShadowColor="#ccc"
                className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                focusBackgroundColor="#fff"
                focusBorderColor="#0066cd"
                focusColor="#000"
                hoverBackgroundColor="#fff"
                hoverBorderColor="#888"
                hoverColor="#000"
                innerRef={[Function]}
                onClick={[Function]}
                textColor="#555"
                type="button"
              >
                <Button__BaseButton
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-expanded={true}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  innerRef={[Function]}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <button
                    aria-expanded={true}
                    className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                    onClick={[Function]}
                    type="button"
                  >
                    <SvgIcon
                      icon="edit"
                      size="16px"
                    >
                      <SvgIcon__StyledSvg
                        aria-hidden={true}
                        className="yoast-svg-icon yoast-svg-icon-edit"
                        focusable="false"
                        role="img"
                        size="16px"
                        viewBox="0 0 1792 1792"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <svg
                          aria-hidden={true}
                          className="yoast-svg-icon yoast-svg-icon-edit c9"
                          focusable="false"
                          role="img"
                          size="16px"
                          viewBox="0 0 1792 1792"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M491 1536l91-91-235-235-91 91v107h128v128h107zm523-928q0-22-22-22-10 0-17 7l-542 542q-7 7-7 17 0 22 22 22 10 0 17-7l542-542q7-7 7-17zm-54-192l416 416-832 832h-416v-416zm683 96q0 53-37 90l-166 166-416-416 166-165q36-38 90-38 53 0 91 38l235 234q37 39 37 91z"
                          />
                        </svg>
                      </SvgIcon__StyledSvg>
                    </SvgIcon>
                    Edit snippet
                  </button>
                </Button__BaseButton>
              </Button>
            </Button>
          </Button>
        </Button>
      </Button>
      <SnippetEditorFields
        activeField={null}
        containerPadding="0 20px"
        data={
          Object {
            "description": "Test description, %%replacement_variable%%",
            "slug": "test-slug",
            "title": "Test title",
          }
        }
        descriptionEditorFieldPlaceholder="Modify your meta description by editing it right here"
        descriptionLengthProgress={
          Object {
            "actual": 42,
            "max": 156,
            "score": 6,
          }
        }
        hoveredField={null}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        recommendedReplacementVariables={Array []}
        replacementVariables={Array []}
        titleLengthProgress={
          Object {
            "actual": 0,
            "max": 600,
            "score": 1,
          }
        }
      >
        <Shared__StyledEditor
          padding="0 20px"
        >
          <section
            className="c28"
          >
            <Shared__FormSection>
              <div
                className="c29"
              >
                <ReplacementVariableEditor
                  content="Test title"
                  editorRef={[Function]}
                  fieldId="snippet-editor-field-title"
                  isActive={false}
                  isHovered={false}
                  label="SEO title"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  recommendedReplacementVariables={Array []}
                  replacementVariables={Array []}
                  withCaret={true}
                >
                  <Shared__SimulatedLabel
                    id="38"
                    onClick={[Function]}
                  >
                    <div
                      className="c30"
                      id="38"
                      onClick={[Function]}
                    >
                      SEO title
                    </div>
                  </Shared__SimulatedLabel>
                  <Shared__TriggerReplacementVariableSuggestionsButton
                    onClick={[Function]}
                  >
                    <Button
                      className="c31"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c31 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c31 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <SvgIcon
                                    icon="plus-circle"
                                    size="16px"
                                  >
                                    <SvgIcon__StyledSvg
                                      aria-hidden={true}
                                      className="yoast-svg-icon yoast-svg-icon-plus-circle"
                                      focusable="false"
                                      role="img"
                                      size="16px"
                                      viewBox="0 0 1792 1792"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-plus-circle c9"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M1344 960v-128q0-26-19-45t-45-19h-256v-256q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v256h-256q-26 0-45 19t-19 45v128q0 26 19 45t45 19h256v256q0 26 19 45t45 19h128q26 0 45-19t19-45v-256h256q26 0 45-19t19-45zm320-64q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                        />
                                      </svg>
                                    </SvgIcon__StyledSvg>
                                  </SvgIcon>
                                  Insert snippet variable
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </Shared__TriggerReplacementVariableSuggestionsButton>
                  <Shared__InputContainer
                    id="snippet-editor-field-title"
                    isActive={false}
                    isHovered={false}
                    onClick={[Function]}
                  >
                    <div
                      className="c32"
                      id="snippet-editor-field-title"
                      onClick={[Function]}
                    >
                      <Wrapper
                        ariaLabelledBy="38"
                        content="Test title"
                        innerRef={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        recommendedReplacementVariables={Array []}
                        replacementVariables={Array []}
                      >
                        <ReplacementVariableEditorStandalone
                          ariaLabelledBy="38"
                          content="Test title"
                          innerRef={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          recommendedReplacementVariables={Array []}
                          replacementVariables={Array []}
                        >
                          <div />
                        </ReplacementVariableEditorStandalone>
                      </Wrapper>
                    </div>
                  </Shared__InputContainer>
                </ReplacementVariableEditor>
                <ProgressBar
                  aria-hidden="true"
                  backgroundColor="#f7f7f7"
                  borderColor="#ddd"
                  max={600}
                  progressColor="#dc3232"
                  value={0}
                >
                  <progress
                    aria-hidden="true"
                    className="c33"
                    max={600}
                    value={0}
                  />
                </ProgressBar>
              </div>
            </Shared__FormSection>
            <Shared__FormSection>
              <div
                className="c29"
              >
                <Shared__SimulatedLabel
                  id="snippet-editor-field-37-slug"
                  onClick={[Function]}
                >
                  <div
                    className="c30"
                    id="snippet-editor-field-37-slug"
                    onClick={[Function]}
                  >
                    Slug
                  </div>
                </Shared__SimulatedLabel>
                <Shared__InputContainer
                  isActive={false}
                  isHovered={false}
                  onClick={[Function]}
                >
                  <div
                    className="c34"
                    onClick={[Function]}
                  >
                    <SnippetEditorFields__SlugInput
                      aria-labelledby="snippet-editor-field-37-slug"
                      id="snippet-editor-field-slug"
                      innerRef={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      value="test-slug"
                    >
                      <input
                        aria-labelledby="snippet-editor-field-37-slug"
                        className="c35"
                        id="snippet-editor-field-slug"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        value="test-slug"
                      />
                    </SnippetEditorFields__SlugInput>
                  </div>
                </Shared__InputContainer>
              </div>
            </Shared__FormSection>
            <Shared__FormSection>
              <div
                className="c29"
              >
                <ReplacementVariableEditor
                  content="Test description, %%replacement_variable%%"
                  editorRef={[Function]}
                  fieldId="snippet-editor-field-description"
                  isActive={false}
                  isHovered={false}
                  label="Meta description"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  placeholder="Modify your meta description by editing it right here"
                  recommendedReplacementVariables={Array []}
                  replacementVariables={Array []}
                  type="description"
                  withCaret={true}
                >
                  <Shared__SimulatedLabel
                    id="39"
                    onClick={[Function]}
                  >
                    <div
                      className="c30"
                      id="39"
                      onClick={[Function]}
                    >
                      Meta description
                    </div>
                  </Shared__SimulatedLabel>
                  <Shared__TriggerReplacementVariableSuggestionsButton
                    onClick={[Function]}
                  >
                    <Button
                      className="c31"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c31 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c31 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <SvgIcon
                                    icon="plus-circle"
                                    size="16px"
                                  >
                                    <SvgIcon__StyledSvg
                                      aria-hidden={true}
                                      className="yoast-svg-icon yoast-svg-icon-plus-circle"
                                      focusable="false"
                                      role="img"
                                      size="16px"
                                      viewBox="0 0 1792 1792"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-plus-circle c9"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M1344 960v-128q0-26-19-45t-45-19h-256v-256q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v256h-256q-26 0-45 19t-19 45v128q0 26 19 45t45 19h256v256q0 26 19 45t45 19h128q26 0 45-19t19-45v-256h256q26 0 45-19t19-45zm320-64q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                        />
                                      </svg>
                                    </SvgIcon__StyledSvg>
                                  </SvgIcon>
                                  Insert snippet variable
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </Shared__TriggerReplacementVariableSuggestionsButton>
                  <Shared__InputContainer
                    id="snippet-editor-field-description"
                    isActive={false}
                    isHovered={false}
                    onClick={[Function]}
                  >
                    <div
                      className="c36"
                      id="snippet-editor-field-description"
                      onClick={[Function]}
                    >
                      <Wrapper
                        ariaLabelledBy="39"
                        content="Test description, %%replacement_variable%%"
                        innerRef={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        placeholder="Modify your meta description by editing it right here"
                        recommendedReplacementVariables={Array []}
                        replacementVariables={Array []}
                      >
                        <ReplacementVariableEditorStandalone
                          ariaLabelledBy="39"
                          content="Test description, %%replacement_variable%%"
                          innerRef={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Modify your meta description by editing it right here"
                          recommendedReplacementVariables={Array []}
                          replacementVariables={Array []}
                        >
                          <div />
                        </ReplacementVariableEditorStandalone>
                      </Wrapper>
                    </div>
                  </Shared__InputContainer>
                </ReplacementVariableEditor>
                <ProgressBar
                  aria-hidden="true"
                  backgroundColor="#f7f7f7"
                  borderColor="#ddd"
                  max={156}
                  progressColor="#ee7c1b"
                  value={42}
                >
                  <progress
                    aria-hidden="true"
                    className="c37"
                    max={156}
                    value={42}
                  />
                </ProgressBar>
              </div>
            </Shared__FormSection>
          </section>
        </Shared__StyledEditor>
      </SnippetEditorFields>
      <Button
        onClick={[Function]}
      >
        <Button
          activeBackgroundColor="#f7f7f7"
          activeBorderColor="#888"
          activeColor="#000"
          backgroundColor="#f7f7f7"
          borderColor="#ccc"
          boxShadowColor="#ccc"
          className="c38"
          focusBackgroundColor="#fff"
          focusBorderColor="#0066cd"
          focusColor="#000"
          hoverBackgroundColor="#fff"
          hoverBorderColor="#888"
          hoverColor="#000"
          onClick={[Function]}
          textColor="#555"
          type="button"
        >
          <Button
            activeBackgroundColor="#f7f7f7"
            activeBorderColor="#888"
            activeColor="#000"
            backgroundColor="#f7f7f7"
            borderColor="#ccc"
            boxShadowColor="#ccc"
            className="c38 Button-kDSBcD c3"
            focusBackgroundColor="#fff"
            focusBorderColor="#0066cd"
            focusColor="#000"
            hoverBackgroundColor="#fff"
            hoverBorderColor="#888"
            hoverColor="#000"
            onClick={[Function]}
            textColor="#555"
            type="button"
          >
            <Button
              activeBackgroundColor="#f7f7f7"
              activeBorderColor="#888"
              activeColor="#000"
              backgroundColor="#f7f7f7"
              borderColor="#ccc"
              boxShadowColor="#ccc"
              className="c38 Button-kDSBcD c3 Button-kDSBcD c4"
              focusBackgroundColor="#fff"
              focusBorderColor="#0066cd"
              focusColor="#000"
              hoverBackgroundColor="#fff"
              hoverBorderColor="#888"
              hoverColor="#000"
              onClick={[Function]}
              textColor="#555"
              type="button"
            >
              <Button
                activeBackgroundColor="#f7f7f7"
                activeBorderColor="#888"
                activeColor="#000"
                backgroundColor="#f7f7f7"
                borderColor="#ccc"
                boxShadowColor="#ccc"
                className="c38 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                focusBackgroundColor="#fff"
                focusBorderColor="#0066cd"
                focusColor="#000"
                hoverBackgroundColor="#fff"
                hoverBorderColor="#888"
                hoverColor="#000"
                onClick={[Function]}
                textColor="#555"
                type="button"
              >
                <Button__BaseButton
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c38 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <button
                    className="c38 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                    onClick={[Function]}
                    type="button"
                  >
                    Close snippet editor
                  </button>
                </Button__BaseButton>
              </Button>
            </Button>
          </Button>
        </Button>
      </Button>
    </div>
  </ErrorBoundary>
</SnippetEditor>
`;

exports[`SnippetEditor highlights a focused field 1`] = `
.c7 {
  color: #555;
  border-color: #ccc;
  background: #f7f7f7;
  box-shadow: 0 1px 0 rgba( 204,204,204,1 );
}

.c2 {
  font-size: 0.8rem;
}

.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  vertical-align: middle;
  border-width: 1px;
  border-style: solid;
  margin: 0;
  padding: 4px 10px;
  border-radius: 3px;
  cursor: pointer;
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  font-weight: inherit;
  text-align: left;
  overflow: visible;
  min-height: 32px;
}

.c3 svg {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c4:hover {
  color: #000;
  background-color: #fff;
  border-color: #888;
}

.c5::-moz-focus-inner {
  border-width: 0;
}

.c5:focus {
  outline: none;
  border-color: #0066cd;
  color: #000;
  background-color: #fff;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c6:active {
  color: #000;
  background-color: #f7f7f7;
  border-color: #888;
  box-shadow: inset 0 2px 5px -3px rgba( 0,0,0,0.5 );
}

.c27 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 10px 0 0 4px;
  fill: #555;
  padding-left: 8px;
}

.c27 svg {
  margin-right: 7px;
}

.c10 >:first-child {
  overflow: hidden;
  -webkit-transition: height 300ms ease-out;
  transition: height 300ms ease-out;
}

.c0 {
  max-width: 600px;
  font-weight: normal;
  margin: 0 20px 0 25px;
}

.c1 {
  min-width: 14px;
  min-height: 14px;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  border: 1px solid transparent;
  box-shadow: none;
  display: block;
  margin: -44px -10px 10px 0;
  background-color: transparent;
  float: right;
  padding: 3px 0 0 6px;
}

.c1:hover {
  color: #0066cd;
}

.c1:focus {
  border: 1px solid #0066cd;
  outline: none;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c1:focus svg {
  fill: #0066cd;
  color: #0066cd;
}

.c1:active {
  box-shadow: none;
}

.c8:hover {
  fill: #0066cd;
}

.c11 {
  border-bottom: 1px hidden #fff;
  border-radius: 2px;
  box-shadow: 0 1px 2px rgba(0,0,0,.2);
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  max-width: 600px;
  box-sizing: border-box;
  font-size: 14px;
}

.c13 {
  cursor: pointer;
  position: relative;
}

.c15 {
  color: #1e0fbe;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-size: 18px;
  line-height: 1.2;
  font-weight: normal;
  margin: 0;
  display: inline-block;
  overflow: hidden;
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c14 {
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c16 {
  display: inline-block;
  font-size: 16px;
  line-height: 1.2em;
  max-height: 2.4em;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c17 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
}

.c18 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%;
}

.c21 {
  color: #545454;
  cursor: pointer;
  position: relative;
  max-width: 600px;
  font-size: 13px;
}

.c20 {
  font-size: 14px;
  line-height: 20px;
}

.c12 {
  padding: 8px 16px;
}

.c19 {
  border: 0;
  border-bottom: 1px solid #DFE1E5;
  margin: 0;
}

.c23 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: #555;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 3px 0 0 3px;
}

.c23:hover,
.c23:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c25 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: transparent;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 0 3px 3px 0;
}

.c25:hover,
.c25:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c22 {
  display: inline-block;
  margin-top: 10px;
  border: 1px solid #dbdbdb;
  border-radius: 4px;
  background-color: #f7f7f7;
  vertical-align: top;
}

.c9 {
  width: 16px;
  height: 16px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c24 {
  width: 22px;
  height: 22px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c26 {
  width: 18px;
  height: 18px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

@media all and (-ms-high-contrast:none),(-ms-high-contrast:active) {
  .c3::after {
    display: inline-block;
    content: "";
    min-height: 22px;
  }
}

<div>
  <section>
    <div>
      <div
        className="yoast-help c0"
      >
        <button
          aria-controls={null}
          aria-expanded={false}
          aria-label="Help on the Snippet Preview"
          className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
          onClick={[Function]}
          type="button"
        >
          <svg
            aria-hidden={true}
            className="yoast-svg-icon yoast-svg-icon-question-circle c8 c9"
            fill="#646464"
            focusable="false"
            role="img"
            size="16px"
            viewBox="0 0 1792 1792"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M1024 1376v-192q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23-9t9-23zm256-672q0-88-55.5-163t-138.5-116-170-41q-243 0-371 213-15 24 8 42l132 100q7 6 19 6 16 0 25-12 53-68 86-92 34-24 86-24 48 0 85.5 26t37.5 59q0 38-20 61t-68 45q-63 28-115.5 86.5t-52.5 125.5v36q0 14 9 23t23 9h192q14 0 23-9t9-23q0-19 21.5-49.5t54.5-49.5q32-18 49-28.5t46-35 44.5-48 28-60.5 12.5-81zm384 192q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
            />
          </svg>
        </button>
        <div
          className="c10"
        />
      </div>
    </div>
    <div
      className="c11"
      onMouseLeave={undefined}
      width={640}
    >
      <div
        className="c12"
      >
        <span
          className="screen-reader-text"
          style={
            Object {
              "clip": "rect(1px, 1px, 1px, 1px)",
              "height": "1px",
              "overflow": "hidden",
              "position": "absolute",
              "width": "1px",
            }
          }
        >
          SEO title preview:
        </span>
        <div
          className="c13"
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
        >
          <div
            className="c14 c15"
          >
            <span
              className="c16"
            >
              Test title
            </span>
          </div>
        </div>
        <span
          className="screen-reader-text"
          style={
            Object {
              "clip": "rect(1px, 1px, 1px, 1px)",
              "height": "1px",
              "overflow": "hidden",
              "position": "absolute",
              "width": "1px",
            }
          }
        >
          Url preview:
        </span>
        <div
          className="c17"
        >
          <div
            className="c18"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
          >
            example.org â€º test-slug
          </div>
        </div>
      </div>
      <hr
        className="c19"
      />
      <div
        className="c12"
      >
        <span
          className="screen-reader-text"
          style={
            Object {
              "clip": "rect(1px, 1px, 1px, 1px)",
              "height": "1px",
              "overflow": "hidden",
              "position": "absolute",
              "width": "1px",
            }
          }
        >
          Meta description preview:
        </span>
        <div
          className="c20 c21"
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
        >
          <div
            className="c20 c21"
          >
            Test description, %%replacement_variable%%
          </div>
        </div>
      </div>
    </div>
  </section>
  <div
    className="c22"
  >
    <button
      aria-pressed={true}
      className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
      onClick={[Function]}
      type="button"
    >
      <svg
        aria-hidden={true}
        className="yoast-svg-icon yoast-svg-icon-mobile c24"
        fill="currentColor"
        focusable="false"
        role="img"
        size="22px"
        viewBox="0 0 1792 1792"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M976 1408q0-33-23.5-56.5t-56.5-23.5-56.5 23.5-23.5 56.5 23.5 56.5 56.5 23.5 56.5-23.5 23.5-56.5zm208-160v-704q0-13-9.5-22.5t-22.5-9.5h-512q-13 0-22.5 9.5t-9.5 22.5v704q0 13 9.5 22.5t22.5 9.5h512q13 0 22.5-9.5t9.5-22.5zm-192-848q0-16-16-16h-160q-16 0-16 16t16 16h160q16 0 16-16zm288-16v1024q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-1024q0-52 38-90t90-38h512q52 0 90 38t38 90z"
        />
      </svg>
      <span
        className="screen-reader-text"
        style={
          Object {
            "clip": "rect(1px, 1px, 1px, 1px)",
            "height": "1px",
            "overflow": "hidden",
            "position": "absolute",
            "width": "1px",
          }
        }
      >
        Mobile preview
      </span>
    </button>
    <button
      aria-pressed={false}
      className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
      onClick={[Function]}
      type="button"
    >
      <svg
        aria-hidden={true}
        className="yoast-svg-icon yoast-svg-icon-desktop c26"
        fill="currentColor"
        focusable="false"
        role="img"
        size="18px"
        viewBox="0 0 1792 1792"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M1728 992v-832q0-13-9.5-22.5t-22.5-9.5h-1600q-13 0-22.5 9.5t-9.5 22.5v832q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5zm128-832v1088q0 66-47 113t-113 47h-544q0 37 16 77.5t32 71 16 43.5q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45q0-14 16-44t32-70 16-78h-544q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1600q66 0 113 47t47 113z"
        />
      </svg>
      <span
        className="screen-reader-text"
        style={
          Object {
            "clip": "rect(1px, 1px, 1px, 1px)",
            "height": "1px",
            "overflow": "hidden",
            "position": "absolute",
            "width": "1px",
          }
        }
      >
        Desktop preview
      </span>
    </button>
  </div>
  <button
    aria-expanded={false}
    className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
    onClick={[Function]}
    type="button"
  >
    <svg
      aria-hidden={true}
      className="yoast-svg-icon yoast-svg-icon-edit c9"
      fill={undefined}
      focusable="false"
      role="img"
      size="16px"
      viewBox="0 0 1792 1792"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M491 1536l91-91-235-235-91 91v107h128v128h107zm523-928q0-22-22-22-10 0-17 7l-542 542q-7 7-7 17 0 22 22 22 10 0 17-7l542-542q7-7 7-17zm-54-192l416 416-832 832h-416v-416zm683 96q0 53-37 90l-166 166-416-416 166-165q36-38 90-38 53 0 91 38l235 234q37 39 37 91z"
      />
    </svg>
    Edit snippet
  </button>
</div>
`;

exports[`SnippetEditor highlights a hovered field 1`] = `
.c7 {
  color: #555;
  border-color: #ccc;
  background: #f7f7f7;
  box-shadow: 0 1px 0 rgba( 204,204,204,1 );
}

.c2 {
  font-size: 0.8rem;
}

.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  vertical-align: middle;
  border-width: 1px;
  border-style: solid;
  margin: 0;
  padding: 4px 10px;
  border-radius: 3px;
  cursor: pointer;
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  font-weight: inherit;
  text-align: left;
  overflow: visible;
  min-height: 32px;
}

.c3 svg {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c4:hover {
  color: #000;
  background-color: #fff;
  border-color: #888;
}

.c5::-moz-focus-inner {
  border-width: 0;
}

.c5:focus {
  outline: none;
  border-color: #0066cd;
  color: #000;
  background-color: #fff;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c6:active {
  color: #000;
  background-color: #f7f7f7;
  border-color: #888;
  box-shadow: inset 0 2px 5px -3px rgba( 0,0,0,0.5 );
}

.c27 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 10px 0 0 4px;
  fill: #555;
  padding-left: 8px;
}

.c27 svg {
  margin-right: 7px;
}

.c10 >:first-child {
  overflow: hidden;
  -webkit-transition: height 300ms ease-out;
  transition: height 300ms ease-out;
}

.c0 {
  max-width: 600px;
  font-weight: normal;
  margin: 0 20px 0 25px;
}

.c1 {
  min-width: 14px;
  min-height: 14px;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  border: 1px solid transparent;
  box-shadow: none;
  display: block;
  margin: -44px -10px 10px 0;
  background-color: transparent;
  float: right;
  padding: 3px 0 0 6px;
}

.c1:hover {
  color: #0066cd;
}

.c1:focus {
  border: 1px solid #0066cd;
  outline: none;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c1:focus svg {
  fill: #0066cd;
  color: #0066cd;
}

.c1:active {
  box-shadow: none;
}

.c8:hover {
  fill: #0066cd;
}

.c11 {
  border-bottom: 1px hidden #fff;
  border-radius: 2px;
  box-shadow: 0 1px 2px rgba(0,0,0,.2);
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  max-width: 600px;
  box-sizing: border-box;
  font-size: 14px;
}

.c13 {
  cursor: pointer;
  position: relative;
}

.c15 {
  color: #1e0fbe;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-size: 18px;
  line-height: 1.2;
  font-weight: normal;
  margin: 0;
  display: inline-block;
  overflow: hidden;
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c14 {
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c16 {
  display: inline-block;
  font-size: 16px;
  line-height: 1.2em;
  max-height: 2.4em;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c17 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
}

.c18 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%;
}

.c21 {
  color: #545454;
  cursor: pointer;
  position: relative;
  max-width: 600px;
  font-size: 13px;
}

.c20 {
  font-size: 14px;
  line-height: 20px;
}

.c12 {
  padding: 8px 16px;
}

.c19 {
  border: 0;
  border-bottom: 1px solid #DFE1E5;
  margin: 0;
}

.c23 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: #555;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 3px 0 0 3px;
}

.c23:hover,
.c23:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c25 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: transparent;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 0 3px 3px 0;
}

.c25:hover,
.c25:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c22 {
  display: inline-block;
  margin-top: 10px;
  border: 1px solid #dbdbdb;
  border-radius: 4px;
  background-color: #f7f7f7;
  vertical-align: top;
}

.c9 {
  width: 16px;
  height: 16px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c24 {
  width: 22px;
  height: 22px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c26 {
  width: 18px;
  height: 18px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

@media all and (-ms-high-contrast:none),(-ms-high-contrast:active) {
  .c3::after {
    display: inline-block;
    content: "";
    min-height: 22px;
  }
}

<div>
  <section>
    <div>
      <div
        className="yoast-help c0"
      >
        <button
          aria-controls={null}
          aria-expanded={false}
          aria-label="Help on the Snippet Preview"
          className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
          onClick={[Function]}
          type="button"
        >
          <svg
            aria-hidden={true}
            className="yoast-svg-icon yoast-svg-icon-question-circle c8 c9"
            fill="#646464"
            focusable="false"
            role="img"
            size="16px"
            viewBox="0 0 1792 1792"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M1024 1376v-192q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23-9t9-23zm256-672q0-88-55.5-163t-138.5-116-170-41q-243 0-371 213-15 24 8 42l132 100q7 6 19 6 16 0 25-12 53-68 86-92 34-24 86-24 48 0 85.5 26t37.5 59q0 38-20 61t-68 45q-63 28-115.5 86.5t-52.5 125.5v36q0 14 9 23t23 9h192q14 0 23-9t9-23q0-19 21.5-49.5t54.5-49.5q32-18 49-28.5t46-35 44.5-48 28-60.5 12.5-81zm384 192q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
            />
          </svg>
        </button>
        <div
          className="c10"
        />
      </div>
    </div>
    <div
      className="c11"
      onMouseLeave={undefined}
      width={640}
    >
      <div
        className="c12"
      >
        <span
          className="screen-reader-text"
          style={
            Object {
              "clip": "rect(1px, 1px, 1px, 1px)",
              "height": "1px",
              "overflow": "hidden",
              "position": "absolute",
              "width": "1px",
            }
          }
        >
          SEO title preview:
        </span>
        <div
          className="c13"
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
        >
          <div
            className="c14 c15"
          >
            <span
              className="c16"
            >
              Test title
            </span>
          </div>
        </div>
        <span
          className="screen-reader-text"
          style={
            Object {
              "clip": "rect(1px, 1px, 1px, 1px)",
              "height": "1px",
              "overflow": "hidden",
              "position": "absolute",
              "width": "1px",
            }
          }
        >
          Url preview:
        </span>
        <div
          className="c17"
        >
          <div
            className="c18"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
          >
            example.org â€º test-slug
          </div>
        </div>
      </div>
      <hr
        className="c19"
      />
      <div
        className="c12"
      >
        <span
          className="screen-reader-text"
          style={
            Object {
              "clip": "rect(1px, 1px, 1px, 1px)",
              "height": "1px",
              "overflow": "hidden",
              "position": "absolute",
              "width": "1px",
            }
          }
        >
          Meta description preview:
        </span>
        <div
          className="c20 c21"
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
        >
          <div
            className="c20 c21"
          >
            Test description, %%replacement_variable%%
          </div>
        </div>
      </div>
    </div>
  </section>
  <div
    className="c22"
  >
    <button
      aria-pressed={true}
      className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
      onClick={[Function]}
      type="button"
    >
      <svg
        aria-hidden={true}
        className="yoast-svg-icon yoast-svg-icon-mobile c24"
        fill="currentColor"
        focusable="false"
        role="img"
        size="22px"
        viewBox="0 0 1792 1792"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M976 1408q0-33-23.5-56.5t-56.5-23.5-56.5 23.5-23.5 56.5 23.5 56.5 56.5 23.5 56.5-23.5 23.5-56.5zm208-160v-704q0-13-9.5-22.5t-22.5-9.5h-512q-13 0-22.5 9.5t-9.5 22.5v704q0 13 9.5 22.5t22.5 9.5h512q13 0 22.5-9.5t9.5-22.5zm-192-848q0-16-16-16h-160q-16 0-16 16t16 16h160q16 0 16-16zm288-16v1024q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-1024q0-52 38-90t90-38h512q52 0 90 38t38 90z"
        />
      </svg>
      <span
        className="screen-reader-text"
        style={
          Object {
            "clip": "rect(1px, 1px, 1px, 1px)",
            "height": "1px",
            "overflow": "hidden",
            "position": "absolute",
            "width": "1px",
          }
        }
      >
        Mobile preview
      </span>
    </button>
    <button
      aria-pressed={false}
      className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
      onClick={[Function]}
      type="button"
    >
      <svg
        aria-hidden={true}
        className="yoast-svg-icon yoast-svg-icon-desktop c26"
        fill="currentColor"
        focusable="false"
        role="img"
        size="18px"
        viewBox="0 0 1792 1792"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M1728 992v-832q0-13-9.5-22.5t-22.5-9.5h-1600q-13 0-22.5 9.5t-9.5 22.5v832q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5zm128-832v1088q0 66-47 113t-113 47h-544q0 37 16 77.5t32 71 16 43.5q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45q0-14 16-44t32-70 16-78h-544q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1600q66 0 113 47t47 113z"
        />
      </svg>
      <span
        className="screen-reader-text"
        style={
          Object {
            "clip": "rect(1px, 1px, 1px, 1px)",
            "height": "1px",
            "overflow": "hidden",
            "position": "absolute",
            "width": "1px",
          }
        }
      >
        Desktop preview
      </span>
    </button>
  </div>
  <button
    aria-expanded={false}
    className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
    onClick={[Function]}
    type="button"
  >
    <svg
      aria-hidden={true}
      className="yoast-svg-icon yoast-svg-icon-edit c9"
      fill={undefined}
      focusable="false"
      role="img"
      size="16px"
      viewBox="0 0 1792 1792"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M491 1536l91-91-235-235-91 91v107h128v128h107zm523-928q0-22-22-22-10 0-17 7l-542 542q-7 7-7 17 0 22 22 22 10 0 17-7l542-542q7-7 7-17zm-54-192l416 416-832 832h-416v-416zm683 96q0 53-37 90l-166 166-416-416 166-165q36-38 90-38 53 0 91 38l235 234q37 39 37 91z"
      />
    </svg>
    Edit snippet
  </button>
</div>
`;

exports[`SnippetEditor highlights the active ReplacementVariableEditor when calling setFieldFocus 1`] = `
.c7 {
  color: #555;
  border-color: #ccc;
  background: #f7f7f7;
  box-shadow: 0 1px 0 rgba( 204,204,204,1 );
}

.c2 {
  font-size: 0.8rem;
}

.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  vertical-align: middle;
  border-width: 1px;
  border-style: solid;
  margin: 0;
  padding: 4px 10px;
  border-radius: 3px;
  cursor: pointer;
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  font-weight: inherit;
  text-align: left;
  overflow: visible;
  min-height: 32px;
}

.c3 svg {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c4:hover {
  color: #000;
  background-color: #fff;
  border-color: #888;
}

.c5::-moz-focus-inner {
  border-width: 0;
}

.c5:focus {
  outline: none;
  border-color: #0066cd;
  color: #000;
  background-color: #fff;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c6:active {
  color: #000;
  background-color: #f7f7f7;
  border-color: #888;
  box-shadow: inset 0 2px 5px -3px rgba( 0,0,0,0.5 );
}

.c28 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 10px 0 0 4px;
  fill: #555;
  padding-left: 8px;
}

.c28 svg {
  margin-right: 7px;
}

.c39 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin-top: 24px;
}

.c10 >:first-child {
  overflow: hidden;
  -webkit-transition: height 300ms ease-out;
  transition: height 300ms ease-out;
}

.c0 {
  max-width: 600px;
  font-weight: normal;
  margin: 0 20px 0 25px;
}

.c1 {
  min-width: 14px;
  min-height: 14px;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  border: 1px solid transparent;
  box-shadow: none;
  display: block;
  margin: -44px -10px 10px 0;
  background-color: transparent;
  float: right;
  padding: 3px 0 0 6px;
}

.c1:hover {
  color: #0066cd;
}

.c1:focus {
  border: 1px solid #0066cd;
  outline: none;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c1:focus svg {
  fill: #0066cd;
  color: #0066cd;
}

.c1:active {
  box-shadow: none;
}

.c8:hover {
  fill: #0066cd;
}

.c33 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
}

.c33 .public-DraftStyleDefault-block {
  line-height: 24px;
}

.c33::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c35 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
}

.c35::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c37 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #5b9dd9;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: 0 0 2px rgba(30,140,190,.8);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
  min-height: 72px;
  padding: 2px 6px;
  line-height: 24px;
}

.c37 .public-DraftEditorPlaceholder-root {
  color: #646464;
}

.c37 .public-DraftEditorPlaceholder-hasFocus {
  color: #646464;
}

.c37::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22%231e8cbe%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c30 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin: 24px 0 0 0;
}

.c29 {
  padding: 0 20px;
}

.c31 {
  -webkit-flex: 1 1 200px;
  -ms-flex: 1 1 200px;
  flex: 1 1 200px;
  min-width: 200px;
  cursor: pointer;
  font-size: 16px;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 4px 0;
}

.c32 {
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  padding-left: 8px;
  height: 33px;
  border: 1px solid #dbdbdb;
  font-size: 13px;
}

.c32 svg {
  margin-right: 7px;
  fill: #555;
}

.c11 {
  border-bottom: 1px hidden #fff;
  border-radius: 2px;
  box-shadow: 0 1px 2px rgba(0,0,0,.2);
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  max-width: 600px;
  box-sizing: border-box;
  font-size: 14px;
}

.c13 {
  cursor: pointer;
  position: relative;
}

.c15 {
  color: #1e0fbe;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-size: 18px;
  line-height: 1.2;
  font-weight: normal;
  margin: 0;
  display: inline-block;
  overflow: hidden;
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c14 {
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c16 {
  display: inline-block;
  font-size: 16px;
  line-height: 1.2em;
  max-height: 2.4em;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c17 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
}

.c18 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%;
}

.c22 {
  color: #545454;
  cursor: pointer;
  position: relative;
  max-width: 600px;
  font-size: 13px;
}

.c21 {
  font-size: 14px;
  line-height: 20px;
}

.c12 {
  padding: 8px 16px;
}

.c19 {
  border: 0;
  border-bottom: 1px solid #DFE1E5;
  margin: 0;
}

.c34 {
  box-sizing: border-box;
  width: 100%;
  height: 8px;
  display: block;
  margin-top: 8px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #f7f7f7;
  border: 1px solid #ddd;
}

.c34::-webkit-progress-bar {
  background-color: #f7f7f7;
}

.c34::-webkit-progress-value {
  background-color: #dc3232;
  -webkit-transition: width 250ms;
  transition: width 250ms;
}

.c34::-moz-progress-bar {
  background-color: #dc3232;
}

.c34::-ms-fill {
  background-color: #dc3232;
  border: 0;
}

.c38 {
  box-sizing: border-box;
  width: 100%;
  height: 8px;
  display: block;
  margin-top: 8px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #f7f7f7;
  border: 1px solid #ddd;
}

.c38::-webkit-progress-bar {
  background-color: #f7f7f7;
}

.c38::-webkit-progress-value {
  background-color: #ee7c1b;
  -webkit-transition: width 250ms;
  transition: width 250ms;
}

.c38::-moz-progress-bar {
  background-color: #ee7c1b;
}

.c38::-ms-fill {
  background-color: #ee7c1b;
  border: 0;
}

.c36 {
  border: none;
  width: 100%;
  height: inherit;
  line-height: inherit;
  font-family: inherit;
  font-size: inherit;
  color: inherit;
}

.c36:focus {
  outline: 0;
}

.c24 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: #555;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 3px 0 0 3px;
}

.c24:hover,
.c24:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c26 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: transparent;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 0 3px 3px 0;
}

.c26:hover,
.c26:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c23 {
  display: inline-block;
  margin-top: 10px;
  border: 1px solid #dbdbdb;
  border-radius: 4px;
  background-color: #f7f7f7;
  vertical-align: top;
}

.c9 {
  width: 16px;
  height: 16px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c25 {
  width: 22px;
  height: 22px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c27 {
  width: 18px;
  height: 18px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c20::before {
  display: block;
  position: absolute;
  top: -3px;
  left: -40px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22%23555%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

@media all and (-ms-high-contrast:none),(-ms-high-contrast:active) {
  .c3::after {
    display: inline-block;
    content: "";
    min-height: 22px;
  }
}

<SnippetEditor
  baseUrl="http://example.org/"
  data={
    Object {
      "description": "Test description, %%replacement_variable%%",
      "slug": "test-slug",
      "title": "Test title",
    }
  }
  date=""
  descriptionEditorFieldPlaceholder="Modify your meta description by editing it right here"
  descriptionLengthProgress={
    Object {
      "actual": 0,
      "max": 156,
      "score": 0,
    }
  }
  hasPaperStyle={true}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "textComponent": "span",
    }
  }
  locale="en"
  mapEditorDataToPreview={null}
  mode="mobile"
  onChange={[MockFunction]}
  onChangeAnalysisData={[Function]}
  recommendedReplacementVariables={Array []}
  replacementVariables={Array []}
  titleLengthProgress={
    Object {
      "actual": 0,
      "max": 600,
      "score": 0,
    }
  }
>
  <ErrorBoundary>
    <div>
      <SnippetPreview
        activeField="description"
        breadcrumbs={null}
        date=""
        description="Test description, %%replacement_variable%%"
        hoveredField={null}
        isAmp={false}
        keyword=""
        locale="en"
        mode="mobile"
        onHover={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        title="Test title"
        url="example.org/test-slug"
      >
        <section>
          <div>
            <HelpTextWrapper
              className="yoast-help"
              helpText={
                Array [
                  "This is a rendering of what this post might look like in Google's search results. ",
                  <OutboundLink
                    href="https://yoa.st/snippet-preview"
                  >
                    Learn more about the Snippet Preview.
                  </OutboundLink>,
                ]
              }
              helpTextButtonLabel="Help on the Snippet Preview"
              panelMaxWidth="400px"
            >
              <HelpTextWrapper__HelpTextContainer
                className="yoast-help"
              >
                <div
                  className="yoast-help c0"
                >
                  <HelpTextWrapper__HelpTextButton
                    aria-controls={null}
                    aria-expanded={false}
                    aria-label="Help on the Snippet Preview"
                    className="yoast-help__button"
                    onClick={[Function]}
                  >
                    <Button
                      aria-controls={null}
                      aria-expanded={false}
                      aria-label="Help on the Snippet Preview"
                      className="yoast-help__button c1"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-controls={null}
                        aria-expanded={false}
                        aria-label="Help on the Snippet Preview"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="yoast-help__button c1 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-controls={null}
                          aria-expanded={false}
                          aria-label="Help on the Snippet Preview"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="yoast-help__button c1 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            aria-controls={null}
                            aria-expanded={false}
                            aria-label="Help on the Snippet Preview"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              aria-controls={null}
                              aria-expanded={false}
                              aria-label="Help on the Snippet Preview"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                aria-controls={null}
                                aria-expanded={false}
                                aria-label="Help on the Snippet Preview"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  aria-controls={null}
                                  aria-expanded={false}
                                  aria-label="Help on the Snippet Preview"
                                  className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <HelpTextWrapper__StyledSvg
                                    color="#646464"
                                    icon="question-circle"
                                    size="16px"
                                  >
                                    <SvgIcon
                                      className="c8"
                                      color="#646464"
                                      icon="question-circle"
                                      size="16px"
                                    >
                                      <SvgIcon__StyledSvg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-question-circle c8"
                                        fill="#646464"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="yoast-svg-icon yoast-svg-icon-question-circle c8 c9"
                                          fill="#646464"
                                          focusable="false"
                                          role="img"
                                          size="16px"
                                          viewBox="0 0 1792 1792"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M1024 1376v-192q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23-9t9-23zm256-672q0-88-55.5-163t-138.5-116-170-41q-243 0-371 213-15 24 8 42l132 100q7 6 19 6 16 0 25-12 53-68 86-92 34-24 86-24 48 0 85.5 26t37.5 59q0 38-20 61t-68 45q-63 28-115.5 86.5t-52.5 125.5v36q0 14 9 23t23 9h192q14 0 23-9t9-23q0-19 21.5-49.5t54.5-49.5q32-18 49-28.5t46-35 44.5-48 28-60.5 12.5-81zm384 192q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                          />
                                        </svg>
                                      </SvgIcon__StyledSvg>
                                    </SvgIcon>
                                  </HelpTextWrapper__StyledSvg>
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </HelpTextWrapper__HelpTextButton>
                  <YoastSlideToggle
                    duration={300}
                    isOpen={false}
                  >
                    <animations__YoastSlideToggleContainer
                      duration={300}
                    >
                      <div
                        className="c10"
                      >
                        <CSSTransition
                          classNames="slide"
                          in={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={true}
                        >
                          <Transition
                            appear={false}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={true}
                          />
                        </CSSTransition>
                      </div>
                    </animations__YoastSlideToggleContainer>
                  </YoastSlideToggle>
                </div>
              </HelpTextWrapper__HelpTextContainer>
            </HelpTextWrapper>
          </div>
          <SnippetPreview__MobileContainer
            padding={20}
            width={640}
          >
            <div
              className="c11"
              width={640}
            >
              <SnippetPreview__MobilePartContainer>
                <div
                  className="c12"
                >
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      SEO title preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__BaseTitle
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                  >
                    <div
                      className="c13"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                    >
                      <SnippetPreview__TitleBounded>
                        <SnippetPreview__Title
                          className="c14"
                        >
                          <div
                            className="c14 c15"
                          >
                            <SnippetPreview__TitleUnboundedMobile
                              innerRef={[Function]}
                            >
                              <span
                                className="c16"
                              >
                                Test title
                              </span>
                            </SnippetPreview__TitleUnboundedMobile>
                          </div>
                        </SnippetPreview__Title>
                      </SnippetPreview__TitleBounded>
                    </div>
                  </SnippetPreview__BaseTitle>
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      Url preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__BaseUrl>
                    <div
                      className="c17"
                    >
                      <SnippetPreview__BaseUrlOverflowContainer
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                      >
                        <div
                          className="c18"
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                        >
                          example.org â€º test-slug
                        </div>
                      </SnippetPreview__BaseUrlOverflowContainer>
                    </div>
                  </SnippetPreview__BaseUrl>
                </div>
              </SnippetPreview__MobilePartContainer>
              <SnippetPreview__Separator>
                <hr
                  className="c19"
                />
              </SnippetPreview__Separator>
              <SnippetPreview__MobilePartContainer>
                <div
                  className="c12"
                >
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      Meta description preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview
                    isDescriptionPlaceholder={false}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                  >
                    <SnippetPreview__MobileDescription
                      className="c20"
                      isDescriptionPlaceholder={false}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                    >
                      <SnippetPreview__DesktopDescription
                        className="c20 c21"
                        isDescriptionPlaceholder={false}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                      >
                        <div
                          className="c20 c21 c22"
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                        >
                          <SnippetPreview__MobileDescription
                            innerRef={[Function]}
                            isDescriptionPlaceholder={false}
                          >
                            <SnippetPreview__DesktopDescription
                              className="c21"
                              innerRef={[Function]}
                              isDescriptionPlaceholder={false}
                            >
                              <div
                                className="c21 c22"
                              >
                                Test description, %%replacement_variable%%
                              </div>
                            </SnippetPreview__DesktopDescription>
                          </SnippetPreview__MobileDescription>
                        </div>
                      </SnippetPreview__DesktopDescription>
                    </SnippetPreview__MobileDescription>
                  </SnippetPreview>
                </div>
              </SnippetPreview__MobilePartContainer>
            </div>
          </SnippetPreview__MobileContainer>
        </section>
      </SnippetPreview>
      <ModeSwitcher
        active="mobile"
        onChange={[Function]}
      >
        <ModeSwitcher__Switcher>
          <div
            className="c23"
          >
            <ModeSwitcher__SwitcherButton
              aria-pressed={true}
              isActive={true}
              onClick={[Function]}
            >
              <Button
                aria-pressed={true}
                className="c24"
                isActive={true}
                onClick={[Function]}
              >
                <Button
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-pressed={true}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c24 c2"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  isActive={true}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <Button
                    activeBackgroundColor="#f7f7f7"
                    activeBorderColor="#888"
                    activeColor="#000"
                    aria-pressed={true}
                    backgroundColor="#f7f7f7"
                    borderColor="#ccc"
                    boxShadowColor="#ccc"
                    className="c24 c2 Button-kDSBcD c3"
                    focusBackgroundColor="#fff"
                    focusBorderColor="#0066cd"
                    focusColor="#000"
                    hoverBackgroundColor="#fff"
                    hoverBorderColor="#888"
                    hoverColor="#000"
                    isActive={true}
                    onClick={[Function]}
                    textColor="#555"
                    type="button"
                  >
                    <Button
                      activeBackgroundColor="#f7f7f7"
                      activeBorderColor="#888"
                      activeColor="#000"
                      aria-pressed={true}
                      backgroundColor="#f7f7f7"
                      borderColor="#ccc"
                      boxShadowColor="#ccc"
                      className="c24 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                      focusBackgroundColor="#fff"
                      focusBorderColor="#0066cd"
                      focusColor="#000"
                      hoverBackgroundColor="#fff"
                      hoverBorderColor="#888"
                      hoverColor="#000"
                      isActive={true}
                      onClick={[Function]}
                      textColor="#555"
                      type="button"
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-pressed={true}
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c24 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        isActive={true}
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button__BaseButton
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-pressed={true}
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c24 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          isActive={true}
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <button
                            aria-pressed={true}
                            className="c24 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                            onClick={[Function]}
                            type="button"
                          >
                            <SvgIcon
                              color="currentColor"
                              icon="mobile"
                              size="22px"
                            >
                              <SvgIcon__StyledSvg
                                aria-hidden={true}
                                className="yoast-svg-icon yoast-svg-icon-mobile"
                                fill="currentColor"
                                focusable="false"
                                role="img"
                                size="22px"
                                viewBox="0 0 1792 1792"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="yoast-svg-icon yoast-svg-icon-mobile c25"
                                  fill="currentColor"
                                  focusable="false"
                                  role="img"
                                  size="22px"
                                  viewBox="0 0 1792 1792"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M976 1408q0-33-23.5-56.5t-56.5-23.5-56.5 23.5-23.5 56.5 23.5 56.5 56.5 23.5 56.5-23.5 23.5-56.5zm208-160v-704q0-13-9.5-22.5t-22.5-9.5h-512q-13 0-22.5 9.5t-9.5 22.5v704q0 13 9.5 22.5t22.5 9.5h512q13 0 22.5-9.5t9.5-22.5zm-192-848q0-16-16-16h-160q-16 0-16 16t16 16h160q16 0 16-16zm288-16v1024q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-1024q0-52 38-90t90-38h512q52 0 90 38t38 90z"
                                  />
                                </svg>
                              </SvgIcon__StyledSvg>
                            </SvgIcon>
                            <ScreenReaderText>
                              <span
                                className="screen-reader-text"
                                style={
                                  Object {
                                    "clip": "rect(1px, 1px, 1px, 1px)",
                                    "height": "1px",
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "width": "1px",
                                  }
                                }
                              >
                                Mobile preview
                              </span>
                            </ScreenReaderText>
                          </button>
                        </Button__BaseButton>
                      </Button>
                    </Button>
                  </Button>
                </Button>
              </Button>
            </ModeSwitcher__SwitcherButton>
            <ModeSwitcher__SwitcherButton
              aria-pressed={false}
              isActive={false}
              onClick={[Function]}
            >
              <Button
                aria-pressed={false}
                className="c26"
                isActive={false}
                onClick={[Function]}
              >
                <Button
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-pressed={false}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c26 c2"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  isActive={false}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <Button
                    activeBackgroundColor="#f7f7f7"
                    activeBorderColor="#888"
                    activeColor="#000"
                    aria-pressed={false}
                    backgroundColor="#f7f7f7"
                    borderColor="#ccc"
                    boxShadowColor="#ccc"
                    className="c26 c2 Button-kDSBcD c3"
                    focusBackgroundColor="#fff"
                    focusBorderColor="#0066cd"
                    focusColor="#000"
                    hoverBackgroundColor="#fff"
                    hoverBorderColor="#888"
                    hoverColor="#000"
                    isActive={false}
                    onClick={[Function]}
                    textColor="#555"
                    type="button"
                  >
                    <Button
                      activeBackgroundColor="#f7f7f7"
                      activeBorderColor="#888"
                      activeColor="#000"
                      aria-pressed={false}
                      backgroundColor="#f7f7f7"
                      borderColor="#ccc"
                      boxShadowColor="#ccc"
                      className="c26 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                      focusBackgroundColor="#fff"
                      focusBorderColor="#0066cd"
                      focusColor="#000"
                      hoverBackgroundColor="#fff"
                      hoverBorderColor="#888"
                      hoverColor="#000"
                      isActive={false}
                      onClick={[Function]}
                      textColor="#555"
                      type="button"
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-pressed={false}
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c26 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        isActive={false}
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button__BaseButton
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-pressed={false}
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c26 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          isActive={false}
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <button
                            aria-pressed={false}
                            className="c26 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                            onClick={[Function]}
                            type="button"
                          >
                            <SvgIcon
                              color="currentColor"
                              icon="desktop"
                              size="18px"
                            >
                              <SvgIcon__StyledSvg
                                aria-hidden={true}
                                className="yoast-svg-icon yoast-svg-icon-desktop"
                                fill="currentColor"
                                focusable="false"
                                role="img"
                                size="18px"
                                viewBox="0 0 1792 1792"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="yoast-svg-icon yoast-svg-icon-desktop c27"
                                  fill="currentColor"
                                  focusable="false"
                                  role="img"
                                  size="18px"
                                  viewBox="0 0 1792 1792"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M1728 992v-832q0-13-9.5-22.5t-22.5-9.5h-1600q-13 0-22.5 9.5t-9.5 22.5v832q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5zm128-832v1088q0 66-47 113t-113 47h-544q0 37 16 77.5t32 71 16 43.5q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45q0-14 16-44t32-70 16-78h-544q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1600q66 0 113 47t47 113z"
                                  />
                                </svg>
                              </SvgIcon__StyledSvg>
                            </SvgIcon>
                            <ScreenReaderText>
                              <span
                                className="screen-reader-text"
                                style={
                                  Object {
                                    "clip": "rect(1px, 1px, 1px, 1px)",
                                    "height": "1px",
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "width": "1px",
                                  }
                                }
                              >
                                Desktop preview
                              </span>
                            </ScreenReaderText>
                          </button>
                        </Button__BaseButton>
                      </Button>
                    </Button>
                  </Button>
                </Button>
              </Button>
            </ModeSwitcher__SwitcherButton>
          </div>
        </ModeSwitcher__Switcher>
      </ModeSwitcher>
      <Button
        aria-expanded={true}
        innerRef={[Function]}
        onClick={[Function]}
      >
        <Button
          activeBackgroundColor="#f7f7f7"
          activeBorderColor="#888"
          activeColor="#000"
          aria-expanded={true}
          backgroundColor="#f7f7f7"
          borderColor="#ccc"
          boxShadowColor="#ccc"
          className="c28"
          focusBackgroundColor="#fff"
          focusBorderColor="#0066cd"
          focusColor="#000"
          hoverBackgroundColor="#fff"
          hoverBorderColor="#888"
          hoverColor="#000"
          innerRef={[Function]}
          onClick={[Function]}
          textColor="#555"
          type="button"
        >
          <Button
            activeBackgroundColor="#f7f7f7"
            activeBorderColor="#888"
            activeColor="#000"
            aria-expanded={true}
            backgroundColor="#f7f7f7"
            borderColor="#ccc"
            boxShadowColor="#ccc"
            className="c28 Button-kDSBcD c3"
            focusBackgroundColor="#fff"
            focusBorderColor="#0066cd"
            focusColor="#000"
            hoverBackgroundColor="#fff"
            hoverBorderColor="#888"
            hoverColor="#000"
            innerRef={[Function]}
            onClick={[Function]}
            textColor="#555"
            type="button"
          >
            <Button
              activeBackgroundColor="#f7f7f7"
              activeBorderColor="#888"
              activeColor="#000"
              aria-expanded={true}
              backgroundColor="#f7f7f7"
              borderColor="#ccc"
              boxShadowColor="#ccc"
              className="c28 Button-kDSBcD c3 Button-kDSBcD c4"
              focusBackgroundColor="#fff"
              focusBorderColor="#0066cd"
              focusColor="#000"
              hoverBackgroundColor="#fff"
              hoverBorderColor="#888"
              hoverColor="#000"
              innerRef={[Function]}
              onClick={[Function]}
              textColor="#555"
              type="button"
            >
              <Button
                activeBackgroundColor="#f7f7f7"
                activeBorderColor="#888"
                activeColor="#000"
                aria-expanded={true}
                backgroundColor="#f7f7f7"
                borderColor="#ccc"
                boxShadowColor="#ccc"
                className="c28 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                focusBackgroundColor="#fff"
                focusBorderColor="#0066cd"
                focusColor="#000"
                hoverBackgroundColor="#fff"
                hoverBorderColor="#888"
                hoverColor="#000"
                innerRef={[Function]}
                onClick={[Function]}
                textColor="#555"
                type="button"
              >
                <Button__BaseButton
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-expanded={true}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c28 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  innerRef={[Function]}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <button
                    aria-expanded={true}
                    className="c28 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                    onClick={[Function]}
                    type="button"
                  >
                    <SvgIcon
                      icon="edit"
                      size="16px"
                    >
                      <SvgIcon__StyledSvg
                        aria-hidden={true}
                        className="yoast-svg-icon yoast-svg-icon-edit"
                        focusable="false"
                        role="img"
                        size="16px"
                        viewBox="0 0 1792 1792"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <svg
                          aria-hidden={true}
                          className="yoast-svg-icon yoast-svg-icon-edit c9"
                          focusable="false"
                          role="img"
                          size="16px"
                          viewBox="0 0 1792 1792"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M491 1536l91-91-235-235-91 91v107h128v128h107zm523-928q0-22-22-22-10 0-17 7l-542 542q-7 7-7 17 0 22 22 22 10 0 17-7l542-542q7-7 7-17zm-54-192l416 416-832 832h-416v-416zm683 96q0 53-37 90l-166 166-416-416 166-165q36-38 90-38 53 0 91 38l235 234q37 39 37 91z"
                          />
                        </svg>
                      </SvgIcon__StyledSvg>
                    </SvgIcon>
                    Edit snippet
                  </button>
                </Button__BaseButton>
              </Button>
            </Button>
          </Button>
        </Button>
      </Button>
      <SnippetEditorFields
        activeField="description"
        containerPadding="0 20px"
        data={
          Object {
            "description": "Test description, %%replacement_variable%%",
            "slug": "test-slug",
            "title": "Test title",
          }
        }
        descriptionEditorFieldPlaceholder="Modify your meta description by editing it right here"
        descriptionLengthProgress={
          Object {
            "actual": 42,
            "max": 156,
            "score": 6,
          }
        }
        hoveredField={null}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        recommendedReplacementVariables={Array []}
        replacementVariables={Array []}
        titleLengthProgress={
          Object {
            "actual": 0,
            "max": 600,
            "score": 1,
          }
        }
      >
        <Shared__StyledEditor
          padding="0 20px"
        >
          <section
            className="c29"
          >
            <Shared__FormSection>
              <div
                className="c30"
              >
                <ReplacementVariableEditor
                  content="Test title"
                  editorRef={[Function]}
                  fieldId="snippet-editor-field-title"
                  isActive={false}
                  isHovered={false}
                  label="SEO title"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  recommendedReplacementVariables={Array []}
                  replacementVariables={Array []}
                  withCaret={true}
                >
                  <Shared__SimulatedLabel
                    id="21"
                    onClick={[Function]}
                  >
                    <div
                      className="c31"
                      id="21"
                      onClick={[Function]}
                    >
                      SEO title
                    </div>
                  </Shared__SimulatedLabel>
                  <Shared__TriggerReplacementVariableSuggestionsButton
                    onClick={[Function]}
                  >
                    <Button
                      className="c32"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c32 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c32 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="c32 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="c32 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="c32 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  className="c32 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <SvgIcon
                                    icon="plus-circle"
                                    size="16px"
                                  >
                                    <SvgIcon__StyledSvg
                                      aria-hidden={true}
                                      className="yoast-svg-icon yoast-svg-icon-plus-circle"
                                      focusable="false"
                                      role="img"
                                      size="16px"
                                      viewBox="0 0 1792 1792"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-plus-circle c9"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M1344 960v-128q0-26-19-45t-45-19h-256v-256q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v256h-256q-26 0-45 19t-19 45v128q0 26 19 45t45 19h256v256q0 26 19 45t45 19h128q26 0 45-19t19-45v-256h256q26 0 45-19t19-45zm320-64q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                        />
                                      </svg>
                                    </SvgIcon__StyledSvg>
                                  </SvgIcon>
                                  Insert snippet variable
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </Shared__TriggerReplacementVariableSuggestionsButton>
                  <Shared__InputContainer
                    id="snippet-editor-field-title"
                    isActive={false}
                    isHovered={false}
                    onClick={[Function]}
                  >
                    <div
                      className="c33"
                      id="snippet-editor-field-title"
                      onClick={[Function]}
                    >
                      <Wrapper
                        ariaLabelledBy="21"
                        content="Test title"
                        innerRef={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        recommendedReplacementVariables={Array []}
                        replacementVariables={Array []}
                      >
                        <ReplacementVariableEditorStandalone
                          ariaLabelledBy="21"
                          content="Test title"
                          innerRef={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          recommendedReplacementVariables={Array []}
                          replacementVariables={Array []}
                        >
                          <div />
                        </ReplacementVariableEditorStandalone>
                      </Wrapper>
                    </div>
                  </Shared__InputContainer>
                </ReplacementVariableEditor>
                <ProgressBar
                  aria-hidden="true"
                  backgroundColor="#f7f7f7"
                  borderColor="#ddd"
                  max={600}
                  progressColor="#dc3232"
                  value={0}
                >
                  <progress
                    aria-hidden="true"
                    className="c34"
                    max={600}
                    value={0}
                  />
                </ProgressBar>
              </div>
            </Shared__FormSection>
            <Shared__FormSection>
              <div
                className="c30"
              >
                <Shared__SimulatedLabel
                  id="snippet-editor-field-20-slug"
                  onClick={[Function]}
                >
                  <div
                    className="c31"
                    id="snippet-editor-field-20-slug"
                    onClick={[Function]}
                  >
                    Slug
                  </div>
                </Shared__SimulatedLabel>
                <Shared__InputContainer
                  isActive={false}
                  isHovered={false}
                  onClick={[Function]}
                >
                  <div
                    className="c35"
                    onClick={[Function]}
                  >
                    <SnippetEditorFields__SlugInput
                      aria-labelledby="snippet-editor-field-20-slug"
                      id="snippet-editor-field-slug"
                      innerRef={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      value="test-slug"
                    >
                      <input
                        aria-labelledby="snippet-editor-field-20-slug"
                        className="c36"
                        id="snippet-editor-field-slug"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        value="test-slug"
                      />
                    </SnippetEditorFields__SlugInput>
                  </div>
                </Shared__InputContainer>
              </div>
            </Shared__FormSection>
            <Shared__FormSection>
              <div
                className="c30"
              >
                <ReplacementVariableEditor
                  content="Test description, %%replacement_variable%%"
                  editorRef={[Function]}
                  fieldId="snippet-editor-field-description"
                  isActive={true}
                  isHovered={false}
                  label="Meta description"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  placeholder="Modify your meta description by editing it right here"
                  recommendedReplacementVariables={Array []}
                  replacementVariables={Array []}
                  type="description"
                  withCaret={true}
                >
                  <Shared__SimulatedLabel
                    id="22"
                    onClick={[Function]}
                  >
                    <div
                      className="c31"
                      id="22"
                      onClick={[Function]}
                    >
                      Meta description
                    </div>
                  </Shared__SimulatedLabel>
                  <Shared__TriggerReplacementVariableSuggestionsButton
                    onClick={[Function]}
                  >
                    <Button
                      className="c32"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c32 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c32 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="c32 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="c32 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="c32 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  className="c32 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <SvgIcon
                                    icon="plus-circle"
                                    size="16px"
                                  >
                                    <SvgIcon__StyledSvg
                                      aria-hidden={true}
                                      className="yoast-svg-icon yoast-svg-icon-plus-circle"
                                      focusable="false"
                                      role="img"
                                      size="16px"
                                      viewBox="0 0 1792 1792"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-plus-circle c9"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M1344 960v-128q0-26-19-45t-45-19h-256v-256q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v256h-256q-26 0-45 19t-19 45v128q0 26 19 45t45 19h256v256q0 26 19 45t45 19h128q26 0 45-19t19-45v-256h256q26 0 45-19t19-45zm320-64q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                        />
                                      </svg>
                                    </SvgIcon__StyledSvg>
                                  </SvgIcon>
                                  Insert snippet variable
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </Shared__TriggerReplacementVariableSuggestionsButton>
                  <Shared__InputContainer
                    id="snippet-editor-field-description"
                    isActive={true}
                    isHovered={false}
                    onClick={[Function]}
                  >
                    <div
                      className="c37"
                      id="snippet-editor-field-description"
                      onClick={[Function]}
                    >
                      <Wrapper
                        ariaLabelledBy="22"
                        content="Test description, %%replacement_variable%%"
                        innerRef={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        placeholder="Modify your meta description by editing it right here"
                        recommendedReplacementVariables={Array []}
                        replacementVariables={Array []}
                      >
                        <ReplacementVariableEditorStandalone
                          ariaLabelledBy="22"
                          content="Test description, %%replacement_variable%%"
                          innerRef={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Modify your meta description by editing it right here"
                          recommendedReplacementVariables={Array []}
                          replacementVariables={Array []}
                        >
                          <div />
                        </ReplacementVariableEditorStandalone>
                      </Wrapper>
                    </div>
                  </Shared__InputContainer>
                </ReplacementVariableEditor>
                <ProgressBar
                  aria-hidden="true"
                  backgroundColor="#f7f7f7"
                  borderColor="#ddd"
                  max={156}
                  progressColor="#ee7c1b"
                  value={42}
                >
                  <progress
                    aria-hidden="true"
                    className="c38"
                    max={156}
                    value={42}
                  />
                </ProgressBar>
              </div>
            </Shared__FormSection>
          </section>
        </Shared__StyledEditor>
      </SnippetEditorFields>
      <Button
        onClick={[Function]}
      >
        <Button
          activeBackgroundColor="#f7f7f7"
          activeBorderColor="#888"
          activeColor="#000"
          backgroundColor="#f7f7f7"
          borderColor="#ccc"
          boxShadowColor="#ccc"
          className="c39"
          focusBackgroundColor="#fff"
          focusBorderColor="#0066cd"
          focusColor="#000"
          hoverBackgroundColor="#fff"
          hoverBorderColor="#888"
          hoverColor="#000"
          onClick={[Function]}
          textColor="#555"
          type="button"
        >
          <Button
            activeBackgroundColor="#f7f7f7"
            activeBorderColor="#888"
            activeColor="#000"
            backgroundColor="#f7f7f7"
            borderColor="#ccc"
            boxShadowColor="#ccc"
            className="c39 Button-kDSBcD c3"
            focusBackgroundColor="#fff"
            focusBorderColor="#0066cd"
            focusColor="#000"
            hoverBackgroundColor="#fff"
            hoverBorderColor="#888"
            hoverColor="#000"
            onClick={[Function]}
            textColor="#555"
            type="button"
          >
            <Button
              activeBackgroundColor="#f7f7f7"
              activeBorderColor="#888"
              activeColor="#000"
              backgroundColor="#f7f7f7"
              borderColor="#ccc"
              boxShadowColor="#ccc"
              className="c39 Button-kDSBcD c3 Button-kDSBcD c4"
              focusBackgroundColor="#fff"
              focusBorderColor="#0066cd"
              focusColor="#000"
              hoverBackgroundColor="#fff"
              hoverBorderColor="#888"
              hoverColor="#000"
              onClick={[Function]}
              textColor="#555"
              type="button"
            >
              <Button
                activeBackgroundColor="#f7f7f7"
                activeBorderColor="#888"
                activeColor="#000"
                backgroundColor="#f7f7f7"
                borderColor="#ccc"
                boxShadowColor="#ccc"
                className="c39 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                focusBackgroundColor="#fff"
                focusBorderColor="#0066cd"
                focusColor="#000"
                hoverBackgroundColor="#fff"
                hoverBorderColor="#888"
                hoverColor="#000"
                onClick={[Function]}
                textColor="#555"
                type="button"
              >
                <Button__BaseButton
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c39 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <button
                    className="c39 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                    onClick={[Function]}
                    type="button"
                  >
                    Close snippet editor
                  </button>
                </Button__BaseButton>
              </Button>
            </Button>
          </Button>
        </Button>
      </Button>
    </div>
  </ErrorBoundary>
</SnippetEditor>
`;

exports[`SnippetEditor highlights the hovered field when onMouseEnter() is called 1`] = `
.c7 {
  color: #555;
  border-color: #ccc;
  background: #f7f7f7;
  box-shadow: 0 1px 0 rgba( 204,204,204,1 );
}

.c2 {
  font-size: 0.8rem;
}

.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  vertical-align: middle;
  border-width: 1px;
  border-style: solid;
  margin: 0;
  padding: 4px 10px;
  border-radius: 3px;
  cursor: pointer;
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  font-weight: inherit;
  text-align: left;
  overflow: visible;
  min-height: 32px;
}

.c3 svg {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c4:hover {
  color: #000;
  background-color: #fff;
  border-color: #888;
}

.c5::-moz-focus-inner {
  border-width: 0;
}

.c5:focus {
  outline: none;
  border-color: #0066cd;
  color: #000;
  background-color: #fff;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c6:active {
  color: #000;
  background-color: #f7f7f7;
  border-color: #888;
  box-shadow: inset 0 2px 5px -3px rgba( 0,0,0,0.5 );
}

.c28 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 10px 0 0 4px;
  fill: #555;
  padding-left: 8px;
}

.c28 svg {
  margin-right: 7px;
}

.c39 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin-top: 24px;
}

.c10 >:first-child {
  overflow: hidden;
  -webkit-transition: height 300ms ease-out;
  transition: height 300ms ease-out;
}

.c0 {
  max-width: 600px;
  font-weight: normal;
  margin: 0 20px 0 25px;
}

.c1 {
  min-width: 14px;
  min-height: 14px;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  border: 1px solid transparent;
  box-shadow: none;
  display: block;
  margin: -44px -10px 10px 0;
  background-color: transparent;
  float: right;
  padding: 3px 0 0 6px;
}

.c1:hover {
  color: #0066cd;
}

.c1:focus {
  border: 1px solid #0066cd;
  outline: none;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c1:focus svg {
  fill: #0066cd;
  color: #0066cd;
}

.c1:active {
  box-shadow: none;
}

.c8:hover {
  fill: #0066cd;
}

.c33 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
}

.c33 .public-DraftStyleDefault-block {
  line-height: 24px;
}

.c33::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c35 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
}

.c35::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c37 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
  min-height: 72px;
  padding: 2px 6px;
  line-height: 24px;
}

.c37 .public-DraftEditorPlaceholder-root {
  color: #646464;
}

.c37 .public-DraftEditorPlaceholder-hasFocus {
  color: #646464;
}

.c37::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22%23ccc%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c30 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin: 24px 0 0 0;
}

.c29 {
  padding: 0 20px;
}

.c31 {
  -webkit-flex: 1 1 200px;
  -ms-flex: 1 1 200px;
  flex: 1 1 200px;
  min-width: 200px;
  cursor: pointer;
  font-size: 16px;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 4px 0;
}

.c32 {
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  padding-left: 8px;
  height: 33px;
  border: 1px solid #dbdbdb;
  font-size: 13px;
}

.c32 svg {
  margin-right: 7px;
  fill: #555;
}

.c11 {
  border-bottom: 1px hidden #fff;
  border-radius: 2px;
  box-shadow: 0 1px 2px rgba(0,0,0,.2);
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  max-width: 600px;
  box-sizing: border-box;
  font-size: 14px;
}

.c13 {
  cursor: pointer;
  position: relative;
}

.c15 {
  color: #1e0fbe;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-size: 18px;
  line-height: 1.2;
  font-weight: normal;
  margin: 0;
  display: inline-block;
  overflow: hidden;
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c14 {
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c16 {
  display: inline-block;
  font-size: 16px;
  line-height: 1.2em;
  max-height: 2.4em;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c17 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
}

.c18 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%;
}

.c22 {
  color: #545454;
  cursor: pointer;
  position: relative;
  max-width: 600px;
  font-size: 13px;
}

.c21 {
  font-size: 14px;
  line-height: 20px;
}

.c12 {
  padding: 8px 16px;
}

.c19 {
  border: 0;
  border-bottom: 1px solid #DFE1E5;
  margin: 0;
}

.c34 {
  box-sizing: border-box;
  width: 100%;
  height: 8px;
  display: block;
  margin-top: 8px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #f7f7f7;
  border: 1px solid #ddd;
}

.c34::-webkit-progress-bar {
  background-color: #f7f7f7;
}

.c34::-webkit-progress-value {
  background-color: #dc3232;
  -webkit-transition: width 250ms;
  transition: width 250ms;
}

.c34::-moz-progress-bar {
  background-color: #dc3232;
}

.c34::-ms-fill {
  background-color: #dc3232;
  border: 0;
}

.c38 {
  box-sizing: border-box;
  width: 100%;
  height: 8px;
  display: block;
  margin-top: 8px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #f7f7f7;
  border: 1px solid #ddd;
}

.c38::-webkit-progress-bar {
  background-color: #f7f7f7;
}

.c38::-webkit-progress-value {
  background-color: #ee7c1b;
  -webkit-transition: width 250ms;
  transition: width 250ms;
}

.c38::-moz-progress-bar {
  background-color: #ee7c1b;
}

.c38::-ms-fill {
  background-color: #ee7c1b;
  border: 0;
}

.c36 {
  border: none;
  width: 100%;
  height: inherit;
  line-height: inherit;
  font-family: inherit;
  font-size: inherit;
  color: inherit;
}

.c36:focus {
  outline: 0;
}

.c24 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: #555;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 3px 0 0 3px;
}

.c24:hover,
.c24:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c26 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: transparent;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 0 3px 3px 0;
}

.c26:hover,
.c26:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c23 {
  display: inline-block;
  margin-top: 10px;
  border: 1px solid #dbdbdb;
  border-radius: 4px;
  background-color: #f7f7f7;
  vertical-align: top;
}

.c9 {
  width: 16px;
  height: 16px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c25 {
  width: 22px;
  height: 22px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c27 {
  width: 18px;
  height: 18px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c20::before {
  display: block;
  position: absolute;
  top: -3px;
  left: -40px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22%23ccc%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

@media all and (-ms-high-contrast:none),(-ms-high-contrast:active) {
  .c3::after {
    display: inline-block;
    content: "";
    min-height: 22px;
  }
}

<SnippetEditor
  baseUrl="http://example.org/"
  data={
    Object {
      "description": "Test description, %%replacement_variable%%",
      "slug": "test-slug",
      "title": "Test title",
    }
  }
  date=""
  descriptionEditorFieldPlaceholder="Modify your meta description by editing it right here"
  descriptionLengthProgress={
    Object {
      "actual": 0,
      "max": 156,
      "score": 0,
    }
  }
  hasPaperStyle={true}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "textComponent": "span",
    }
  }
  locale="en"
  mapEditorDataToPreview={null}
  mode="mobile"
  onChange={[MockFunction]}
  onChangeAnalysisData={[Function]}
  recommendedReplacementVariables={Array []}
  replacementVariables={Array []}
  titleLengthProgress={
    Object {
      "actual": 0,
      "max": 600,
      "score": 0,
    }
  }
>
  <ErrorBoundary>
    <div>
      <SnippetPreview
        activeField={null}
        breadcrumbs={null}
        date=""
        description="Test description, %%replacement_variable%%"
        hoveredField="description"
        isAmp={false}
        keyword=""
        locale="en"
        mode="mobile"
        onHover={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        title="Test title"
        url="example.org/test-slug"
      >
        <section>
          <div>
            <HelpTextWrapper
              className="yoast-help"
              helpText={
                Array [
                  "This is a rendering of what this post might look like in Google's search results. ",
                  <OutboundLink
                    href="https://yoa.st/snippet-preview"
                  >
                    Learn more about the Snippet Preview.
                  </OutboundLink>,
                ]
              }
              helpTextButtonLabel="Help on the Snippet Preview"
              panelMaxWidth="400px"
            >
              <HelpTextWrapper__HelpTextContainer
                className="yoast-help"
              >
                <div
                  className="yoast-help c0"
                >
                  <HelpTextWrapper__HelpTextButton
                    aria-controls={null}
                    aria-expanded={false}
                    aria-label="Help on the Snippet Preview"
                    className="yoast-help__button"
                    onClick={[Function]}
                  >
                    <Button
                      aria-controls={null}
                      aria-expanded={false}
                      aria-label="Help on the Snippet Preview"
                      className="yoast-help__button c1"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-controls={null}
                        aria-expanded={false}
                        aria-label="Help on the Snippet Preview"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="yoast-help__button c1 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-controls={null}
                          aria-expanded={false}
                          aria-label="Help on the Snippet Preview"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="yoast-help__button c1 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            aria-controls={null}
                            aria-expanded={false}
                            aria-label="Help on the Snippet Preview"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              aria-controls={null}
                              aria-expanded={false}
                              aria-label="Help on the Snippet Preview"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                aria-controls={null}
                                aria-expanded={false}
                                aria-label="Help on the Snippet Preview"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  aria-controls={null}
                                  aria-expanded={false}
                                  aria-label="Help on the Snippet Preview"
                                  className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <HelpTextWrapper__StyledSvg
                                    color="#646464"
                                    icon="question-circle"
                                    size="16px"
                                  >
                                    <SvgIcon
                                      className="c8"
                                      color="#646464"
                                      icon="question-circle"
                                      size="16px"
                                    >
                                      <SvgIcon__StyledSvg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-question-circle c8"
                                        fill="#646464"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="yoast-svg-icon yoast-svg-icon-question-circle c8 c9"
                                          fill="#646464"
                                          focusable="false"
                                          role="img"
                                          size="16px"
                                          viewBox="0 0 1792 1792"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M1024 1376v-192q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23-9t9-23zm256-672q0-88-55.5-163t-138.5-116-170-41q-243 0-371 213-15 24 8 42l132 100q7 6 19 6 16 0 25-12 53-68 86-92 34-24 86-24 48 0 85.5 26t37.5 59q0 38-20 61t-68 45q-63 28-115.5 86.5t-52.5 125.5v36q0 14 9 23t23 9h192q14 0 23-9t9-23q0-19 21.5-49.5t54.5-49.5q32-18 49-28.5t46-35 44.5-48 28-60.5 12.5-81zm384 192q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                          />
                                        </svg>
                                      </SvgIcon__StyledSvg>
                                    </SvgIcon>
                                  </HelpTextWrapper__StyledSvg>
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </HelpTextWrapper__HelpTextButton>
                  <YoastSlideToggle
                    duration={300}
                    isOpen={false}
                  >
                    <animations__YoastSlideToggleContainer
                      duration={300}
                    >
                      <div
                        className="c10"
                      >
                        <CSSTransition
                          classNames="slide"
                          in={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={true}
                        >
                          <Transition
                            appear={false}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={true}
                          />
                        </CSSTransition>
                      </div>
                    </animations__YoastSlideToggleContainer>
                  </YoastSlideToggle>
                </div>
              </HelpTextWrapper__HelpTextContainer>
            </HelpTextWrapper>
          </div>
          <SnippetPreview__MobileContainer
            padding={20}
            width={640}
          >
            <div
              className="c11"
              width={640}
            >
              <SnippetPreview__MobilePartContainer>
                <div
                  className="c12"
                >
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      SEO title preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__BaseTitle
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                  >
                    <div
                      className="c13"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                    >
                      <SnippetPreview__TitleBounded>
                        <SnippetPreview__Title
                          className="c14"
                        >
                          <div
                            className="c14 c15"
                          >
                            <SnippetPreview__TitleUnboundedMobile
                              innerRef={[Function]}
                            >
                              <span
                                className="c16"
                              >
                                Test title
                              </span>
                            </SnippetPreview__TitleUnboundedMobile>
                          </div>
                        </SnippetPreview__Title>
                      </SnippetPreview__TitleBounded>
                    </div>
                  </SnippetPreview__BaseTitle>
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      Url preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__BaseUrl>
                    <div
                      className="c17"
                    >
                      <SnippetPreview__BaseUrlOverflowContainer
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                      >
                        <div
                          className="c18"
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                        >
                          example.org â€º test-slug
                        </div>
                      </SnippetPreview__BaseUrlOverflowContainer>
                    </div>
                  </SnippetPreview__BaseUrl>
                </div>
              </SnippetPreview__MobilePartContainer>
              <SnippetPreview__Separator>
                <hr
                  className="c19"
                />
              </SnippetPreview__Separator>
              <SnippetPreview__MobilePartContainer>
                <div
                  className="c12"
                >
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      Meta description preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview
                    isDescriptionPlaceholder={false}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                  >
                    <SnippetPreview__MobileDescription
                      className="c20"
                      isDescriptionPlaceholder={false}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                    >
                      <SnippetPreview__DesktopDescription
                        className="c20 c21"
                        isDescriptionPlaceholder={false}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                      >
                        <div
                          className="c20 c21 c22"
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                        >
                          <SnippetPreview__MobileDescription
                            innerRef={[Function]}
                            isDescriptionPlaceholder={false}
                          >
                            <SnippetPreview__DesktopDescription
                              className="c21"
                              innerRef={[Function]}
                              isDescriptionPlaceholder={false}
                            >
                              <div
                                className="c21 c22"
                              >
                                Test description, %%replacement_variable%%
                              </div>
                            </SnippetPreview__DesktopDescription>
                          </SnippetPreview__MobileDescription>
                        </div>
                      </SnippetPreview__DesktopDescription>
                    </SnippetPreview__MobileDescription>
                  </SnippetPreview>
                </div>
              </SnippetPreview__MobilePartContainer>
            </div>
          </SnippetPreview__MobileContainer>
        </section>
      </SnippetPreview>
      <ModeSwitcher
        active="mobile"
        onChange={[Function]}
      >
        <ModeSwitcher__Switcher>
          <div
            className="c23"
          >
            <ModeSwitcher__SwitcherButton
              aria-pressed={true}
              isActive={true}
              onClick={[Function]}
            >
              <Button
                aria-pressed={true}
                className="c24"
                isActive={true}
                onClick={[Function]}
              >
                <Button
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-pressed={true}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c24 c2"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  isActive={true}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <Button
                    activeBackgroundColor="#f7f7f7"
                    activeBorderColor="#888"
                    activeColor="#000"
                    aria-pressed={true}
                    backgroundColor="#f7f7f7"
                    borderColor="#ccc"
                    boxShadowColor="#ccc"
                    className="c24 c2 Button-kDSBcD c3"
                    focusBackgroundColor="#fff"
                    focusBorderColor="#0066cd"
                    focusColor="#000"
                    hoverBackgroundColor="#fff"
                    hoverBorderColor="#888"
                    hoverColor="#000"
                    isActive={true}
                    onClick={[Function]}
                    textColor="#555"
                    type="button"
                  >
                    <Button
                      activeBackgroundColor="#f7f7f7"
                      activeBorderColor="#888"
                      activeColor="#000"
                      aria-pressed={true}
                      backgroundColor="#f7f7f7"
                      borderColor="#ccc"
                      boxShadowColor="#ccc"
                      className="c24 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                      focusBackgroundColor="#fff"
                      focusBorderColor="#0066cd"
                      focusColor="#000"
                      hoverBackgroundColor="#fff"
                      hoverBorderColor="#888"
                      hoverColor="#000"
                      isActive={true}
                      onClick={[Function]}
                      textColor="#555"
                      type="button"
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-pressed={true}
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c24 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        isActive={true}
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button__BaseButton
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-pressed={true}
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c24 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          isActive={true}
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <button
                            aria-pressed={true}
                            className="c24 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                            onClick={[Function]}
                            type="button"
                          >
                            <SvgIcon
                              color="currentColor"
                              icon="mobile"
                              size="22px"
                            >
                              <SvgIcon__StyledSvg
                                aria-hidden={true}
                                className="yoast-svg-icon yoast-svg-icon-mobile"
                                fill="currentColor"
                                focusable="false"
                                role="img"
                                size="22px"
                                viewBox="0 0 1792 1792"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="yoast-svg-icon yoast-svg-icon-mobile c25"
                                  fill="currentColor"
                                  focusable="false"
                                  role="img"
                                  size="22px"
                                  viewBox="0 0 1792 1792"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M976 1408q0-33-23.5-56.5t-56.5-23.5-56.5 23.5-23.5 56.5 23.5 56.5 56.5 23.5 56.5-23.5 23.5-56.5zm208-160v-704q0-13-9.5-22.5t-22.5-9.5h-512q-13 0-22.5 9.5t-9.5 22.5v704q0 13 9.5 22.5t22.5 9.5h512q13 0 22.5-9.5t9.5-22.5zm-192-848q0-16-16-16h-160q-16 0-16 16t16 16h160q16 0 16-16zm288-16v1024q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-1024q0-52 38-90t90-38h512q52 0 90 38t38 90z"
                                  />
                                </svg>
                              </SvgIcon__StyledSvg>
                            </SvgIcon>
                            <ScreenReaderText>
                              <span
                                className="screen-reader-text"
                                style={
                                  Object {
                                    "clip": "rect(1px, 1px, 1px, 1px)",
                                    "height": "1px",
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "width": "1px",
                                  }
                                }
                              >
                                Mobile preview
                              </span>
                            </ScreenReaderText>
                          </button>
                        </Button__BaseButton>
                      </Button>
                    </Button>
                  </Button>
                </Button>
              </Button>
            </ModeSwitcher__SwitcherButton>
            <ModeSwitcher__SwitcherButton
              aria-pressed={false}
              isActive={false}
              onClick={[Function]}
            >
              <Button
                aria-pressed={false}
                className="c26"
                isActive={false}
                onClick={[Function]}
              >
                <Button
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-pressed={false}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c26 c2"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  isActive={false}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <Button
                    activeBackgroundColor="#f7f7f7"
                    activeBorderColor="#888"
                    activeColor="#000"
                    aria-pressed={false}
                    backgroundColor="#f7f7f7"
                    borderColor="#ccc"
                    boxShadowColor="#ccc"
                    className="c26 c2 Button-kDSBcD c3"
                    focusBackgroundColor="#fff"
                    focusBorderColor="#0066cd"
                    focusColor="#000"
                    hoverBackgroundColor="#fff"
                    hoverBorderColor="#888"
                    hoverColor="#000"
                    isActive={false}
                    onClick={[Function]}
                    textColor="#555"
                    type="button"
                  >
                    <Button
                      activeBackgroundColor="#f7f7f7"
                      activeBorderColor="#888"
                      activeColor="#000"
                      aria-pressed={false}
                      backgroundColor="#f7f7f7"
                      borderColor="#ccc"
                      boxShadowColor="#ccc"
                      className="c26 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                      focusBackgroundColor="#fff"
                      focusBorderColor="#0066cd"
                      focusColor="#000"
                      hoverBackgroundColor="#fff"
                      hoverBorderColor="#888"
                      hoverColor="#000"
                      isActive={false}
                      onClick={[Function]}
                      textColor="#555"
                      type="button"
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-pressed={false}
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c26 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        isActive={false}
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button__BaseButton
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-pressed={false}
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c26 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          isActive={false}
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <button
                            aria-pressed={false}
                            className="c26 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                            onClick={[Function]}
                            type="button"
                          >
                            <SvgIcon
                              color="currentColor"
                              icon="desktop"
                              size="18px"
                            >
                              <SvgIcon__StyledSvg
                                aria-hidden={true}
                                className="yoast-svg-icon yoast-svg-icon-desktop"
                                fill="currentColor"
                                focusable="false"
                                role="img"
                                size="18px"
                                viewBox="0 0 1792 1792"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="yoast-svg-icon yoast-svg-icon-desktop c27"
                                  fill="currentColor"
                                  focusable="false"
                                  role="img"
                                  size="18px"
                                  viewBox="0 0 1792 1792"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M1728 992v-832q0-13-9.5-22.5t-22.5-9.5h-1600q-13 0-22.5 9.5t-9.5 22.5v832q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5zm128-832v1088q0 66-47 113t-113 47h-544q0 37 16 77.5t32 71 16 43.5q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45q0-14 16-44t32-70 16-78h-544q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1600q66 0 113 47t47 113z"
                                  />
                                </svg>
                              </SvgIcon__StyledSvg>
                            </SvgIcon>
                            <ScreenReaderText>
                              <span
                                className="screen-reader-text"
                                style={
                                  Object {
                                    "clip": "rect(1px, 1px, 1px, 1px)",
                                    "height": "1px",
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "width": "1px",
                                  }
                                }
                              >
                                Desktop preview
                              </span>
                            </ScreenReaderText>
                          </button>
                        </Button__BaseButton>
                      </Button>
                    </Button>
                  </Button>
                </Button>
              </Button>
            </ModeSwitcher__SwitcherButton>
          </div>
        </ModeSwitcher__Switcher>
      </ModeSwitcher>
      <Button
        aria-expanded={true}
        innerRef={[Function]}
        onClick={[Function]}
      >
        <Button
          activeBackgroundColor="#f7f7f7"
          activeBorderColor="#888"
          activeColor="#000"
          aria-expanded={true}
          backgroundColor="#f7f7f7"
          borderColor="#ccc"
          boxShadowColor="#ccc"
          className="c28"
          focusBackgroundColor="#fff"
          focusBorderColor="#0066cd"
          focusColor="#000"
          hoverBackgroundColor="#fff"
          hoverBorderColor="#888"
          hoverColor="#000"
          innerRef={[Function]}
          onClick={[Function]}
          textColor="#555"
          type="button"
        >
          <Button
            activeBackgroundColor="#f7f7f7"
            activeBorderColor="#888"
            activeColor="#000"
            aria-expanded={true}
            backgroundColor="#f7f7f7"
            borderColor="#ccc"
            boxShadowColor="#ccc"
            className="c28 Button-kDSBcD c3"
            focusBackgroundColor="#fff"
            focusBorderColor="#0066cd"
            focusColor="#000"
            hoverBackgroundColor="#fff"
            hoverBorderColor="#888"
            hoverColor="#000"
            innerRef={[Function]}
            onClick={[Function]}
            textColor="#555"
            type="button"
          >
            <Button
              activeBackgroundColor="#f7f7f7"
              activeBorderColor="#888"
              activeColor="#000"
              aria-expanded={true}
              backgroundColor="#f7f7f7"
              borderColor="#ccc"
              boxShadowColor="#ccc"
              className="c28 Button-kDSBcD c3 Button-kDSBcD c4"
              focusBackgroundColor="#fff"
              focusBorderColor="#0066cd"
              focusColor="#000"
              hoverBackgroundColor="#fff"
              hoverBorderColor="#888"
              hoverColor="#000"
              innerRef={[Function]}
              onClick={[Function]}
              textColor="#555"
              type="button"
            >
              <Button
                activeBackgroundColor="#f7f7f7"
                activeBorderColor="#888"
                activeColor="#000"
                aria-expanded={true}
                backgroundColor="#f7f7f7"
                borderColor="#ccc"
                boxShadowColor="#ccc"
                className="c28 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                focusBackgroundColor="#fff"
                focusBorderColor="#0066cd"
                focusColor="#000"
                hoverBackgroundColor="#fff"
                hoverBorderColor="#888"
                hoverColor="#000"
                innerRef={[Function]}
                onClick={[Function]}
                textColor="#555"
                type="button"
              >
                <Button__BaseButton
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-expanded={true}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c28 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  innerRef={[Function]}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <button
                    aria-expanded={true}
                    className="c28 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                    onClick={[Function]}
                    type="button"
                  >
                    <SvgIcon
                      icon="edit"
                      size="16px"
                    >
                      <SvgIcon__StyledSvg
                        aria-hidden={true}
                        className="yoast-svg-icon yoast-svg-icon-edit"
                        focusable="false"
                        role="img"
                        size="16px"
                        viewBox="0 0 1792 1792"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <svg
                          aria-hidden={true}
                          className="yoast-svg-icon yoast-svg-icon-edit c9"
                          focusable="false"
                          role="img"
                          size="16px"
                          viewBox="0 0 1792 1792"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M491 1536l91-91-235-235-91 91v107h128v128h107zm523-928q0-22-22-22-10 0-17 7l-542 542q-7 7-7 17 0 22 22 22 10 0 17-7l542-542q7-7 7-17zm-54-192l416 416-832 832h-416v-416zm683 96q0 53-37 90l-166 166-416-416 166-165q36-38 90-38 53 0 91 38l235 234q37 39 37 91z"
                          />
                        </svg>
                      </SvgIcon__StyledSvg>
                    </SvgIcon>
                    Edit snippet
                  </button>
                </Button__BaseButton>
              </Button>
            </Button>
          </Button>
        </Button>
      </Button>
      <SnippetEditorFields
        activeField={null}
        containerPadding="0 20px"
        data={
          Object {
            "description": "Test description, %%replacement_variable%%",
            "slug": "test-slug",
            "title": "Test title",
          }
        }
        descriptionEditorFieldPlaceholder="Modify your meta description by editing it right here"
        descriptionLengthProgress={
          Object {
            "actual": 42,
            "max": 156,
            "score": 6,
          }
        }
        hoveredField="description"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        recommendedReplacementVariables={Array []}
        replacementVariables={Array []}
        titleLengthProgress={
          Object {
            "actual": 0,
            "max": 600,
            "score": 1,
          }
        }
      >
        <Shared__StyledEditor
          padding="0 20px"
        >
          <section
            className="c29"
          >
            <Shared__FormSection>
              <div
                className="c30"
              >
                <ReplacementVariableEditor
                  content="Test title"
                  editorRef={[Function]}
                  fieldId="snippet-editor-field-title"
                  isActive={false}
                  isHovered={false}
                  label="SEO title"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  recommendedReplacementVariables={Array []}
                  replacementVariables={Array []}
                  withCaret={true}
                >
                  <Shared__SimulatedLabel
                    id="17"
                    onClick={[Function]}
                  >
                    <div
                      className="c31"
                      id="17"
                      onClick={[Function]}
                    >
                      SEO title
                    </div>
                  </Shared__SimulatedLabel>
                  <Shared__TriggerReplacementVariableSuggestionsButton
                    onClick={[Function]}
                  >
                    <Button
                      className="c32"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c32 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c32 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="c32 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="c32 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="c32 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  className="c32 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <SvgIcon
                                    icon="plus-circle"
                                    size="16px"
                                  >
                                    <SvgIcon__StyledSvg
                                      aria-hidden={true}
                                      className="yoast-svg-icon yoast-svg-icon-plus-circle"
                                      focusable="false"
                                      role="img"
                                      size="16px"
                                      viewBox="0 0 1792 1792"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-plus-circle c9"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M1344 960v-128q0-26-19-45t-45-19h-256v-256q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v256h-256q-26 0-45 19t-19 45v128q0 26 19 45t45 19h256v256q0 26 19 45t45 19h128q26 0 45-19t19-45v-256h256q26 0 45-19t19-45zm320-64q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                        />
                                      </svg>
                                    </SvgIcon__StyledSvg>
                                  </SvgIcon>
                                  Insert snippet variable
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </Shared__TriggerReplacementVariableSuggestionsButton>
                  <Shared__InputContainer
                    id="snippet-editor-field-title"
                    isActive={false}
                    isHovered={false}
                    onClick={[Function]}
                  >
                    <div
                      className="c33"
                      id="snippet-editor-field-title"
                      onClick={[Function]}
                    >
                      <Wrapper
                        ariaLabelledBy="17"
                        content="Test title"
                        innerRef={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        recommendedReplacementVariables={Array []}
                        replacementVariables={Array []}
                      >
                        <ReplacementVariableEditorStandalone
                          ariaLabelledBy="17"
                          content="Test title"
                          innerRef={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          recommendedReplacementVariables={Array []}
                          replacementVariables={Array []}
                        >
                          <div />
                        </ReplacementVariableEditorStandalone>
                      </Wrapper>
                    </div>
                  </Shared__InputContainer>
                </ReplacementVariableEditor>
                <ProgressBar
                  aria-hidden="true"
                  backgroundColor="#f7f7f7"
                  borderColor="#ddd"
                  max={600}
                  progressColor="#dc3232"
                  value={0}
                >
                  <progress
                    aria-hidden="true"
                    className="c34"
                    max={600}
                    value={0}
                  />
                </ProgressBar>
              </div>
            </Shared__FormSection>
            <Shared__FormSection>
              <div
                className="c30"
              >
                <Shared__SimulatedLabel
                  id="snippet-editor-field-16-slug"
                  onClick={[Function]}
                >
                  <div
                    className="c31"
                    id="snippet-editor-field-16-slug"
                    onClick={[Function]}
                  >
                    Slug
                  </div>
                </Shared__SimulatedLabel>
                <Shared__InputContainer
                  isActive={false}
                  isHovered={false}
                  onClick={[Function]}
                >
                  <div
                    className="c35"
                    onClick={[Function]}
                  >
                    <SnippetEditorFields__SlugInput
                      aria-labelledby="snippet-editor-field-16-slug"
                      id="snippet-editor-field-slug"
                      innerRef={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      value="test-slug"
                    >
                      <input
                        aria-labelledby="snippet-editor-field-16-slug"
                        className="c36"
                        id="snippet-editor-field-slug"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        value="test-slug"
                      />
                    </SnippetEditorFields__SlugInput>
                  </div>
                </Shared__InputContainer>
              </div>
            </Shared__FormSection>
            <Shared__FormSection>
              <div
                className="c30"
              >
                <ReplacementVariableEditor
                  content="Test description, %%replacement_variable%%"
                  editorRef={[Function]}
                  fieldId="snippet-editor-field-description"
                  isActive={false}
                  isHovered={true}
                  label="Meta description"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  placeholder="Modify your meta description by editing it right here"
                  recommendedReplacementVariables={Array []}
                  replacementVariables={Array []}
                  type="description"
                  withCaret={true}
                >
                  <Shared__SimulatedLabel
                    id="18"
                    onClick={[Function]}
                  >
                    <div
                      className="c31"
                      id="18"
                      onClick={[Function]}
                    >
                      Meta description
                    </div>
                  </Shared__SimulatedLabel>
                  <Shared__TriggerReplacementVariableSuggestionsButton
                    onClick={[Function]}
                  >
                    <Button
                      className="c32"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c32 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c32 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="c32 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="c32 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="c32 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  className="c32 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <SvgIcon
                                    icon="plus-circle"
                                    size="16px"
                                  >
                                    <SvgIcon__StyledSvg
                                      aria-hidden={true}
                                      className="yoast-svg-icon yoast-svg-icon-plus-circle"
                                      focusable="false"
                                      role="img"
                                      size="16px"
                                      viewBox="0 0 1792 1792"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-plus-circle c9"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M1344 960v-128q0-26-19-45t-45-19h-256v-256q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v256h-256q-26 0-45 19t-19 45v128q0 26 19 45t45 19h256v256q0 26 19 45t45 19h128q26 0 45-19t19-45v-256h256q26 0 45-19t19-45zm320-64q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                        />
                                      </svg>
                                    </SvgIcon__StyledSvg>
                                  </SvgIcon>
                                  Insert snippet variable
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </Shared__TriggerReplacementVariableSuggestionsButton>
                  <Shared__InputContainer
                    id="snippet-editor-field-description"
                    isActive={false}
                    isHovered={true}
                    onClick={[Function]}
                  >
                    <div
                      className="c37"
                      id="snippet-editor-field-description"
                      onClick={[Function]}
                    >
                      <Wrapper
                        ariaLabelledBy="18"
                        content="Test description, %%replacement_variable%%"
                        innerRef={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        placeholder="Modify your meta description by editing it right here"
                        recommendedReplacementVariables={Array []}
                        replacementVariables={Array []}
                      >
                        <ReplacementVariableEditorStandalone
                          ariaLabelledBy="18"
                          content="Test description, %%replacement_variable%%"
                          innerRef={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Modify your meta description by editing it right here"
                          recommendedReplacementVariables={Array []}
                          replacementVariables={Array []}
                        >
                          <div />
                        </ReplacementVariableEditorStandalone>
                      </Wrapper>
                    </div>
                  </Shared__InputContainer>
                </ReplacementVariableEditor>
                <ProgressBar
                  aria-hidden="true"
                  backgroundColor="#f7f7f7"
                  borderColor="#ddd"
                  max={156}
                  progressColor="#ee7c1b"
                  value={42}
                >
                  <progress
                    aria-hidden="true"
                    className="c38"
                    max={156}
                    value={42}
                  />
                </ProgressBar>
              </div>
            </Shared__FormSection>
          </section>
        </Shared__StyledEditor>
      </SnippetEditorFields>
      <Button
        onClick={[Function]}
      >
        <Button
          activeBackgroundColor="#f7f7f7"
          activeBorderColor="#888"
          activeColor="#000"
          backgroundColor="#f7f7f7"
          borderColor="#ccc"
          boxShadowColor="#ccc"
          className="c39"
          focusBackgroundColor="#fff"
          focusBorderColor="#0066cd"
          focusColor="#000"
          hoverBackgroundColor="#fff"
          hoverBorderColor="#888"
          hoverColor="#000"
          onClick={[Function]}
          textColor="#555"
          type="button"
        >
          <Button
            activeBackgroundColor="#f7f7f7"
            activeBorderColor="#888"
            activeColor="#000"
            backgroundColor="#f7f7f7"
            borderColor="#ccc"
            boxShadowColor="#ccc"
            className="c39 Button-kDSBcD c3"
            focusBackgroundColor="#fff"
            focusBorderColor="#0066cd"
            focusColor="#000"
            hoverBackgroundColor="#fff"
            hoverBorderColor="#888"
            hoverColor="#000"
            onClick={[Function]}
            textColor="#555"
            type="button"
          >
            <Button
              activeBackgroundColor="#f7f7f7"
              activeBorderColor="#888"
              activeColor="#000"
              backgroundColor="#f7f7f7"
              borderColor="#ccc"
              boxShadowColor="#ccc"
              className="c39 Button-kDSBcD c3 Button-kDSBcD c4"
              focusBackgroundColor="#fff"
              focusBorderColor="#0066cd"
              focusColor="#000"
              hoverBackgroundColor="#fff"
              hoverBorderColor="#888"
              hoverColor="#000"
              onClick={[Function]}
              textColor="#555"
              type="button"
            >
              <Button
                activeBackgroundColor="#f7f7f7"
                activeBorderColor="#888"
                activeColor="#000"
                backgroundColor="#f7f7f7"
                borderColor="#ccc"
                boxShadowColor="#ccc"
                className="c39 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                focusBackgroundColor="#fff"
                focusBorderColor="#0066cd"
                focusColor="#000"
                hoverBackgroundColor="#fff"
                hoverBorderColor="#888"
                hoverColor="#000"
                onClick={[Function]}
                textColor="#555"
                type="button"
              >
                <Button__BaseButton
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c39 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <button
                    className="c39 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                    onClick={[Function]}
                    type="button"
                  >
                    Close snippet editor
                  </button>
                </Button__BaseButton>
              </Button>
            </Button>
          </Button>
        </Button>
      </Button>
    </div>
  </ErrorBoundary>
</SnippetEditor>
`;

exports[`SnippetEditor opens when calling open() 1`] = `
.c7 {
  color: #555;
  border-color: #ccc;
  background: #f7f7f7;
  box-shadow: 0 1px 0 rgba( 204,204,204,1 );
}

.c2 {
  font-size: 0.8rem;
}

.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  vertical-align: middle;
  border-width: 1px;
  border-style: solid;
  margin: 0;
  padding: 4px 10px;
  border-radius: 3px;
  cursor: pointer;
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  font-weight: inherit;
  text-align: left;
  overflow: visible;
  min-height: 32px;
}

.c3 svg {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c4:hover {
  color: #000;
  background-color: #fff;
  border-color: #888;
}

.c5::-moz-focus-inner {
  border-width: 0;
}

.c5:focus {
  outline: none;
  border-color: #0066cd;
  color: #000;
  background-color: #fff;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c6:active {
  color: #000;
  background-color: #f7f7f7;
  border-color: #888;
  box-shadow: inset 0 2px 5px -3px rgba( 0,0,0,0.5 );
}

.c27 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 10px 0 0 4px;
  fill: #555;
  padding-left: 8px;
}

.c27 svg {
  margin-right: 7px;
}

.c38 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin-top: 24px;
}

.c10 >:first-child {
  overflow: hidden;
  -webkit-transition: height 300ms ease-out;
  transition: height 300ms ease-out;
}

.c0 {
  max-width: 600px;
  font-weight: normal;
  margin: 0 20px 0 25px;
}

.c1 {
  min-width: 14px;
  min-height: 14px;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  border: 1px solid transparent;
  box-shadow: none;
  display: block;
  margin: -44px -10px 10px 0;
  background-color: transparent;
  float: right;
  padding: 3px 0 0 6px;
}

.c1:hover {
  color: #0066cd;
}

.c1:focus {
  border: 1px solid #0066cd;
  outline: none;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c1:focus svg {
  fill: #0066cd;
  color: #0066cd;
}

.c1:active {
  box-shadow: none;
}

.c8:hover {
  fill: #0066cd;
}

.c32 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
}

.c32 .public-DraftStyleDefault-block {
  line-height: 24px;
}

.c32::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c34 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
}

.c34::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c36 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
  min-height: 72px;
  padding: 2px 6px;
  line-height: 24px;
}

.c36 .public-DraftEditorPlaceholder-root {
  color: #646464;
}

.c36 .public-DraftEditorPlaceholder-hasFocus {
  color: #646464;
}

.c36::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c29 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin: 24px 0 0 0;
}

.c28 {
  padding: 0 20px;
}

.c30 {
  -webkit-flex: 1 1 200px;
  -ms-flex: 1 1 200px;
  flex: 1 1 200px;
  min-width: 200px;
  cursor: pointer;
  font-size: 16px;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 4px 0;
}

.c31 {
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  padding-left: 8px;
  height: 33px;
  border: 1px solid #dbdbdb;
  font-size: 13px;
}

.c31 svg {
  margin-right: 7px;
  fill: #555;
}

.c11 {
  border-bottom: 1px hidden #fff;
  border-radius: 2px;
  box-shadow: 0 1px 2px rgba(0,0,0,.2);
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  max-width: 600px;
  box-sizing: border-box;
  font-size: 14px;
}

.c13 {
  cursor: pointer;
  position: relative;
}

.c15 {
  color: #1e0fbe;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-size: 18px;
  line-height: 1.2;
  font-weight: normal;
  margin: 0;
  display: inline-block;
  overflow: hidden;
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c14 {
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c16 {
  display: inline-block;
  font-size: 16px;
  line-height: 1.2em;
  max-height: 2.4em;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c17 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
}

.c18 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%;
}

.c21 {
  color: #545454;
  cursor: pointer;
  position: relative;
  max-width: 600px;
  font-size: 13px;
}

.c20 {
  font-size: 14px;
  line-height: 20px;
}

.c12 {
  padding: 8px 16px;
}

.c19 {
  border: 0;
  border-bottom: 1px solid #DFE1E5;
  margin: 0;
}

.c33 {
  box-sizing: border-box;
  width: 100%;
  height: 8px;
  display: block;
  margin-top: 8px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #f7f7f7;
  border: 1px solid #ddd;
}

.c33::-webkit-progress-bar {
  background-color: #f7f7f7;
}

.c33::-webkit-progress-value {
  background-color: #dc3232;
  -webkit-transition: width 250ms;
  transition: width 250ms;
}

.c33::-moz-progress-bar {
  background-color: #dc3232;
}

.c33::-ms-fill {
  background-color: #dc3232;
  border: 0;
}

.c37 {
  box-sizing: border-box;
  width: 100%;
  height: 8px;
  display: block;
  margin-top: 8px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #f7f7f7;
  border: 1px solid #ddd;
}

.c37::-webkit-progress-bar {
  background-color: #f7f7f7;
}

.c37::-webkit-progress-value {
  background-color: #ee7c1b;
  -webkit-transition: width 250ms;
  transition: width 250ms;
}

.c37::-moz-progress-bar {
  background-color: #ee7c1b;
}

.c37::-ms-fill {
  background-color: #ee7c1b;
  border: 0;
}

.c35 {
  border: none;
  width: 100%;
  height: inherit;
  line-height: inherit;
  font-family: inherit;
  font-size: inherit;
  color: inherit;
}

.c35:focus {
  outline: 0;
}

.c23 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: #555;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 3px 0 0 3px;
}

.c23:hover,
.c23:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c25 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: transparent;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 0 3px 3px 0;
}

.c25:hover,
.c25:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c22 {
  display: inline-block;
  margin-top: 10px;
  border: 1px solid #dbdbdb;
  border-radius: 4px;
  background-color: #f7f7f7;
  vertical-align: top;
}

.c9 {
  width: 16px;
  height: 16px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c24 {
  width: 22px;
  height: 22px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c26 {
  width: 18px;
  height: 18px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

@media all and (-ms-high-contrast:none),(-ms-high-contrast:active) {
  .c3::after {
    display: inline-block;
    content: "";
    min-height: 22px;
  }
}

<SnippetEditor
  baseUrl="http://example.org/"
  data={
    Object {
      "description": "Test description, %%replacement_variable%%",
      "slug": "test-slug",
      "title": "Test title",
    }
  }
  date=""
  descriptionEditorFieldPlaceholder="Modify your meta description by editing it right here"
  descriptionLengthProgress={
    Object {
      "actual": 0,
      "max": 156,
      "score": 0,
    }
  }
  hasPaperStyle={true}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "textComponent": "span",
    }
  }
  locale="en"
  mapEditorDataToPreview={null}
  mode="mobile"
  onChange={[MockFunction]}
  onChangeAnalysisData={[Function]}
  recommendedReplacementVariables={Array []}
  replacementVariables={Array []}
  titleLengthProgress={
    Object {
      "actual": 0,
      "max": 600,
      "score": 0,
    }
  }
>
  <ErrorBoundary>
    <div>
      <SnippetPreview
        activeField={null}
        breadcrumbs={null}
        date=""
        description="Test description, %%replacement_variable%%"
        hoveredField={null}
        isAmp={false}
        keyword=""
        locale="en"
        mode="mobile"
        onHover={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        title="Test title"
        url="example.org/test-slug"
      >
        <section>
          <div>
            <HelpTextWrapper
              className="yoast-help"
              helpText={
                Array [
                  "This is a rendering of what this post might look like in Google's search results. ",
                  <OutboundLink
                    href="https://yoa.st/snippet-preview"
                  >
                    Learn more about the Snippet Preview.
                  </OutboundLink>,
                ]
              }
              helpTextButtonLabel="Help on the Snippet Preview"
              panelMaxWidth="400px"
            >
              <HelpTextWrapper__HelpTextContainer
                className="yoast-help"
              >
                <div
                  className="yoast-help c0"
                >
                  <HelpTextWrapper__HelpTextButton
                    aria-controls={null}
                    aria-expanded={false}
                    aria-label="Help on the Snippet Preview"
                    className="yoast-help__button"
                    onClick={[Function]}
                  >
                    <Button
                      aria-controls={null}
                      aria-expanded={false}
                      aria-label="Help on the Snippet Preview"
                      className="yoast-help__button c1"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-controls={null}
                        aria-expanded={false}
                        aria-label="Help on the Snippet Preview"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="yoast-help__button c1 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-controls={null}
                          aria-expanded={false}
                          aria-label="Help on the Snippet Preview"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="yoast-help__button c1 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            aria-controls={null}
                            aria-expanded={false}
                            aria-label="Help on the Snippet Preview"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              aria-controls={null}
                              aria-expanded={false}
                              aria-label="Help on the Snippet Preview"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                aria-controls={null}
                                aria-expanded={false}
                                aria-label="Help on the Snippet Preview"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  aria-controls={null}
                                  aria-expanded={false}
                                  aria-label="Help on the Snippet Preview"
                                  className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <HelpTextWrapper__StyledSvg
                                    color="#646464"
                                    icon="question-circle"
                                    size="16px"
                                  >
                                    <SvgIcon
                                      className="c8"
                                      color="#646464"
                                      icon="question-circle"
                                      size="16px"
                                    >
                                      <SvgIcon__StyledSvg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-question-circle c8"
                                        fill="#646464"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="yoast-svg-icon yoast-svg-icon-question-circle c8 c9"
                                          fill="#646464"
                                          focusable="false"
                                          role="img"
                                          size="16px"
                                          viewBox="0 0 1792 1792"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M1024 1376v-192q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23-9t9-23zm256-672q0-88-55.5-163t-138.5-116-170-41q-243 0-371 213-15 24 8 42l132 100q7 6 19 6 16 0 25-12 53-68 86-92 34-24 86-24 48 0 85.5 26t37.5 59q0 38-20 61t-68 45q-63 28-115.5 86.5t-52.5 125.5v36q0 14 9 23t23 9h192q14 0 23-9t9-23q0-19 21.5-49.5t54.5-49.5q32-18 49-28.5t46-35 44.5-48 28-60.5 12.5-81zm384 192q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                          />
                                        </svg>
                                      </SvgIcon__StyledSvg>
                                    </SvgIcon>
                                  </HelpTextWrapper__StyledSvg>
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </HelpTextWrapper__HelpTextButton>
                  <YoastSlideToggle
                    duration={300}
                    isOpen={false}
                  >
                    <animations__YoastSlideToggleContainer
                      duration={300}
                    >
                      <div
                        className="c10"
                      >
                        <CSSTransition
                          classNames="slide"
                          in={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={true}
                        >
                          <Transition
                            appear={false}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={true}
                          />
                        </CSSTransition>
                      </div>
                    </animations__YoastSlideToggleContainer>
                  </YoastSlideToggle>
                </div>
              </HelpTextWrapper__HelpTextContainer>
            </HelpTextWrapper>
          </div>
          <SnippetPreview__MobileContainer
            padding={20}
            width={640}
          >
            <div
              className="c11"
              width={640}
            >
              <SnippetPreview__MobilePartContainer>
                <div
                  className="c12"
                >
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      SEO title preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__BaseTitle
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                  >
                    <div
                      className="c13"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                    >
                      <SnippetPreview__TitleBounded>
                        <SnippetPreview__Title
                          className="c14"
                        >
                          <div
                            className="c14 c15"
                          >
                            <SnippetPreview__TitleUnboundedMobile
                              innerRef={[Function]}
                            >
                              <span
                                className="c16"
                              >
                                Test title
                              </span>
                            </SnippetPreview__TitleUnboundedMobile>
                          </div>
                        </SnippetPreview__Title>
                      </SnippetPreview__TitleBounded>
                    </div>
                  </SnippetPreview__BaseTitle>
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      Url preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__BaseUrl>
                    <div
                      className="c17"
                    >
                      <SnippetPreview__BaseUrlOverflowContainer
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                      >
                        <div
                          className="c18"
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                        >
                          example.org â€º test-slug
                        </div>
                      </SnippetPreview__BaseUrlOverflowContainer>
                    </div>
                  </SnippetPreview__BaseUrl>
                </div>
              </SnippetPreview__MobilePartContainer>
              <SnippetPreview__Separator>
                <hr
                  className="c19"
                />
              </SnippetPreview__Separator>
              <SnippetPreview__MobilePartContainer>
                <div
                  className="c12"
                >
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      Meta description preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__MobileDescription
                    isDescriptionPlaceholder={false}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                  >
                    <SnippetPreview__DesktopDescription
                      className="c20"
                      isDescriptionPlaceholder={false}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                    >
                      <div
                        className="c20 c21"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                      >
                        <SnippetPreview__MobileDescription
                          innerRef={[Function]}
                          isDescriptionPlaceholder={false}
                        >
                          <SnippetPreview__DesktopDescription
                            className="c20"
                            innerRef={[Function]}
                            isDescriptionPlaceholder={false}
                          >
                            <div
                              className="c20 c21"
                            >
                              Test description, %%replacement_variable%%
                            </div>
                          </SnippetPreview__DesktopDescription>
                        </SnippetPreview__MobileDescription>
                      </div>
                    </SnippetPreview__DesktopDescription>
                  </SnippetPreview__MobileDescription>
                </div>
              </SnippetPreview__MobilePartContainer>
            </div>
          </SnippetPreview__MobileContainer>
        </section>
      </SnippetPreview>
      <ModeSwitcher
        active="mobile"
        onChange={[Function]}
      >
        <ModeSwitcher__Switcher>
          <div
            className="c22"
          >
            <ModeSwitcher__SwitcherButton
              aria-pressed={true}
              isActive={true}
              onClick={[Function]}
            >
              <Button
                aria-pressed={true}
                className="c23"
                isActive={true}
                onClick={[Function]}
              >
                <Button
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-pressed={true}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c23 c2"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  isActive={true}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <Button
                    activeBackgroundColor="#f7f7f7"
                    activeBorderColor="#888"
                    activeColor="#000"
                    aria-pressed={true}
                    backgroundColor="#f7f7f7"
                    borderColor="#ccc"
                    boxShadowColor="#ccc"
                    className="c23 c2 Button-kDSBcD c3"
                    focusBackgroundColor="#fff"
                    focusBorderColor="#0066cd"
                    focusColor="#000"
                    hoverBackgroundColor="#fff"
                    hoverBorderColor="#888"
                    hoverColor="#000"
                    isActive={true}
                    onClick={[Function]}
                    textColor="#555"
                    type="button"
                  >
                    <Button
                      activeBackgroundColor="#f7f7f7"
                      activeBorderColor="#888"
                      activeColor="#000"
                      aria-pressed={true}
                      backgroundColor="#f7f7f7"
                      borderColor="#ccc"
                      boxShadowColor="#ccc"
                      className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                      focusBackgroundColor="#fff"
                      focusBorderColor="#0066cd"
                      focusColor="#000"
                      hoverBackgroundColor="#fff"
                      hoverBorderColor="#888"
                      hoverColor="#000"
                      isActive={true}
                      onClick={[Function]}
                      textColor="#555"
                      type="button"
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-pressed={true}
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        isActive={true}
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button__BaseButton
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-pressed={true}
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          isActive={true}
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <button
                            aria-pressed={true}
                            className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                            onClick={[Function]}
                            type="button"
                          >
                            <SvgIcon
                              color="currentColor"
                              icon="mobile"
                              size="22px"
                            >
                              <SvgIcon__StyledSvg
                                aria-hidden={true}
                                className="yoast-svg-icon yoast-svg-icon-mobile"
                                fill="currentColor"
                                focusable="false"
                                role="img"
                                size="22px"
                                viewBox="0 0 1792 1792"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="yoast-svg-icon yoast-svg-icon-mobile c24"
                                  fill="currentColor"
                                  focusable="false"
                                  role="img"
                                  size="22px"
                                  viewBox="0 0 1792 1792"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M976 1408q0-33-23.5-56.5t-56.5-23.5-56.5 23.5-23.5 56.5 23.5 56.5 56.5 23.5 56.5-23.5 23.5-56.5zm208-160v-704q0-13-9.5-22.5t-22.5-9.5h-512q-13 0-22.5 9.5t-9.5 22.5v704q0 13 9.5 22.5t22.5 9.5h512q13 0 22.5-9.5t9.5-22.5zm-192-848q0-16-16-16h-160q-16 0-16 16t16 16h160q16 0 16-16zm288-16v1024q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-1024q0-52 38-90t90-38h512q52 0 90 38t38 90z"
                                  />
                                </svg>
                              </SvgIcon__StyledSvg>
                            </SvgIcon>
                            <ScreenReaderText>
                              <span
                                className="screen-reader-text"
                                style={
                                  Object {
                                    "clip": "rect(1px, 1px, 1px, 1px)",
                                    "height": "1px",
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "width": "1px",
                                  }
                                }
                              >
                                Mobile preview
                              </span>
                            </ScreenReaderText>
                          </button>
                        </Button__BaseButton>
                      </Button>
                    </Button>
                  </Button>
                </Button>
              </Button>
            </ModeSwitcher__SwitcherButton>
            <ModeSwitcher__SwitcherButton
              aria-pressed={false}
              isActive={false}
              onClick={[Function]}
            >
              <Button
                aria-pressed={false}
                className="c25"
                isActive={false}
                onClick={[Function]}
              >
                <Button
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-pressed={false}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c25 c2"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  isActive={false}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <Button
                    activeBackgroundColor="#f7f7f7"
                    activeBorderColor="#888"
                    activeColor="#000"
                    aria-pressed={false}
                    backgroundColor="#f7f7f7"
                    borderColor="#ccc"
                    boxShadowColor="#ccc"
                    className="c25 c2 Button-kDSBcD c3"
                    focusBackgroundColor="#fff"
                    focusBorderColor="#0066cd"
                    focusColor="#000"
                    hoverBackgroundColor="#fff"
                    hoverBorderColor="#888"
                    hoverColor="#000"
                    isActive={false}
                    onClick={[Function]}
                    textColor="#555"
                    type="button"
                  >
                    <Button
                      activeBackgroundColor="#f7f7f7"
                      activeBorderColor="#888"
                      activeColor="#000"
                      aria-pressed={false}
                      backgroundColor="#f7f7f7"
                      borderColor="#ccc"
                      boxShadowColor="#ccc"
                      className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                      focusBackgroundColor="#fff"
                      focusBorderColor="#0066cd"
                      focusColor="#000"
                      hoverBackgroundColor="#fff"
                      hoverBorderColor="#888"
                      hoverColor="#000"
                      isActive={false}
                      onClick={[Function]}
                      textColor="#555"
                      type="button"
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-pressed={false}
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        isActive={false}
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button__BaseButton
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-pressed={false}
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          isActive={false}
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <button
                            aria-pressed={false}
                            className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                            onClick={[Function]}
                            type="button"
                          >
                            <SvgIcon
                              color="currentColor"
                              icon="desktop"
                              size="18px"
                            >
                              <SvgIcon__StyledSvg
                                aria-hidden={true}
                                className="yoast-svg-icon yoast-svg-icon-desktop"
                                fill="currentColor"
                                focusable="false"
                                role="img"
                                size="18px"
                                viewBox="0 0 1792 1792"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="yoast-svg-icon yoast-svg-icon-desktop c26"
                                  fill="currentColor"
                                  focusable="false"
                                  role="img"
                                  size="18px"
                                  viewBox="0 0 1792 1792"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M1728 992v-832q0-13-9.5-22.5t-22.5-9.5h-1600q-13 0-22.5 9.5t-9.5 22.5v832q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5zm128-832v1088q0 66-47 113t-113 47h-544q0 37 16 77.5t32 71 16 43.5q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45q0-14 16-44t32-70 16-78h-544q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1600q66 0 113 47t47 113z"
                                  />
                                </svg>
                              </SvgIcon__StyledSvg>
                            </SvgIcon>
                            <ScreenReaderText>
                              <span
                                className="screen-reader-text"
                                style={
                                  Object {
                                    "clip": "rect(1px, 1px, 1px, 1px)",
                                    "height": "1px",
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "width": "1px",
                                  }
                                }
                              >
                                Desktop preview
                              </span>
                            </ScreenReaderText>
                          </button>
                        </Button__BaseButton>
                      </Button>
                    </Button>
                  </Button>
                </Button>
              </Button>
            </ModeSwitcher__SwitcherButton>
          </div>
        </ModeSwitcher__Switcher>
      </ModeSwitcher>
      <Button
        aria-expanded={true}
        innerRef={[Function]}
        onClick={[Function]}
      >
        <Button
          activeBackgroundColor="#f7f7f7"
          activeBorderColor="#888"
          activeColor="#000"
          aria-expanded={true}
          backgroundColor="#f7f7f7"
          borderColor="#ccc"
          boxShadowColor="#ccc"
          className="c27"
          focusBackgroundColor="#fff"
          focusBorderColor="#0066cd"
          focusColor="#000"
          hoverBackgroundColor="#fff"
          hoverBorderColor="#888"
          hoverColor="#000"
          innerRef={[Function]}
          onClick={[Function]}
          textColor="#555"
          type="button"
        >
          <Button
            activeBackgroundColor="#f7f7f7"
            activeBorderColor="#888"
            activeColor="#000"
            aria-expanded={true}
            backgroundColor="#f7f7f7"
            borderColor="#ccc"
            boxShadowColor="#ccc"
            className="c27 Button-kDSBcD c3"
            focusBackgroundColor="#fff"
            focusBorderColor="#0066cd"
            focusColor="#000"
            hoverBackgroundColor="#fff"
            hoverBorderColor="#888"
            hoverColor="#000"
            innerRef={[Function]}
            onClick={[Function]}
            textColor="#555"
            type="button"
          >
            <Button
              activeBackgroundColor="#f7f7f7"
              activeBorderColor="#888"
              activeColor="#000"
              aria-expanded={true}
              backgroundColor="#f7f7f7"
              borderColor="#ccc"
              boxShadowColor="#ccc"
              className="c27 Button-kDSBcD c3 Button-kDSBcD c4"
              focusBackgroundColor="#fff"
              focusBorderColor="#0066cd"
              focusColor="#000"
              hoverBackgroundColor="#fff"
              hoverBorderColor="#888"
              hoverColor="#000"
              innerRef={[Function]}
              onClick={[Function]}
              textColor="#555"
              type="button"
            >
              <Button
                activeBackgroundColor="#f7f7f7"
                activeBorderColor="#888"
                activeColor="#000"
                aria-expanded={true}
                backgroundColor="#f7f7f7"
                borderColor="#ccc"
                boxShadowColor="#ccc"
                className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                focusBackgroundColor="#fff"
                focusBorderColor="#0066cd"
                focusColor="#000"
                hoverBackgroundColor="#fff"
                hoverBorderColor="#888"
                hoverColor="#000"
                innerRef={[Function]}
                onClick={[Function]}
                textColor="#555"
                type="button"
              >
                <Button__BaseButton
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-expanded={true}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  innerRef={[Function]}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <button
                    aria-expanded={true}
                    className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                    onClick={[Function]}
                    type="button"
                  >
                    <SvgIcon
                      icon="edit"
                      size="16px"
                    >
                      <SvgIcon__StyledSvg
                        aria-hidden={true}
                        className="yoast-svg-icon yoast-svg-icon-edit"
                        focusable="false"
                        role="img"
                        size="16px"
                        viewBox="0 0 1792 1792"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <svg
                          aria-hidden={true}
                          className="yoast-svg-icon yoast-svg-icon-edit c9"
                          focusable="false"
                          role="img"
                          size="16px"
                          viewBox="0 0 1792 1792"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M491 1536l91-91-235-235-91 91v107h128v128h107zm523-928q0-22-22-22-10 0-17 7l-542 542q-7 7-7 17 0 22 22 22 10 0 17-7l542-542q7-7 7-17zm-54-192l416 416-832 832h-416v-416zm683 96q0 53-37 90l-166 166-416-416 166-165q36-38 90-38 53 0 91 38l235 234q37 39 37 91z"
                          />
                        </svg>
                      </SvgIcon__StyledSvg>
                    </SvgIcon>
                    Edit snippet
                  </button>
                </Button__BaseButton>
              </Button>
            </Button>
          </Button>
        </Button>
      </Button>
      <SnippetEditorFields
        activeField={null}
        containerPadding="0 20px"
        data={
          Object {
            "description": "Test description, %%replacement_variable%%",
            "slug": "test-slug",
            "title": "Test title",
          }
        }
        descriptionEditorFieldPlaceholder="Modify your meta description by editing it right here"
        descriptionLengthProgress={
          Object {
            "actual": 42,
            "max": 156,
            "score": 6,
          }
        }
        hoveredField={null}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        recommendedReplacementVariables={Array []}
        replacementVariables={Array []}
        titleLengthProgress={
          Object {
            "actual": 0,
            "max": 600,
            "score": 1,
          }
        }
      >
        <Shared__StyledEditor
          padding="0 20px"
        >
          <section
            className="c28"
          >
            <Shared__FormSection>
              <div
                className="c29"
              >
                <ReplacementVariableEditor
                  content="Test title"
                  editorRef={[Function]}
                  fieldId="snippet-editor-field-title"
                  isActive={false}
                  isHovered={false}
                  label="SEO title"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  recommendedReplacementVariables={Array []}
                  replacementVariables={Array []}
                  withCaret={true}
                >
                  <Shared__SimulatedLabel
                    id="9"
                    onClick={[Function]}
                  >
                    <div
                      className="c30"
                      id="9"
                      onClick={[Function]}
                    >
                      SEO title
                    </div>
                  </Shared__SimulatedLabel>
                  <Shared__TriggerReplacementVariableSuggestionsButton
                    onClick={[Function]}
                  >
                    <Button
                      className="c31"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c31 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c31 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <SvgIcon
                                    icon="plus-circle"
                                    size="16px"
                                  >
                                    <SvgIcon__StyledSvg
                                      aria-hidden={true}
                                      className="yoast-svg-icon yoast-svg-icon-plus-circle"
                                      focusable="false"
                                      role="img"
                                      size="16px"
                                      viewBox="0 0 1792 1792"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-plus-circle c9"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M1344 960v-128q0-26-19-45t-45-19h-256v-256q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v256h-256q-26 0-45 19t-19 45v128q0 26 19 45t45 19h256v256q0 26 19 45t45 19h128q26 0 45-19t19-45v-256h256q26 0 45-19t19-45zm320-64q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                        />
                                      </svg>
                                    </SvgIcon__StyledSvg>
                                  </SvgIcon>
                                  Insert snippet variable
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </Shared__TriggerReplacementVariableSuggestionsButton>
                  <Shared__InputContainer
                    id="snippet-editor-field-title"
                    isActive={false}
                    isHovered={false}
                    onClick={[Function]}
                  >
                    <div
                      className="c32"
                      id="snippet-editor-field-title"
                      onClick={[Function]}
                    >
                      <Wrapper
                        ariaLabelledBy="9"
                        content="Test title"
                        innerRef={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        recommendedReplacementVariables={Array []}
                        replacementVariables={Array []}
                      >
                        <ReplacementVariableEditorStandalone
                          ariaLabelledBy="9"
                          content="Test title"
                          innerRef={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          recommendedReplacementVariables={Array []}
                          replacementVariables={Array []}
                        >
                          <div />
                        </ReplacementVariableEditorStandalone>
                      </Wrapper>
                    </div>
                  </Shared__InputContainer>
                </ReplacementVariableEditor>
                <ProgressBar
                  aria-hidden="true"
                  backgroundColor="#f7f7f7"
                  borderColor="#ddd"
                  max={600}
                  progressColor="#dc3232"
                  value={0}
                >
                  <progress
                    aria-hidden="true"
                    className="c33"
                    max={600}
                    value={0}
                  />
                </ProgressBar>
              </div>
            </Shared__FormSection>
            <Shared__FormSection>
              <div
                className="c29"
              >
                <Shared__SimulatedLabel
                  id="snippet-editor-field-8-slug"
                  onClick={[Function]}
                >
                  <div
                    className="c30"
                    id="snippet-editor-field-8-slug"
                    onClick={[Function]}
                  >
                    Slug
                  </div>
                </Shared__SimulatedLabel>
                <Shared__InputContainer
                  isActive={false}
                  isHovered={false}
                  onClick={[Function]}
                >
                  <div
                    className="c34"
                    onClick={[Function]}
                  >
                    <SnippetEditorFields__SlugInput
                      aria-labelledby="snippet-editor-field-8-slug"
                      id="snippet-editor-field-slug"
                      innerRef={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      value="test-slug"
                    >
                      <input
                        aria-labelledby="snippet-editor-field-8-slug"
                        className="c35"
                        id="snippet-editor-field-slug"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        value="test-slug"
                      />
                    </SnippetEditorFields__SlugInput>
                  </div>
                </Shared__InputContainer>
              </div>
            </Shared__FormSection>
            <Shared__FormSection>
              <div
                className="c29"
              >
                <ReplacementVariableEditor
                  content="Test description, %%replacement_variable%%"
                  editorRef={[Function]}
                  fieldId="snippet-editor-field-description"
                  isActive={false}
                  isHovered={false}
                  label="Meta description"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  placeholder="Modify your meta description by editing it right here"
                  recommendedReplacementVariables={Array []}
                  replacementVariables={Array []}
                  type="description"
                  withCaret={true}
                >
                  <Shared__SimulatedLabel
                    id="10"
                    onClick={[Function]}
                  >
                    <div
                      className="c30"
                      id="10"
                      onClick={[Function]}
                    >
                      Meta description
                    </div>
                  </Shared__SimulatedLabel>
                  <Shared__TriggerReplacementVariableSuggestionsButton
                    onClick={[Function]}
                  >
                    <Button
                      className="c31"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c31 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c31 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <SvgIcon
                                    icon="plus-circle"
                                    size="16px"
                                  >
                                    <SvgIcon__StyledSvg
                                      aria-hidden={true}
                                      className="yoast-svg-icon yoast-svg-icon-plus-circle"
                                      focusable="false"
                                      role="img"
                                      size="16px"
                                      viewBox="0 0 1792 1792"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-plus-circle c9"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M1344 960v-128q0-26-19-45t-45-19h-256v-256q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v256h-256q-26 0-45 19t-19 45v128q0 26 19 45t45 19h256v256q0 26 19 45t45 19h128q26 0 45-19t19-45v-256h256q26 0 45-19t19-45zm320-64q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                        />
                                      </svg>
                                    </SvgIcon__StyledSvg>
                                  </SvgIcon>
                                  Insert snippet variable
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </Shared__TriggerReplacementVariableSuggestionsButton>
                  <Shared__InputContainer
                    id="snippet-editor-field-description"
                    isActive={false}
                    isHovered={false}
                    onClick={[Function]}
                  >
                    <div
                      className="c36"
                      id="snippet-editor-field-description"
                      onClick={[Function]}
                    >
                      <Wrapper
                        ariaLabelledBy="10"
                        content="Test description, %%replacement_variable%%"
                        innerRef={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        placeholder="Modify your meta description by editing it right here"
                        recommendedReplacementVariables={Array []}
                        replacementVariables={Array []}
                      >
                        <ReplacementVariableEditorStandalone
                          ariaLabelledBy="10"
                          content="Test description, %%replacement_variable%%"
                          innerRef={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Modify your meta description by editing it right here"
                          recommendedReplacementVariables={Array []}
                          replacementVariables={Array []}
                        >
                          <div />
                        </ReplacementVariableEditorStandalone>
                      </Wrapper>
                    </div>
                  </Shared__InputContainer>
                </ReplacementVariableEditor>
                <ProgressBar
                  aria-hidden="true"
                  backgroundColor="#f7f7f7"
                  borderColor="#ddd"
                  max={156}
                  progressColor="#ee7c1b"
                  value={42}
                >
                  <progress
                    aria-hidden="true"
                    className="c37"
                    max={156}
                    value={42}
                  />
                </ProgressBar>
              </div>
            </Shared__FormSection>
          </section>
        </Shared__StyledEditor>
      </SnippetEditorFields>
      <Button
        onClick={[Function]}
      >
        <Button
          activeBackgroundColor="#f7f7f7"
          activeBorderColor="#888"
          activeColor="#000"
          backgroundColor="#f7f7f7"
          borderColor="#ccc"
          boxShadowColor="#ccc"
          className="c38"
          focusBackgroundColor="#fff"
          focusBorderColor="#0066cd"
          focusColor="#000"
          hoverBackgroundColor="#fff"
          hoverBorderColor="#888"
          hoverColor="#000"
          onClick={[Function]}
          textColor="#555"
          type="button"
        >
          <Button
            activeBackgroundColor="#f7f7f7"
            activeBorderColor="#888"
            activeColor="#000"
            backgroundColor="#f7f7f7"
            borderColor="#ccc"
            boxShadowColor="#ccc"
            className="c38 Button-kDSBcD c3"
            focusBackgroundColor="#fff"
            focusBorderColor="#0066cd"
            focusColor="#000"
            hoverBackgroundColor="#fff"
            hoverBorderColor="#888"
            hoverColor="#000"
            onClick={[Function]}
            textColor="#555"
            type="button"
          >
            <Button
              activeBackgroundColor="#f7f7f7"
              activeBorderColor="#888"
              activeColor="#000"
              backgroundColor="#f7f7f7"
              borderColor="#ccc"
              boxShadowColor="#ccc"
              className="c38 Button-kDSBcD c3 Button-kDSBcD c4"
              focusBackgroundColor="#fff"
              focusBorderColor="#0066cd"
              focusColor="#000"
              hoverBackgroundColor="#fff"
              hoverBorderColor="#888"
              hoverColor="#000"
              onClick={[Function]}
              textColor="#555"
              type="button"
            >
              <Button
                activeBackgroundColor="#f7f7f7"
                activeBorderColor="#888"
                activeColor="#000"
                backgroundColor="#f7f7f7"
                borderColor="#ccc"
                boxShadowColor="#ccc"
                className="c38 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                focusBackgroundColor="#fff"
                focusBorderColor="#0066cd"
                focusColor="#000"
                hoverBackgroundColor="#fff"
                hoverBorderColor="#888"
                hoverColor="#000"
                onClick={[Function]}
                textColor="#555"
                type="button"
              >
                <Button__BaseButton
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c38 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <button
                    className="c38 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                    onClick={[Function]}
                    type="button"
                  >
                    Close snippet editor
                  </button>
                </Button__BaseButton>
              </Button>
            </Button>
          </Button>
        </Button>
      </Button>
    </div>
  </ErrorBoundary>
</SnippetEditor>
`;

exports[`SnippetEditor passes replacement variables to the title and description editor 1`] = `
.c7 {
  color: #555;
  border-color: #ccc;
  background: #f7f7f7;
  box-shadow: 0 1px 0 rgba( 204,204,204,1 );
}

.c2 {
  font-size: 0.8rem;
}

.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  vertical-align: middle;
  border-width: 1px;
  border-style: solid;
  margin: 0;
  padding: 4px 10px;
  border-radius: 3px;
  cursor: pointer;
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  font-weight: inherit;
  text-align: left;
  overflow: visible;
  min-height: 32px;
}

.c3 svg {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c4:hover {
  color: #000;
  background-color: #fff;
  border-color: #888;
}

.c5::-moz-focus-inner {
  border-width: 0;
}

.c5:focus {
  outline: none;
  border-color: #0066cd;
  color: #000;
  background-color: #fff;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c6:active {
  color: #000;
  background-color: #f7f7f7;
  border-color: #888;
  box-shadow: inset 0 2px 5px -3px rgba( 0,0,0,0.5 );
}

.c27 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 10px 0 0 4px;
  fill: #555;
  padding-left: 8px;
}

.c27 svg {
  margin-right: 7px;
}

.c38 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin-top: 24px;
}

.c10 >:first-child {
  overflow: hidden;
  -webkit-transition: height 300ms ease-out;
  transition: height 300ms ease-out;
}

.c0 {
  max-width: 600px;
  font-weight: normal;
  margin: 0 20px 0 25px;
}

.c1 {
  min-width: 14px;
  min-height: 14px;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  border: 1px solid transparent;
  box-shadow: none;
  display: block;
  margin: -44px -10px 10px 0;
  background-color: transparent;
  float: right;
  padding: 3px 0 0 6px;
}

.c1:hover {
  color: #0066cd;
}

.c1:focus {
  border: 1px solid #0066cd;
  outline: none;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c1:focus svg {
  fill: #0066cd;
  color: #0066cd;
}

.c1:active {
  box-shadow: none;
}

.c8:hover {
  fill: #0066cd;
}

.c32 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
}

.c32 .public-DraftStyleDefault-block {
  line-height: 24px;
}

.c32::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c34 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
}

.c34::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c36 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
  min-height: 72px;
  padding: 2px 6px;
  line-height: 24px;
}

.c36 .public-DraftEditorPlaceholder-root {
  color: #646464;
}

.c36 .public-DraftEditorPlaceholder-hasFocus {
  color: #646464;
}

.c36::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c29 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin: 24px 0 0 0;
}

.c28 {
  padding: 0 20px;
}

.c30 {
  -webkit-flex: 1 1 200px;
  -ms-flex: 1 1 200px;
  flex: 1 1 200px;
  min-width: 200px;
  cursor: pointer;
  font-size: 16px;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 4px 0;
}

.c31 {
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  padding-left: 8px;
  height: 33px;
  border: 1px solid #dbdbdb;
  font-size: 13px;
}

.c31 svg {
  margin-right: 7px;
  fill: #555;
}

.c11 {
  border-bottom: 1px hidden #fff;
  border-radius: 2px;
  box-shadow: 0 1px 2px rgba(0,0,0,.2);
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  max-width: 600px;
  box-sizing: border-box;
  font-size: 14px;
}

.c13 {
  cursor: pointer;
  position: relative;
}

.c15 {
  color: #1e0fbe;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-size: 18px;
  line-height: 1.2;
  font-weight: normal;
  margin: 0;
  display: inline-block;
  overflow: hidden;
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c14 {
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c16 {
  display: inline-block;
  font-size: 16px;
  line-height: 1.2em;
  max-height: 2.4em;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c17 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
}

.c18 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%;
}

.c21 {
  color: #545454;
  cursor: pointer;
  position: relative;
  max-width: 600px;
  font-size: 13px;
}

.c20 {
  font-size: 14px;
  line-height: 20px;
}

.c12 {
  padding: 8px 16px;
}

.c19 {
  border: 0;
  border-bottom: 1px solid #DFE1E5;
  margin: 0;
}

.c33 {
  box-sizing: border-box;
  width: 100%;
  height: 8px;
  display: block;
  margin-top: 8px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #f7f7f7;
  border: 1px solid #ddd;
}

.c33::-webkit-progress-bar {
  background-color: #f7f7f7;
}

.c33::-webkit-progress-value {
  background-color: #dc3232;
  -webkit-transition: width 250ms;
  transition: width 250ms;
}

.c33::-moz-progress-bar {
  background-color: #dc3232;
}

.c33::-ms-fill {
  background-color: #dc3232;
  border: 0;
}

.c37 {
  box-sizing: border-box;
  width: 100%;
  height: 8px;
  display: block;
  margin-top: 8px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #f7f7f7;
  border: 1px solid #ddd;
}

.c37::-webkit-progress-bar {
  background-color: #f7f7f7;
}

.c37::-webkit-progress-value {
  background-color: #ee7c1b;
  -webkit-transition: width 250ms;
  transition: width 250ms;
}

.c37::-moz-progress-bar {
  background-color: #ee7c1b;
}

.c37::-ms-fill {
  background-color: #ee7c1b;
  border: 0;
}

.c35 {
  border: none;
  width: 100%;
  height: inherit;
  line-height: inherit;
  font-family: inherit;
  font-size: inherit;
  color: inherit;
}

.c35:focus {
  outline: 0;
}

.c23 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: #555;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 3px 0 0 3px;
}

.c23:hover,
.c23:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c25 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: transparent;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 0 3px 3px 0;
}

.c25:hover,
.c25:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c22 {
  display: inline-block;
  margin-top: 10px;
  border: 1px solid #dbdbdb;
  border-radius: 4px;
  background-color: #f7f7f7;
  vertical-align: top;
}

.c9 {
  width: 16px;
  height: 16px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c24 {
  width: 22px;
  height: 22px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c26 {
  width: 18px;
  height: 18px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

@media all and (-ms-high-contrast:none),(-ms-high-contrast:active) {
  .c3::after {
    display: inline-block;
    content: "";
    min-height: 22px;
  }
}

<SnippetEditor
  baseUrl="http://example.org/"
  data={
    Object {
      "description": "Test description, %%replacement_variable%%",
      "slug": "test-slug",
      "title": "Test title",
    }
  }
  date=""
  descriptionEditorFieldPlaceholder="Modify your meta description by editing it right here"
  descriptionLengthProgress={
    Object {
      "actual": 0,
      "max": 156,
      "score": 0,
    }
  }
  hasPaperStyle={true}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "textComponent": "span",
    }
  }
  locale="en"
  mapEditorDataToPreview={null}
  mode="mobile"
  onChange={[MockFunction]}
  onChangeAnalysisData={[Function]}
  recommendedReplacementVariables={Array []}
  replacementVariables={
    Array [
      Object {
        "name": "title",
        "value": "Title!!!",
      },
      Object {
        "name": "excerpt",
        "value": "Excerpt!!!",
      },
    ]
  }
  titleLengthProgress={
    Object {
      "actual": 0,
      "max": 600,
      "score": 0,
    }
  }
>
  <ErrorBoundary>
    <div>
      <SnippetPreview
        activeField={null}
        breadcrumbs={null}
        date=""
        description="Test description, %%replacement_variable%%"
        hoveredField={null}
        isAmp={false}
        keyword=""
        locale="en"
        mode="mobile"
        onHover={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        title="Test title"
        url="example.org/test-slug"
      >
        <section>
          <div>
            <HelpTextWrapper
              className="yoast-help"
              helpText={
                Array [
                  "This is a rendering of what this post might look like in Google's search results. ",
                  <OutboundLink
                    href="https://yoa.st/snippet-preview"
                  >
                    Learn more about the Snippet Preview.
                  </OutboundLink>,
                ]
              }
              helpTextButtonLabel="Help on the Snippet Preview"
              panelMaxWidth="400px"
            >
              <HelpTextWrapper__HelpTextContainer
                className="yoast-help"
              >
                <div
                  className="yoast-help c0"
                >
                  <HelpTextWrapper__HelpTextButton
                    aria-controls={null}
                    aria-expanded={false}
                    aria-label="Help on the Snippet Preview"
                    className="yoast-help__button"
                    onClick={[Function]}
                  >
                    <Button
                      aria-controls={null}
                      aria-expanded={false}
                      aria-label="Help on the Snippet Preview"
                      className="yoast-help__button c1"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-controls={null}
                        aria-expanded={false}
                        aria-label="Help on the Snippet Preview"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="yoast-help__button c1 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-controls={null}
                          aria-expanded={false}
                          aria-label="Help on the Snippet Preview"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="yoast-help__button c1 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            aria-controls={null}
                            aria-expanded={false}
                            aria-label="Help on the Snippet Preview"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              aria-controls={null}
                              aria-expanded={false}
                              aria-label="Help on the Snippet Preview"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                aria-controls={null}
                                aria-expanded={false}
                                aria-label="Help on the Snippet Preview"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  aria-controls={null}
                                  aria-expanded={false}
                                  aria-label="Help on the Snippet Preview"
                                  className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <HelpTextWrapper__StyledSvg
                                    color="#646464"
                                    icon="question-circle"
                                    size="16px"
                                  >
                                    <SvgIcon
                                      className="c8"
                                      color="#646464"
                                      icon="question-circle"
                                      size="16px"
                                    >
                                      <SvgIcon__StyledSvg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-question-circle c8"
                                        fill="#646464"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="yoast-svg-icon yoast-svg-icon-question-circle c8 c9"
                                          fill="#646464"
                                          focusable="false"
                                          role="img"
                                          size="16px"
                                          viewBox="0 0 1792 1792"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M1024 1376v-192q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23-9t9-23zm256-672q0-88-55.5-163t-138.5-116-170-41q-243 0-371 213-15 24 8 42l132 100q7 6 19 6 16 0 25-12 53-68 86-92 34-24 86-24 48 0 85.5 26t37.5 59q0 38-20 61t-68 45q-63 28-115.5 86.5t-52.5 125.5v36q0 14 9 23t23 9h192q14 0 23-9t9-23q0-19 21.5-49.5t54.5-49.5q32-18 49-28.5t46-35 44.5-48 28-60.5 12.5-81zm384 192q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                          />
                                        </svg>
                                      </SvgIcon__StyledSvg>
                                    </SvgIcon>
                                  </HelpTextWrapper__StyledSvg>
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </HelpTextWrapper__HelpTextButton>
                  <YoastSlideToggle
                    duration={300}
                    isOpen={false}
                  >
                    <animations__YoastSlideToggleContainer
                      duration={300}
                    >
                      <div
                        className="c10"
                      >
                        <CSSTransition
                          classNames="slide"
                          in={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={true}
                        >
                          <Transition
                            appear={false}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={true}
                          />
                        </CSSTransition>
                      </div>
                    </animations__YoastSlideToggleContainer>
                  </YoastSlideToggle>
                </div>
              </HelpTextWrapper__HelpTextContainer>
            </HelpTextWrapper>
          </div>
          <SnippetPreview__MobileContainer
            padding={20}
            width={640}
          >
            <div
              className="c11"
              width={640}
            >
              <SnippetPreview__MobilePartContainer>
                <div
                  className="c12"
                >
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      SEO title preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__BaseTitle
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                  >
                    <div
                      className="c13"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                    >
                      <SnippetPreview__TitleBounded>
                        <SnippetPreview__Title
                          className="c14"
                        >
                          <div
                            className="c14 c15"
                          >
                            <SnippetPreview__TitleUnboundedMobile
                              innerRef={[Function]}
                            >
                              <span
                                className="c16"
                              >
                                Test title
                              </span>
                            </SnippetPreview__TitleUnboundedMobile>
                          </div>
                        </SnippetPreview__Title>
                      </SnippetPreview__TitleBounded>
                    </div>
                  </SnippetPreview__BaseTitle>
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      Url preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__BaseUrl>
                    <div
                      className="c17"
                    >
                      <SnippetPreview__BaseUrlOverflowContainer
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                      >
                        <div
                          className="c18"
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                        >
                          example.org â€º test-slug
                        </div>
                      </SnippetPreview__BaseUrlOverflowContainer>
                    </div>
                  </SnippetPreview__BaseUrl>
                </div>
              </SnippetPreview__MobilePartContainer>
              <SnippetPreview__Separator>
                <hr
                  className="c19"
                />
              </SnippetPreview__Separator>
              <SnippetPreview__MobilePartContainer>
                <div
                  className="c12"
                >
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      Meta description preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__MobileDescription
                    isDescriptionPlaceholder={false}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                  >
                    <SnippetPreview__DesktopDescription
                      className="c20"
                      isDescriptionPlaceholder={false}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                    >
                      <div
                        className="c20 c21"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                      >
                        <SnippetPreview__MobileDescription
                          innerRef={[Function]}
                          isDescriptionPlaceholder={false}
                        >
                          <SnippetPreview__DesktopDescription
                            className="c20"
                            innerRef={[Function]}
                            isDescriptionPlaceholder={false}
                          >
                            <div
                              className="c20 c21"
                            >
                              Test description, %%replacement_variable%%
                            </div>
                          </SnippetPreview__DesktopDescription>
                        </SnippetPreview__MobileDescription>
                      </div>
                    </SnippetPreview__DesktopDescription>
                  </SnippetPreview__MobileDescription>
                </div>
              </SnippetPreview__MobilePartContainer>
            </div>
          </SnippetPreview__MobileContainer>
        </section>
      </SnippetPreview>
      <ModeSwitcher
        active="mobile"
        onChange={[Function]}
      >
        <ModeSwitcher__Switcher>
          <div
            className="c22"
          >
            <ModeSwitcher__SwitcherButton
              aria-pressed={true}
              isActive={true}
              onClick={[Function]}
            >
              <Button
                aria-pressed={true}
                className="c23"
                isActive={true}
                onClick={[Function]}
              >
                <Button
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-pressed={true}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c23 c2"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  isActive={true}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <Button
                    activeBackgroundColor="#f7f7f7"
                    activeBorderColor="#888"
                    activeColor="#000"
                    aria-pressed={true}
                    backgroundColor="#f7f7f7"
                    borderColor="#ccc"
                    boxShadowColor="#ccc"
                    className="c23 c2 Button-kDSBcD c3"
                    focusBackgroundColor="#fff"
                    focusBorderColor="#0066cd"
                    focusColor="#000"
                    hoverBackgroundColor="#fff"
                    hoverBorderColor="#888"
                    hoverColor="#000"
                    isActive={true}
                    onClick={[Function]}
                    textColor="#555"
                    type="button"
                  >
                    <Button
                      activeBackgroundColor="#f7f7f7"
                      activeBorderColor="#888"
                      activeColor="#000"
                      aria-pressed={true}
                      backgroundColor="#f7f7f7"
                      borderColor="#ccc"
                      boxShadowColor="#ccc"
                      className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                      focusBackgroundColor="#fff"
                      focusBorderColor="#0066cd"
                      focusColor="#000"
                      hoverBackgroundColor="#fff"
                      hoverBorderColor="#888"
                      hoverColor="#000"
                      isActive={true}
                      onClick={[Function]}
                      textColor="#555"
                      type="button"
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-pressed={true}
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        isActive={true}
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button__BaseButton
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-pressed={true}
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          isActive={true}
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <button
                            aria-pressed={true}
                            className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                            onClick={[Function]}
                            type="button"
                          >
                            <SvgIcon
                              color="currentColor"
                              icon="mobile"
                              size="22px"
                            >
                              <SvgIcon__StyledSvg
                                aria-hidden={true}
                                className="yoast-svg-icon yoast-svg-icon-mobile"
                                fill="currentColor"
                                focusable="false"
                                role="img"
                                size="22px"
                                viewBox="0 0 1792 1792"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="yoast-svg-icon yoast-svg-icon-mobile c24"
                                  fill="currentColor"
                                  focusable="false"
                                  role="img"
                                  size="22px"
                                  viewBox="0 0 1792 1792"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M976 1408q0-33-23.5-56.5t-56.5-23.5-56.5 23.5-23.5 56.5 23.5 56.5 56.5 23.5 56.5-23.5 23.5-56.5zm208-160v-704q0-13-9.5-22.5t-22.5-9.5h-512q-13 0-22.5 9.5t-9.5 22.5v704q0 13 9.5 22.5t22.5 9.5h512q13 0 22.5-9.5t9.5-22.5zm-192-848q0-16-16-16h-160q-16 0-16 16t16 16h160q16 0 16-16zm288-16v1024q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-1024q0-52 38-90t90-38h512q52 0 90 38t38 90z"
                                  />
                                </svg>
                              </SvgIcon__StyledSvg>
                            </SvgIcon>
                            <ScreenReaderText>
                              <span
                                className="screen-reader-text"
                                style={
                                  Object {
                                    "clip": "rect(1px, 1px, 1px, 1px)",
                                    "height": "1px",
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "width": "1px",
                                  }
                                }
                              >
                                Mobile preview
                              </span>
                            </ScreenReaderText>
                          </button>
                        </Button__BaseButton>
                      </Button>
                    </Button>
                  </Button>
                </Button>
              </Button>
            </ModeSwitcher__SwitcherButton>
            <ModeSwitcher__SwitcherButton
              aria-pressed={false}
              isActive={false}
              onClick={[Function]}
            >
              <Button
                aria-pressed={false}
                className="c25"
                isActive={false}
                onClick={[Function]}
              >
                <Button
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-pressed={false}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c25 c2"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  isActive={false}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <Button
                    activeBackgroundColor="#f7f7f7"
                    activeBorderColor="#888"
                    activeColor="#000"
                    aria-pressed={false}
                    backgroundColor="#f7f7f7"
                    borderColor="#ccc"
                    boxShadowColor="#ccc"
                    className="c25 c2 Button-kDSBcD c3"
                    focusBackgroundColor="#fff"
                    focusBorderColor="#0066cd"
                    focusColor="#000"
                    hoverBackgroundColor="#fff"
                    hoverBorderColor="#888"
                    hoverColor="#000"
                    isActive={false}
                    onClick={[Function]}
                    textColor="#555"
                    type="button"
                  >
                    <Button
                      activeBackgroundColor="#f7f7f7"
                      activeBorderColor="#888"
                      activeColor="#000"
                      aria-pressed={false}
                      backgroundColor="#f7f7f7"
                      borderColor="#ccc"
                      boxShadowColor="#ccc"
                      className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                      focusBackgroundColor="#fff"
                      focusBorderColor="#0066cd"
                      focusColor="#000"
                      hoverBackgroundColor="#fff"
                      hoverBorderColor="#888"
                      hoverColor="#000"
                      isActive={false}
                      onClick={[Function]}
                      textColor="#555"
                      type="button"
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-pressed={false}
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        isActive={false}
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button__BaseButton
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-pressed={false}
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          isActive={false}
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <button
                            aria-pressed={false}
                            className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                            onClick={[Function]}
                            type="button"
                          >
                            <SvgIcon
                              color="currentColor"
                              icon="desktop"
                              size="18px"
                            >
                              <SvgIcon__StyledSvg
                                aria-hidden={true}
                                className="yoast-svg-icon yoast-svg-icon-desktop"
                                fill="currentColor"
                                focusable="false"
                                role="img"
                                size="18px"
                                viewBox="0 0 1792 1792"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="yoast-svg-icon yoast-svg-icon-desktop c26"
                                  fill="currentColor"
                                  focusable="false"
                                  role="img"
                                  size="18px"
                                  viewBox="0 0 1792 1792"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M1728 992v-832q0-13-9.5-22.5t-22.5-9.5h-1600q-13 0-22.5 9.5t-9.5 22.5v832q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5zm128-832v1088q0 66-47 113t-113 47h-544q0 37 16 77.5t32 71 16 43.5q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45q0-14 16-44t32-70 16-78h-544q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1600q66 0 113 47t47 113z"
                                  />
                                </svg>
                              </SvgIcon__StyledSvg>
                            </SvgIcon>
                            <ScreenReaderText>
                              <span
                                className="screen-reader-text"
                                style={
                                  Object {
                                    "clip": "rect(1px, 1px, 1px, 1px)",
                                    "height": "1px",
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "width": "1px",
                                  }
                                }
                              >
                                Desktop preview
                              </span>
                            </ScreenReaderText>
                          </button>
                        </Button__BaseButton>
                      </Button>
                    </Button>
                  </Button>
                </Button>
              </Button>
            </ModeSwitcher__SwitcherButton>
          </div>
        </ModeSwitcher__Switcher>
      </ModeSwitcher>
      <Button
        aria-expanded={true}
        innerRef={[Function]}
        onClick={[Function]}
      >
        <Button
          activeBackgroundColor="#f7f7f7"
          activeBorderColor="#888"
          activeColor="#000"
          aria-expanded={true}
          backgroundColor="#f7f7f7"
          borderColor="#ccc"
          boxShadowColor="#ccc"
          className="c27"
          focusBackgroundColor="#fff"
          focusBorderColor="#0066cd"
          focusColor="#000"
          hoverBackgroundColor="#fff"
          hoverBorderColor="#888"
          hoverColor="#000"
          innerRef={[Function]}
          onClick={[Function]}
          textColor="#555"
          type="button"
        >
          <Button
            activeBackgroundColor="#f7f7f7"
            activeBorderColor="#888"
            activeColor="#000"
            aria-expanded={true}
            backgroundColor="#f7f7f7"
            borderColor="#ccc"
            boxShadowColor="#ccc"
            className="c27 Button-kDSBcD c3"
            focusBackgroundColor="#fff"
            focusBorderColor="#0066cd"
            focusColor="#000"
            hoverBackgroundColor="#fff"
            hoverBorderColor="#888"
            hoverColor="#000"
            innerRef={[Function]}
            onClick={[Function]}
            textColor="#555"
            type="button"
          >
            <Button
              activeBackgroundColor="#f7f7f7"
              activeBorderColor="#888"
              activeColor="#000"
              aria-expanded={true}
              backgroundColor="#f7f7f7"
              borderColor="#ccc"
              boxShadowColor="#ccc"
              className="c27 Button-kDSBcD c3 Button-kDSBcD c4"
              focusBackgroundColor="#fff"
              focusBorderColor="#0066cd"
              focusColor="#000"
              hoverBackgroundColor="#fff"
              hoverBorderColor="#888"
              hoverColor="#000"
              innerRef={[Function]}
              onClick={[Function]}
              textColor="#555"
              type="button"
            >
              <Button
                activeBackgroundColor="#f7f7f7"
                activeBorderColor="#888"
                activeColor="#000"
                aria-expanded={true}
                backgroundColor="#f7f7f7"
                borderColor="#ccc"
                boxShadowColor="#ccc"
                className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                focusBackgroundColor="#fff"
                focusBorderColor="#0066cd"
                focusColor="#000"
                hoverBackgroundColor="#fff"
                hoverBorderColor="#888"
                hoverColor="#000"
                innerRef={[Function]}
                onClick={[Function]}
                textColor="#555"
                type="button"
              >
                <Button__BaseButton
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-expanded={true}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  innerRef={[Function]}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <button
                    aria-expanded={true}
                    className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                    onClick={[Function]}
                    type="button"
                  >
                    <SvgIcon
                      icon="edit"
                      size="16px"
                    >
                      <SvgIcon__StyledSvg
                        aria-hidden={true}
                        className="yoast-svg-icon yoast-svg-icon-edit"
                        focusable="false"
                        role="img"
                        size="16px"
                        viewBox="0 0 1792 1792"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <svg
                          aria-hidden={true}
                          className="yoast-svg-icon yoast-svg-icon-edit c9"
                          focusable="false"
                          role="img"
                          size="16px"
                          viewBox="0 0 1792 1792"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M491 1536l91-91-235-235-91 91v107h128v128h107zm523-928q0-22-22-22-10 0-17 7l-542 542q-7 7-7 17 0 22 22 22 10 0 17-7l542-542q7-7 7-17zm-54-192l416 416-832 832h-416v-416zm683 96q0 53-37 90l-166 166-416-416 166-165q36-38 90-38 53 0 91 38l235 234q37 39 37 91z"
                          />
                        </svg>
                      </SvgIcon__StyledSvg>
                    </SvgIcon>
                    Edit snippet
                  </button>
                </Button__BaseButton>
              </Button>
            </Button>
          </Button>
        </Button>
      </Button>
      <SnippetEditorFields
        activeField={null}
        containerPadding="0 20px"
        data={
          Object {
            "description": "Test description, %%replacement_variable%%",
            "slug": "test-slug",
            "title": "Test title",
          }
        }
        descriptionEditorFieldPlaceholder="Modify your meta description by editing it right here"
        descriptionLengthProgress={
          Object {
            "actual": 42,
            "max": 156,
            "score": 6,
          }
        }
        hoveredField={null}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        recommendedReplacementVariables={Array []}
        replacementVariables={
          Array [
            Object {
              "name": "title",
              "value": "Title!!!",
            },
            Object {
              "name": "excerpt",
              "value": "Excerpt!!!",
            },
          ]
        }
        titleLengthProgress={
          Object {
            "actual": 0,
            "max": 600,
            "score": 1,
          }
        }
      >
        <Shared__StyledEditor
          padding="0 20px"
        >
          <section
            className="c28"
          >
            <Shared__FormSection>
              <div
                className="c29"
              >
                <ReplacementVariableEditor
                  content="Test title"
                  editorRef={[Function]}
                  fieldId="snippet-editor-field-title"
                  isActive={false}
                  isHovered={false}
                  label="SEO title"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  recommendedReplacementVariables={Array []}
                  replacementVariables={
                    Array [
                      Object {
                        "name": "title",
                        "value": "Title!!!",
                      },
                      Object {
                        "name": "excerpt",
                        "value": "Excerpt!!!",
                      },
                    ]
                  }
                  withCaret={true}
                >
                  <Shared__SimulatedLabel
                    id="34"
                    onClick={[Function]}
                  >
                    <div
                      className="c30"
                      id="34"
                      onClick={[Function]}
                    >
                      SEO title
                    </div>
                  </Shared__SimulatedLabel>
                  <Shared__TriggerReplacementVariableSuggestionsButton
                    onClick={[Function]}
                  >
                    <Button
                      className="c31"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c31 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c31 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <SvgIcon
                                    icon="plus-circle"
                                    size="16px"
                                  >
                                    <SvgIcon__StyledSvg
                                      aria-hidden={true}
                                      className="yoast-svg-icon yoast-svg-icon-plus-circle"
                                      focusable="false"
                                      role="img"
                                      size="16px"
                                      viewBox="0 0 1792 1792"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-plus-circle c9"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M1344 960v-128q0-26-19-45t-45-19h-256v-256q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v256h-256q-26 0-45 19t-19 45v128q0 26 19 45t45 19h256v256q0 26 19 45t45 19h128q26 0 45-19t19-45v-256h256q26 0 45-19t19-45zm320-64q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                        />
                                      </svg>
                                    </SvgIcon__StyledSvg>
                                  </SvgIcon>
                                  Insert snippet variable
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </Shared__TriggerReplacementVariableSuggestionsButton>
                  <Shared__InputContainer
                    id="snippet-editor-field-title"
                    isActive={false}
                    isHovered={false}
                    onClick={[Function]}
                  >
                    <div
                      className="c32"
                      id="snippet-editor-field-title"
                      onClick={[Function]}
                    >
                      <Wrapper
                        ariaLabelledBy="34"
                        content="Test title"
                        innerRef={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        recommendedReplacementVariables={Array []}
                        replacementVariables={
                          Array [
                            Object {
                              "name": "title",
                              "value": "Title!!!",
                            },
                            Object {
                              "name": "excerpt",
                              "value": "Excerpt!!!",
                            },
                          ]
                        }
                      >
                        <ReplacementVariableEditorStandalone
                          ariaLabelledBy="34"
                          content="Test title"
                          innerRef={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          recommendedReplacementVariables={Array []}
                          replacementVariables={
                            Array [
                              Object {
                                "name": "title",
                                "value": "Title!!!",
                              },
                              Object {
                                "name": "excerpt",
                                "value": "Excerpt!!!",
                              },
                            ]
                          }
                        >
                          <div />
                        </ReplacementVariableEditorStandalone>
                      </Wrapper>
                    </div>
                  </Shared__InputContainer>
                </ReplacementVariableEditor>
                <ProgressBar
                  aria-hidden="true"
                  backgroundColor="#f7f7f7"
                  borderColor="#ddd"
                  max={600}
                  progressColor="#dc3232"
                  value={0}
                >
                  <progress
                    aria-hidden="true"
                    className="c33"
                    max={600}
                    value={0}
                  />
                </ProgressBar>
              </div>
            </Shared__FormSection>
            <Shared__FormSection>
              <div
                className="c29"
              >
                <Shared__SimulatedLabel
                  id="snippet-editor-field-33-slug"
                  onClick={[Function]}
                >
                  <div
                    className="c30"
                    id="snippet-editor-field-33-slug"
                    onClick={[Function]}
                  >
                    Slug
                  </div>
                </Shared__SimulatedLabel>
                <Shared__InputContainer
                  isActive={false}
                  isHovered={false}
                  onClick={[Function]}
                >
                  <div
                    className="c34"
                    onClick={[Function]}
                  >
                    <SnippetEditorFields__SlugInput
                      aria-labelledby="snippet-editor-field-33-slug"
                      id="snippet-editor-field-slug"
                      innerRef={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      value="test-slug"
                    >
                      <input
                        aria-labelledby="snippet-editor-field-33-slug"
                        className="c35"
                        id="snippet-editor-field-slug"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        value="test-slug"
                      />
                    </SnippetEditorFields__SlugInput>
                  </div>
                </Shared__InputContainer>
              </div>
            </Shared__FormSection>
            <Shared__FormSection>
              <div
                className="c29"
              >
                <ReplacementVariableEditor
                  content="Test description, %%replacement_variable%%"
                  editorRef={[Function]}
                  fieldId="snippet-editor-field-description"
                  isActive={false}
                  isHovered={false}
                  label="Meta description"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  placeholder="Modify your meta description by editing it right here"
                  recommendedReplacementVariables={Array []}
                  replacementVariables={
                    Array [
                      Object {
                        "name": "title",
                        "value": "Title!!!",
                      },
                      Object {
                        "name": "excerpt",
                        "value": "Excerpt!!!",
                      },
                    ]
                  }
                  type="description"
                  withCaret={true}
                >
                  <Shared__SimulatedLabel
                    id="35"
                    onClick={[Function]}
                  >
                    <div
                      className="c30"
                      id="35"
                      onClick={[Function]}
                    >
                      Meta description
                    </div>
                  </Shared__SimulatedLabel>
                  <Shared__TriggerReplacementVariableSuggestionsButton
                    onClick={[Function]}
                  >
                    <Button
                      className="c31"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c31 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c31 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <SvgIcon
                                    icon="plus-circle"
                                    size="16px"
                                  >
                                    <SvgIcon__StyledSvg
                                      aria-hidden={true}
                                      className="yoast-svg-icon yoast-svg-icon-plus-circle"
                                      focusable="false"
                                      role="img"
                                      size="16px"
                                      viewBox="0 0 1792 1792"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-plus-circle c9"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M1344 960v-128q0-26-19-45t-45-19h-256v-256q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v256h-256q-26 0-45 19t-19 45v128q0 26 19 45t45 19h256v256q0 26 19 45t45 19h128q26 0 45-19t19-45v-256h256q26 0 45-19t19-45zm320-64q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                        />
                                      </svg>
                                    </SvgIcon__StyledSvg>
                                  </SvgIcon>
                                  Insert snippet variable
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </Shared__TriggerReplacementVariableSuggestionsButton>
                  <Shared__InputContainer
                    id="snippet-editor-field-description"
                    isActive={false}
                    isHovered={false}
                    onClick={[Function]}
                  >
                    <div
                      className="c36"
                      id="snippet-editor-field-description"
                      onClick={[Function]}
                    >
                      <Wrapper
                        ariaLabelledBy="35"
                        content="Test description, %%replacement_variable%%"
                        innerRef={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        placeholder="Modify your meta description by editing it right here"
                        recommendedReplacementVariables={Array []}
                        replacementVariables={
                          Array [
                            Object {
                              "name": "title",
                              "value": "Title!!!",
                            },
                            Object {
                              "name": "excerpt",
                              "value": "Excerpt!!!",
                            },
                          ]
                        }
                      >
                        <ReplacementVariableEditorStandalone
                          ariaLabelledBy="35"
                          content="Test description, %%replacement_variable%%"
                          innerRef={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Modify your meta description by editing it right here"
                          recommendedReplacementVariables={Array []}
                          replacementVariables={
                            Array [
                              Object {
                                "name": "title",
                                "value": "Title!!!",
                              },
                              Object {
                                "name": "excerpt",
                                "value": "Excerpt!!!",
                              },
                            ]
                          }
                        >
                          <div />
                        </ReplacementVariableEditorStandalone>
                      </Wrapper>
                    </div>
                  </Shared__InputContainer>
                </ReplacementVariableEditor>
                <ProgressBar
                  aria-hidden="true"
                  backgroundColor="#f7f7f7"
                  borderColor="#ddd"
                  max={156}
                  progressColor="#ee7c1b"
                  value={42}
                >
                  <progress
                    aria-hidden="true"
                    className="c37"
                    max={156}
                    value={42}
                  />
                </ProgressBar>
              </div>
            </Shared__FormSection>
          </section>
        </Shared__StyledEditor>
      </SnippetEditorFields>
      <Button
        onClick={[Function]}
      >
        <Button
          activeBackgroundColor="#f7f7f7"
          activeBorderColor="#888"
          activeColor="#000"
          backgroundColor="#f7f7f7"
          borderColor="#ccc"
          boxShadowColor="#ccc"
          className="c38"
          focusBackgroundColor="#fff"
          focusBorderColor="#0066cd"
          focusColor="#000"
          hoverBackgroundColor="#fff"
          hoverBorderColor="#888"
          hoverColor="#000"
          onClick={[Function]}
          textColor="#555"
          type="button"
        >
          <Button
            activeBackgroundColor="#f7f7f7"
            activeBorderColor="#888"
            activeColor="#000"
            backgroundColor="#f7f7f7"
            borderColor="#ccc"
            boxShadowColor="#ccc"
            className="c38 Button-kDSBcD c3"
            focusBackgroundColor="#fff"
            focusBorderColor="#0066cd"
            focusColor="#000"
            hoverBackgroundColor="#fff"
            hoverBorderColor="#888"
            hoverColor="#000"
            onClick={[Function]}
            textColor="#555"
            type="button"
          >
            <Button
              activeBackgroundColor="#f7f7f7"
              activeBorderColor="#888"
              activeColor="#000"
              backgroundColor="#f7f7f7"
              borderColor="#ccc"
              boxShadowColor="#ccc"
              className="c38 Button-kDSBcD c3 Button-kDSBcD c4"
              focusBackgroundColor="#fff"
              focusBorderColor="#0066cd"
              focusColor="#000"
              hoverBackgroundColor="#fff"
              hoverBorderColor="#888"
              hoverColor="#000"
              onClick={[Function]}
              textColor="#555"
              type="button"
            >
              <Button
                activeBackgroundColor="#f7f7f7"
                activeBorderColor="#888"
                activeColor="#000"
                backgroundColor="#f7f7f7"
                borderColor="#ccc"
                boxShadowColor="#ccc"
                className="c38 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                focusBackgroundColor="#fff"
                focusBorderColor="#0066cd"
                focusColor="#000"
                hoverBackgroundColor="#fff"
                hoverBorderColor="#888"
                hoverColor="#000"
                onClick={[Function]}
                textColor="#555"
                type="button"
              >
                <Button__BaseButton
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c38 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <button
                    className="c38 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                    onClick={[Function]}
                    type="button"
                  >
                    Close snippet editor
                  </button>
                </Button__BaseButton>
              </Button>
            </Button>
          </Button>
        </Button>
      </Button>
    </div>
  </ErrorBoundary>
</SnippetEditor>
`;

exports[`SnippetEditor passes the date prop 1`] = `
.c7 {
  color: #555;
  border-color: #ccc;
  background: #f7f7f7;
  box-shadow: 0 1px 0 rgba( 204,204,204,1 );
}

.c2 {
  font-size: 0.8rem;
}

.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  vertical-align: middle;
  border-width: 1px;
  border-style: solid;
  margin: 0;
  padding: 4px 10px;
  border-radius: 3px;
  cursor: pointer;
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  font-weight: inherit;
  text-align: left;
  overflow: visible;
  min-height: 32px;
}

.c3 svg {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c4:hover {
  color: #000;
  background-color: #fff;
  border-color: #888;
}

.c5::-moz-focus-inner {
  border-width: 0;
}

.c5:focus {
  outline: none;
  border-color: #0066cd;
  color: #000;
  background-color: #fff;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c6:active {
  color: #000;
  background-color: #f7f7f7;
  border-color: #888;
  box-shadow: inset 0 2px 5px -3px rgba( 0,0,0,0.5 );
}

.c28 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 10px 0 0 4px;
  fill: #555;
  padding-left: 8px;
}

.c28 svg {
  margin-right: 7px;
}

.c10 >:first-child {
  overflow: hidden;
  -webkit-transition: height 300ms ease-out;
  transition: height 300ms ease-out;
}

.c0 {
  max-width: 600px;
  font-weight: normal;
  margin: 0 20px 0 25px;
}

.c1 {
  min-width: 14px;
  min-height: 14px;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  border: 1px solid transparent;
  box-shadow: none;
  display: block;
  margin: -44px -10px 10px 0;
  background-color: transparent;
  float: right;
  padding: 3px 0 0 6px;
}

.c1:hover {
  color: #0066cd;
}

.c1:focus {
  border: 1px solid #0066cd;
  outline: none;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c1:focus svg {
  fill: #0066cd;
  color: #0066cd;
}

.c1:active {
  box-shadow: none;
}

.c8:hover {
  fill: #0066cd;
}

.c11 {
  border-bottom: 1px hidden #fff;
  border-radius: 2px;
  box-shadow: 0 1px 2px rgba(0,0,0,.2);
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  max-width: 600px;
  box-sizing: border-box;
  font-size: 14px;
}

.c13 {
  cursor: pointer;
  position: relative;
}

.c15 {
  color: #1e0fbe;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-size: 18px;
  line-height: 1.2;
  font-weight: normal;
  margin: 0;
  display: inline-block;
  overflow: hidden;
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c14 {
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c16 {
  display: inline-block;
  font-size: 16px;
  line-height: 1.2em;
  max-height: 2.4em;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c17 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
}

.c18 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%;
}

.c21 {
  color: #545454;
  cursor: pointer;
  position: relative;
  max-width: 600px;
  font-size: 13px;
}

.c20 {
  font-size: 14px;
  line-height: 20px;
}

.c12 {
  padding: 8px 16px;
}

.c22 {
  color: #808080;
}

.c19 {
  border: 0;
  border-bottom: 1px solid #DFE1E5;
  margin: 0;
}

.c24 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: #555;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 3px 0 0 3px;
}

.c24:hover,
.c24:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c26 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: transparent;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 0 3px 3px 0;
}

.c26:hover,
.c26:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c23 {
  display: inline-block;
  margin-top: 10px;
  border: 1px solid #dbdbdb;
  border-radius: 4px;
  background-color: #f7f7f7;
  vertical-align: top;
}

.c9 {
  width: 16px;
  height: 16px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c25 {
  width: 22px;
  height: 22px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c27 {
  width: 18px;
  height: 18px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

@media all and (-ms-high-contrast:none),(-ms-high-contrast:active) {
  .c3::after {
    display: inline-block;
    content: "";
    min-height: 22px;
  }
}

<div>
  <section>
    <div>
      <div
        className="yoast-help c0"
      >
        <button
          aria-controls={null}
          aria-expanded={false}
          aria-label="Help on the Snippet Preview"
          className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
          onClick={[Function]}
          type="button"
        >
          <svg
            aria-hidden={true}
            className="yoast-svg-icon yoast-svg-icon-question-circle c8 c9"
            fill="#646464"
            focusable="false"
            role="img"
            size="16px"
            viewBox="0 0 1792 1792"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M1024 1376v-192q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23-9t9-23zm256-672q0-88-55.5-163t-138.5-116-170-41q-243 0-371 213-15 24 8 42l132 100q7 6 19 6 16 0 25-12 53-68 86-92 34-24 86-24 48 0 85.5 26t37.5 59q0 38-20 61t-68 45q-63 28-115.5 86.5t-52.5 125.5v36q0 14 9 23t23 9h192q14 0 23-9t9-23q0-19 21.5-49.5t54.5-49.5q32-18 49-28.5t46-35 44.5-48 28-60.5 12.5-81zm384 192q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
            />
          </svg>
        </button>
        <div
          className="c10"
        />
      </div>
    </div>
    <div
      className="c11"
      onMouseLeave={undefined}
      width={640}
    >
      <div
        className="c12"
      >
        <span
          className="screen-reader-text"
          style={
            Object {
              "clip": "rect(1px, 1px, 1px, 1px)",
              "height": "1px",
              "overflow": "hidden",
              "position": "absolute",
              "width": "1px",
            }
          }
        >
          SEO title preview:
        </span>
        <div
          className="c13"
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
        >
          <div
            className="c14 c15"
          >
            <span
              className="c16"
            >
              Test title
            </span>
          </div>
        </div>
        <span
          className="screen-reader-text"
          style={
            Object {
              "clip": "rect(1px, 1px, 1px, 1px)",
              "height": "1px",
              "overflow": "hidden",
              "position": "absolute",
              "width": "1px",
            }
          }
        >
          Url preview:
        </span>
        <div
          className="c17"
        >
          <div
            className="c18"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
          >
            example.org â€º test-slug
          </div>
        </div>
      </div>
      <hr
        className="c19"
      />
      <div
        className="c12"
      >
        <span
          className="screen-reader-text"
          style={
            Object {
              "clip": "rect(1px, 1px, 1px, 1px)",
              "height": "1px",
              "overflow": "hidden",
              "position": "absolute",
              "width": "1px",
            }
          }
        >
          Meta description preview:
        </span>
        <div
          className="c20 c21"
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
        >
          <div
            className="c20 c21"
          >
            <span
              className="c22"
            >
              date string
               - 
            </span>
            Test description, %%replacement_variable%%
          </div>
        </div>
      </div>
    </div>
  </section>
  <div
    className="c23"
  >
    <button
      aria-pressed={true}
      className="c24 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
      onClick={[Function]}
      type="button"
    >
      <svg
        aria-hidden={true}
        className="yoast-svg-icon yoast-svg-icon-mobile c25"
        fill="currentColor"
        focusable="false"
        role="img"
        size="22px"
        viewBox="0 0 1792 1792"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M976 1408q0-33-23.5-56.5t-56.5-23.5-56.5 23.5-23.5 56.5 23.5 56.5 56.5 23.5 56.5-23.5 23.5-56.5zm208-160v-704q0-13-9.5-22.5t-22.5-9.5h-512q-13 0-22.5 9.5t-9.5 22.5v704q0 13 9.5 22.5t22.5 9.5h512q13 0 22.5-9.5t9.5-22.5zm-192-848q0-16-16-16h-160q-16 0-16 16t16 16h160q16 0 16-16zm288-16v1024q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-1024q0-52 38-90t90-38h512q52 0 90 38t38 90z"
        />
      </svg>
      <span
        className="screen-reader-text"
        style={
          Object {
            "clip": "rect(1px, 1px, 1px, 1px)",
            "height": "1px",
            "overflow": "hidden",
            "position": "absolute",
            "width": "1px",
          }
        }
      >
        Mobile preview
      </span>
    </button>
    <button
      aria-pressed={false}
      className="c26 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
      onClick={[Function]}
      type="button"
    >
      <svg
        aria-hidden={true}
        className="yoast-svg-icon yoast-svg-icon-desktop c27"
        fill="currentColor"
        focusable="false"
        role="img"
        size="18px"
        viewBox="0 0 1792 1792"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M1728 992v-832q0-13-9.5-22.5t-22.5-9.5h-1600q-13 0-22.5 9.5t-9.5 22.5v832q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5zm128-832v1088q0 66-47 113t-113 47h-544q0 37 16 77.5t32 71 16 43.5q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45q0-14 16-44t32-70 16-78h-544q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1600q66 0 113 47t47 113z"
        />
      </svg>
      <span
        className="screen-reader-text"
        style={
          Object {
            "clip": "rect(1px, 1px, 1px, 1px)",
            "height": "1px",
            "overflow": "hidden",
            "position": "absolute",
            "width": "1px",
          }
        }
      >
        Desktop preview
      </span>
    </button>
  </div>
  <button
    aria-expanded={false}
    className="c28 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
    onClick={[Function]}
    type="button"
  >
    <svg
      aria-hidden={true}
      className="yoast-svg-icon yoast-svg-icon-edit c9"
      fill={undefined}
      focusable="false"
      role="img"
      size="16px"
      viewBox="0 0 1792 1792"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M491 1536l91-91-235-235-91 91v107h128v128h107zm523-928q0-22-22-22-10 0-17 7l-542 542q-7 7-7 17 0 22 22 22 10 0 17-7l542-542q7-7 7-17zm-54-192l416 416-832 832h-416v-416zm683 96q0 53-37 90l-166 166-416-416 166-165q36-38 90-38 53 0 91 38l235 234q37 39 37 91z"
      />
    </svg>
    Edit snippet
  </button>
</div>
`;

exports[`SnippetEditor removes the highlight from the hovered field on calling onMouseLeave() 1`] = `
<ErrorBoundary>
  <div>
    <SnippetPreview
      activeField={null}
      breadcrumbs={null}
      date=""
      description="Test description, %%replacement_variable%%"
      hoveredField={null}
      isAmp={false}
      keyword=""
      locale="en"
      mode="mobile"
      onHover={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      title="Test title"
      url="example.org/test-slug"
    />
    <ModeSwitcher
      active="mobile"
      onChange={[Function]}
    />
    <Button
      aria-expanded={true}
      innerRef={[Function]}
      onClick={[Function]}
    >
      <SvgIcon
        icon="edit"
        size="16px"
      />
      Edit snippet
    </Button>
    <React.Fragment>
      <SnippetEditorFields
        activeField={null}
        containerPadding="0 20px"
        data={
          Object {
            "description": "Test description, %%replacement_variable%%",
            "slug": "test-slug",
            "title": "Test title",
          }
        }
        descriptionEditorFieldPlaceholder="Modify your meta description by editing it right here"
        descriptionLengthProgress={
          Object {
            "actual": 42,
            "max": 156,
            "score": 6,
          }
        }
        hoveredField={null}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        recommendedReplacementVariables={Array []}
        replacementVariables={Array []}
        titleLengthProgress={
          Object {
            "actual": 0,
            "max": 600,
            "score": 1,
          }
        }
      />
      <Button
        onClick={[Function]}
      >
        Close snippet editor
      </Button>
    </React.Fragment>
  </div>
</ErrorBoundary>
`;

exports[`SnippetEditor removes the highlight when calling unsetFieldFocus 1`] = `
.c7 {
  color: #555;
  border-color: #ccc;
  background: #f7f7f7;
  box-shadow: 0 1px 0 rgba( 204,204,204,1 );
}

.c2 {
  font-size: 0.8rem;
}

.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  vertical-align: middle;
  border-width: 1px;
  border-style: solid;
  margin: 0;
  padding: 4px 10px;
  border-radius: 3px;
  cursor: pointer;
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  font-weight: inherit;
  text-align: left;
  overflow: visible;
  min-height: 32px;
}

.c3 svg {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c4:hover {
  color: #000;
  background-color: #fff;
  border-color: #888;
}

.c5::-moz-focus-inner {
  border-width: 0;
}

.c5:focus {
  outline: none;
  border-color: #0066cd;
  color: #000;
  background-color: #fff;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c6:active {
  color: #000;
  background-color: #f7f7f7;
  border-color: #888;
  box-shadow: inset 0 2px 5px -3px rgba( 0,0,0,0.5 );
}

.c27 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 10px 0 0 4px;
  fill: #555;
  padding-left: 8px;
}

.c27 svg {
  margin-right: 7px;
}

.c38 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin-top: 24px;
}

.c10 >:first-child {
  overflow: hidden;
  -webkit-transition: height 300ms ease-out;
  transition: height 300ms ease-out;
}

.c0 {
  max-width: 600px;
  font-weight: normal;
  margin: 0 20px 0 25px;
}

.c1 {
  min-width: 14px;
  min-height: 14px;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  border: 1px solid transparent;
  box-shadow: none;
  display: block;
  margin: -44px -10px 10px 0;
  background-color: transparent;
  float: right;
  padding: 3px 0 0 6px;
}

.c1:hover {
  color: #0066cd;
}

.c1:focus {
  border: 1px solid #0066cd;
  outline: none;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c1:focus svg {
  fill: #0066cd;
  color: #0066cd;
}

.c1:active {
  box-shadow: none;
}

.c8:hover {
  fill: #0066cd;
}

.c32 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
}

.c32 .public-DraftStyleDefault-block {
  line-height: 24px;
}

.c32::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c34 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
}

.c34::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c36 {
  -webkit-flex: 0 1 100%;
  -ms-flex: 0 1 100%;
  flex: 0 1 100%;
  border: 1px solid #ddd;
  padding: 3px 5px;
  box-sizing: border-box;
  box-shadow: inset 0 1px 2px rgba(0,0,0,.07);
  background-color: #fff;
  color: #32373c;
  outline: 0;
  -webkit-transition: 50ms border-color ease-in-out;
  transition: 50ms border-color ease-in-out;
  position: relative;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  font-size: 14px;
  cursor: text;
  min-height: 72px;
  padding: 2px 6px;
  line-height: 24px;
}

.c36 .public-DraftEditorPlaceholder-root {
  color: #646464;
}

.c36 .public-DraftEditorPlaceholder-hasFocus {
  color: #646464;
}

.c36::before {
  display: block;
  position: absolute;
  top: -1px;
  left: -25px;
  width: 24px;
  height: 24px;
  background-image: url( data:image/svg+xml;charset=utf8,%3Csvg%20width%3D%221792%22%20height%3D%221792%22%20viewBox%3D%220%200%201792%201792%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22transparent%22%20d%3D%22M1152%20896q0%2026-19%2045l-448%20448q-19%2019-45%2019t-45-19-19-45v-896q0-26%2019-45t45-19%2045%2019l448%20448q19%2019%2019%2045z%22%20%2F%3E%3C%2Fsvg%3E );
  background-size: 25px;
  content: "";
}

.c29 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin: 24px 0 0 0;
}

.c28 {
  padding: 0 20px;
}

.c30 {
  -webkit-flex: 1 1 200px;
  -ms-flex: 1 1 200px;
  flex: 1 1 200px;
  min-width: 200px;
  cursor: pointer;
  font-size: 16px;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 4px 0;
}

.c31 {
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  padding-left: 8px;
  height: 33px;
  border: 1px solid #dbdbdb;
  font-size: 13px;
}

.c31 svg {
  margin-right: 7px;
  fill: #555;
}

.c11 {
  border-bottom: 1px hidden #fff;
  border-radius: 2px;
  box-shadow: 0 1px 2px rgba(0,0,0,.2);
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  max-width: 600px;
  box-sizing: border-box;
  font-size: 14px;
}

.c13 {
  cursor: pointer;
  position: relative;
}

.c15 {
  color: #1e0fbe;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-size: 18px;
  line-height: 1.2;
  font-weight: normal;
  margin: 0;
  display: inline-block;
  overflow: hidden;
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c14 {
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c16 {
  display: inline-block;
  font-size: 16px;
  line-height: 1.2em;
  max-height: 2.4em;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c17 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
}

.c18 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%;
}

.c21 {
  color: #545454;
  cursor: pointer;
  position: relative;
  max-width: 600px;
  font-size: 13px;
}

.c20 {
  font-size: 14px;
  line-height: 20px;
}

.c12 {
  padding: 8px 16px;
}

.c19 {
  border: 0;
  border-bottom: 1px solid #DFE1E5;
  margin: 0;
}

.c33 {
  box-sizing: border-box;
  width: 100%;
  height: 8px;
  display: block;
  margin-top: 8px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #f7f7f7;
  border: 1px solid #ddd;
}

.c33::-webkit-progress-bar {
  background-color: #f7f7f7;
}

.c33::-webkit-progress-value {
  background-color: #dc3232;
  -webkit-transition: width 250ms;
  transition: width 250ms;
}

.c33::-moz-progress-bar {
  background-color: #dc3232;
}

.c33::-ms-fill {
  background-color: #dc3232;
  border: 0;
}

.c37 {
  box-sizing: border-box;
  width: 100%;
  height: 8px;
  display: block;
  margin-top: 8px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #f7f7f7;
  border: 1px solid #ddd;
}

.c37::-webkit-progress-bar {
  background-color: #f7f7f7;
}

.c37::-webkit-progress-value {
  background-color: #ee7c1b;
  -webkit-transition: width 250ms;
  transition: width 250ms;
}

.c37::-moz-progress-bar {
  background-color: #ee7c1b;
}

.c37::-ms-fill {
  background-color: #ee7c1b;
  border: 0;
}

.c35 {
  border: none;
  width: 100%;
  height: inherit;
  line-height: inherit;
  font-family: inherit;
  font-size: inherit;
  color: inherit;
}

.c35:focus {
  outline: 0;
}

.c23 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: #555;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 3px 0 0 3px;
}

.c23:hover,
.c23:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c25 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: transparent;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 0 3px 3px 0;
}

.c25:hover,
.c25:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c22 {
  display: inline-block;
  margin-top: 10px;
  border: 1px solid #dbdbdb;
  border-radius: 4px;
  background-color: #f7f7f7;
  vertical-align: top;
}

.c9 {
  width: 16px;
  height: 16px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c24 {
  width: 22px;
  height: 22px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c26 {
  width: 18px;
  height: 18px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

@media all and (-ms-high-contrast:none),(-ms-high-contrast:active) {
  .c3::after {
    display: inline-block;
    content: "";
    min-height: 22px;
  }
}

<SnippetEditor
  baseUrl="http://example.org/"
  data={
    Object {
      "description": "Test description, %%replacement_variable%%",
      "slug": "test-slug",
      "title": "Test title",
    }
  }
  date=""
  descriptionEditorFieldPlaceholder="Modify your meta description by editing it right here"
  descriptionLengthProgress={
    Object {
      "actual": 0,
      "max": 156,
      "score": 0,
    }
  }
  hasPaperStyle={true}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "textComponent": "span",
    }
  }
  locale="en"
  mapEditorDataToPreview={null}
  mode="mobile"
  onChange={[MockFunction]}
  onChangeAnalysisData={[Function]}
  recommendedReplacementVariables={Array []}
  replacementVariables={Array []}
  titleLengthProgress={
    Object {
      "actual": 0,
      "max": 600,
      "score": 0,
    }
  }
>
  <ErrorBoundary>
    <div>
      <SnippetPreview
        activeField={null}
        breadcrumbs={null}
        date=""
        description="Test description, %%replacement_variable%%"
        hoveredField={null}
        isAmp={false}
        keyword=""
        locale="en"
        mode="mobile"
        onHover={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        title="Test title"
        url="example.org/test-slug"
      >
        <section>
          <div>
            <HelpTextWrapper
              className="yoast-help"
              helpText={
                Array [
                  "This is a rendering of what this post might look like in Google's search results. ",
                  <OutboundLink
                    href="https://yoa.st/snippet-preview"
                  >
                    Learn more about the Snippet Preview.
                  </OutboundLink>,
                ]
              }
              helpTextButtonLabel="Help on the Snippet Preview"
              panelMaxWidth="400px"
            >
              <HelpTextWrapper__HelpTextContainer
                className="yoast-help"
              >
                <div
                  className="yoast-help c0"
                >
                  <HelpTextWrapper__HelpTextButton
                    aria-controls={null}
                    aria-expanded={false}
                    aria-label="Help on the Snippet Preview"
                    className="yoast-help__button"
                    onClick={[Function]}
                  >
                    <Button
                      aria-controls={null}
                      aria-expanded={false}
                      aria-label="Help on the Snippet Preview"
                      className="yoast-help__button c1"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-controls={null}
                        aria-expanded={false}
                        aria-label="Help on the Snippet Preview"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="yoast-help__button c1 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-controls={null}
                          aria-expanded={false}
                          aria-label="Help on the Snippet Preview"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="yoast-help__button c1 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            aria-controls={null}
                            aria-expanded={false}
                            aria-label="Help on the Snippet Preview"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              aria-controls={null}
                              aria-expanded={false}
                              aria-label="Help on the Snippet Preview"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                aria-controls={null}
                                aria-expanded={false}
                                aria-label="Help on the Snippet Preview"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  aria-controls={null}
                                  aria-expanded={false}
                                  aria-label="Help on the Snippet Preview"
                                  className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <HelpTextWrapper__StyledSvg
                                    color="#646464"
                                    icon="question-circle"
                                    size="16px"
                                  >
                                    <SvgIcon
                                      className="c8"
                                      color="#646464"
                                      icon="question-circle"
                                      size="16px"
                                    >
                                      <SvgIcon__StyledSvg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-question-circle c8"
                                        fill="#646464"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="yoast-svg-icon yoast-svg-icon-question-circle c8 c9"
                                          fill="#646464"
                                          focusable="false"
                                          role="img"
                                          size="16px"
                                          viewBox="0 0 1792 1792"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M1024 1376v-192q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23-9t9-23zm256-672q0-88-55.5-163t-138.5-116-170-41q-243 0-371 213-15 24 8 42l132 100q7 6 19 6 16 0 25-12 53-68 86-92 34-24 86-24 48 0 85.5 26t37.5 59q0 38-20 61t-68 45q-63 28-115.5 86.5t-52.5 125.5v36q0 14 9 23t23 9h192q14 0 23-9t9-23q0-19 21.5-49.5t54.5-49.5q32-18 49-28.5t46-35 44.5-48 28-60.5 12.5-81zm384 192q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                          />
                                        </svg>
                                      </SvgIcon__StyledSvg>
                                    </SvgIcon>
                                  </HelpTextWrapper__StyledSvg>
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </HelpTextWrapper__HelpTextButton>
                  <YoastSlideToggle
                    duration={300}
                    isOpen={false}
                  >
                    <animations__YoastSlideToggleContainer
                      duration={300}
                    >
                      <div
                        className="c10"
                      >
                        <CSSTransition
                          classNames="slide"
                          in={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={true}
                        >
                          <Transition
                            appear={false}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={true}
                          />
                        </CSSTransition>
                      </div>
                    </animations__YoastSlideToggleContainer>
                  </YoastSlideToggle>
                </div>
              </HelpTextWrapper__HelpTextContainer>
            </HelpTextWrapper>
          </div>
          <SnippetPreview__MobileContainer
            padding={20}
            width={640}
          >
            <div
              className="c11"
              width={640}
            >
              <SnippetPreview__MobilePartContainer>
                <div
                  className="c12"
                >
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      SEO title preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__BaseTitle
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                  >
                    <div
                      className="c13"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                    >
                      <SnippetPreview__TitleBounded>
                        <SnippetPreview__Title
                          className="c14"
                        >
                          <div
                            className="c14 c15"
                          >
                            <SnippetPreview__TitleUnboundedMobile
                              innerRef={[Function]}
                            >
                              <span
                                className="c16"
                              >
                                Test title
                              </span>
                            </SnippetPreview__TitleUnboundedMobile>
                          </div>
                        </SnippetPreview__Title>
                      </SnippetPreview__TitleBounded>
                    </div>
                  </SnippetPreview__BaseTitle>
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      Url preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__BaseUrl>
                    <div
                      className="c17"
                    >
                      <SnippetPreview__BaseUrlOverflowContainer
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                      >
                        <div
                          className="c18"
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                        >
                          example.org â€º test-slug
                        </div>
                      </SnippetPreview__BaseUrlOverflowContainer>
                    </div>
                  </SnippetPreview__BaseUrl>
                </div>
              </SnippetPreview__MobilePartContainer>
              <SnippetPreview__Separator>
                <hr
                  className="c19"
                />
              </SnippetPreview__Separator>
              <SnippetPreview__MobilePartContainer>
                <div
                  className="c12"
                >
                  <ScreenReaderText>
                    <span
                      className="screen-reader-text"
                      style={
                        Object {
                          "clip": "rect(1px, 1px, 1px, 1px)",
                          "height": "1px",
                          "overflow": "hidden",
                          "position": "absolute",
                          "width": "1px",
                        }
                      }
                    >
                      Meta description preview:
                    </span>
                  </ScreenReaderText>
                  <SnippetPreview__MobileDescription
                    isDescriptionPlaceholder={false}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                  >
                    <SnippetPreview__DesktopDescription
                      className="c20"
                      isDescriptionPlaceholder={false}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                    >
                      <div
                        className="c20 c21"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                      >
                        <SnippetPreview__MobileDescription
                          innerRef={[Function]}
                          isDescriptionPlaceholder={false}
                        >
                          <SnippetPreview__DesktopDescription
                            className="c20"
                            innerRef={[Function]}
                            isDescriptionPlaceholder={false}
                          >
                            <div
                              className="c20 c21"
                            >
                              Test description, %%replacement_variable%%
                            </div>
                          </SnippetPreview__DesktopDescription>
                        </SnippetPreview__MobileDescription>
                      </div>
                    </SnippetPreview__DesktopDescription>
                  </SnippetPreview__MobileDescription>
                </div>
              </SnippetPreview__MobilePartContainer>
            </div>
          </SnippetPreview__MobileContainer>
        </section>
      </SnippetPreview>
      <ModeSwitcher
        active="mobile"
        onChange={[Function]}
      >
        <ModeSwitcher__Switcher>
          <div
            className="c22"
          >
            <ModeSwitcher__SwitcherButton
              aria-pressed={true}
              isActive={true}
              onClick={[Function]}
            >
              <Button
                aria-pressed={true}
                className="c23"
                isActive={true}
                onClick={[Function]}
              >
                <Button
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-pressed={true}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c23 c2"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  isActive={true}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <Button
                    activeBackgroundColor="#f7f7f7"
                    activeBorderColor="#888"
                    activeColor="#000"
                    aria-pressed={true}
                    backgroundColor="#f7f7f7"
                    borderColor="#ccc"
                    boxShadowColor="#ccc"
                    className="c23 c2 Button-kDSBcD c3"
                    focusBackgroundColor="#fff"
                    focusBorderColor="#0066cd"
                    focusColor="#000"
                    hoverBackgroundColor="#fff"
                    hoverBorderColor="#888"
                    hoverColor="#000"
                    isActive={true}
                    onClick={[Function]}
                    textColor="#555"
                    type="button"
                  >
                    <Button
                      activeBackgroundColor="#f7f7f7"
                      activeBorderColor="#888"
                      activeColor="#000"
                      aria-pressed={true}
                      backgroundColor="#f7f7f7"
                      borderColor="#ccc"
                      boxShadowColor="#ccc"
                      className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                      focusBackgroundColor="#fff"
                      focusBorderColor="#0066cd"
                      focusColor="#000"
                      hoverBackgroundColor="#fff"
                      hoverBorderColor="#888"
                      hoverColor="#000"
                      isActive={true}
                      onClick={[Function]}
                      textColor="#555"
                      type="button"
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-pressed={true}
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        isActive={true}
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button__BaseButton
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-pressed={true}
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          isActive={true}
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <button
                            aria-pressed={true}
                            className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                            onClick={[Function]}
                            type="button"
                          >
                            <SvgIcon
                              color="currentColor"
                              icon="mobile"
                              size="22px"
                            >
                              <SvgIcon__StyledSvg
                                aria-hidden={true}
                                className="yoast-svg-icon yoast-svg-icon-mobile"
                                fill="currentColor"
                                focusable="false"
                                role="img"
                                size="22px"
                                viewBox="0 0 1792 1792"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="yoast-svg-icon yoast-svg-icon-mobile c24"
                                  fill="currentColor"
                                  focusable="false"
                                  role="img"
                                  size="22px"
                                  viewBox="0 0 1792 1792"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M976 1408q0-33-23.5-56.5t-56.5-23.5-56.5 23.5-23.5 56.5 23.5 56.5 56.5 23.5 56.5-23.5 23.5-56.5zm208-160v-704q0-13-9.5-22.5t-22.5-9.5h-512q-13 0-22.5 9.5t-9.5 22.5v704q0 13 9.5 22.5t22.5 9.5h512q13 0 22.5-9.5t9.5-22.5zm-192-848q0-16-16-16h-160q-16 0-16 16t16 16h160q16 0 16-16zm288-16v1024q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-1024q0-52 38-90t90-38h512q52 0 90 38t38 90z"
                                  />
                                </svg>
                              </SvgIcon__StyledSvg>
                            </SvgIcon>
                            <ScreenReaderText>
                              <span
                                className="screen-reader-text"
                                style={
                                  Object {
                                    "clip": "rect(1px, 1px, 1px, 1px)",
                                    "height": "1px",
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "width": "1px",
                                  }
                                }
                              >
                                Mobile preview
                              </span>
                            </ScreenReaderText>
                          </button>
                        </Button__BaseButton>
                      </Button>
                    </Button>
                  </Button>
                </Button>
              </Button>
            </ModeSwitcher__SwitcherButton>
            <ModeSwitcher__SwitcherButton
              aria-pressed={false}
              isActive={false}
              onClick={[Function]}
            >
              <Button
                aria-pressed={false}
                className="c25"
                isActive={false}
                onClick={[Function]}
              >
                <Button
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-pressed={false}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c25 c2"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  isActive={false}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <Button
                    activeBackgroundColor="#f7f7f7"
                    activeBorderColor="#888"
                    activeColor="#000"
                    aria-pressed={false}
                    backgroundColor="#f7f7f7"
                    borderColor="#ccc"
                    boxShadowColor="#ccc"
                    className="c25 c2 Button-kDSBcD c3"
                    focusBackgroundColor="#fff"
                    focusBorderColor="#0066cd"
                    focusColor="#000"
                    hoverBackgroundColor="#fff"
                    hoverBorderColor="#888"
                    hoverColor="#000"
                    isActive={false}
                    onClick={[Function]}
                    textColor="#555"
                    type="button"
                  >
                    <Button
                      activeBackgroundColor="#f7f7f7"
                      activeBorderColor="#888"
                      activeColor="#000"
                      aria-pressed={false}
                      backgroundColor="#f7f7f7"
                      borderColor="#ccc"
                      boxShadowColor="#ccc"
                      className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                      focusBackgroundColor="#fff"
                      focusBorderColor="#0066cd"
                      focusColor="#000"
                      hoverBackgroundColor="#fff"
                      hoverBorderColor="#888"
                      hoverColor="#000"
                      isActive={false}
                      onClick={[Function]}
                      textColor="#555"
                      type="button"
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        aria-pressed={false}
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        isActive={false}
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button__BaseButton
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          aria-pressed={false}
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          isActive={false}
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <button
                            aria-pressed={false}
                            className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                            onClick={[Function]}
                            type="button"
                          >
                            <SvgIcon
                              color="currentColor"
                              icon="desktop"
                              size="18px"
                            >
                              <SvgIcon__StyledSvg
                                aria-hidden={true}
                                className="yoast-svg-icon yoast-svg-icon-desktop"
                                fill="currentColor"
                                focusable="false"
                                role="img"
                                size="18px"
                                viewBox="0 0 1792 1792"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <svg
                                  aria-hidden={true}
                                  className="yoast-svg-icon yoast-svg-icon-desktop c26"
                                  fill="currentColor"
                                  focusable="false"
                                  role="img"
                                  size="18px"
                                  viewBox="0 0 1792 1792"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M1728 992v-832q0-13-9.5-22.5t-22.5-9.5h-1600q-13 0-22.5 9.5t-9.5 22.5v832q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5zm128-832v1088q0 66-47 113t-113 47h-544q0 37 16 77.5t32 71 16 43.5q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45q0-14 16-44t32-70 16-78h-544q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1600q66 0 113 47t47 113z"
                                  />
                                </svg>
                              </SvgIcon__StyledSvg>
                            </SvgIcon>
                            <ScreenReaderText>
                              <span
                                className="screen-reader-text"
                                style={
                                  Object {
                                    "clip": "rect(1px, 1px, 1px, 1px)",
                                    "height": "1px",
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "width": "1px",
                                  }
                                }
                              >
                                Desktop preview
                              </span>
                            </ScreenReaderText>
                          </button>
                        </Button__BaseButton>
                      </Button>
                    </Button>
                  </Button>
                </Button>
              </Button>
            </ModeSwitcher__SwitcherButton>
          </div>
        </ModeSwitcher__Switcher>
      </ModeSwitcher>
      <Button
        aria-expanded={true}
        innerRef={[Function]}
        onClick={[Function]}
      >
        <Button
          activeBackgroundColor="#f7f7f7"
          activeBorderColor="#888"
          activeColor="#000"
          aria-expanded={true}
          backgroundColor="#f7f7f7"
          borderColor="#ccc"
          boxShadowColor="#ccc"
          className="c27"
          focusBackgroundColor="#fff"
          focusBorderColor="#0066cd"
          focusColor="#000"
          hoverBackgroundColor="#fff"
          hoverBorderColor="#888"
          hoverColor="#000"
          innerRef={[Function]}
          onClick={[Function]}
          textColor="#555"
          type="button"
        >
          <Button
            activeBackgroundColor="#f7f7f7"
            activeBorderColor="#888"
            activeColor="#000"
            aria-expanded={true}
            backgroundColor="#f7f7f7"
            borderColor="#ccc"
            boxShadowColor="#ccc"
            className="c27 Button-kDSBcD c3"
            focusBackgroundColor="#fff"
            focusBorderColor="#0066cd"
            focusColor="#000"
            hoverBackgroundColor="#fff"
            hoverBorderColor="#888"
            hoverColor="#000"
            innerRef={[Function]}
            onClick={[Function]}
            textColor="#555"
            type="button"
          >
            <Button
              activeBackgroundColor="#f7f7f7"
              activeBorderColor="#888"
              activeColor="#000"
              aria-expanded={true}
              backgroundColor="#f7f7f7"
              borderColor="#ccc"
              boxShadowColor="#ccc"
              className="c27 Button-kDSBcD c3 Button-kDSBcD c4"
              focusBackgroundColor="#fff"
              focusBorderColor="#0066cd"
              focusColor="#000"
              hoverBackgroundColor="#fff"
              hoverBorderColor="#888"
              hoverColor="#000"
              innerRef={[Function]}
              onClick={[Function]}
              textColor="#555"
              type="button"
            >
              <Button
                activeBackgroundColor="#f7f7f7"
                activeBorderColor="#888"
                activeColor="#000"
                aria-expanded={true}
                backgroundColor="#f7f7f7"
                borderColor="#ccc"
                boxShadowColor="#ccc"
                className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                focusBackgroundColor="#fff"
                focusBorderColor="#0066cd"
                focusColor="#000"
                hoverBackgroundColor="#fff"
                hoverBorderColor="#888"
                hoverColor="#000"
                innerRef={[Function]}
                onClick={[Function]}
                textColor="#555"
                type="button"
              >
                <Button__BaseButton
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  aria-expanded={true}
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  innerRef={[Function]}
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <button
                    aria-expanded={true}
                    className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                    onClick={[Function]}
                    type="button"
                  >
                    <SvgIcon
                      icon="edit"
                      size="16px"
                    >
                      <SvgIcon__StyledSvg
                        aria-hidden={true}
                        className="yoast-svg-icon yoast-svg-icon-edit"
                        focusable="false"
                        role="img"
                        size="16px"
                        viewBox="0 0 1792 1792"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <svg
                          aria-hidden={true}
                          className="yoast-svg-icon yoast-svg-icon-edit c9"
                          focusable="false"
                          role="img"
                          size="16px"
                          viewBox="0 0 1792 1792"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M491 1536l91-91-235-235-91 91v107h128v128h107zm523-928q0-22-22-22-10 0-17 7l-542 542q-7 7-7 17 0 22 22 22 10 0 17-7l542-542q7-7 7-17zm-54-192l416 416-832 832h-416v-416zm683 96q0 53-37 90l-166 166-416-416 166-165q36-38 90-38 53 0 91 38l235 234q37 39 37 91z"
                          />
                        </svg>
                      </SvgIcon__StyledSvg>
                    </SvgIcon>
                    Edit snippet
                  </button>
                </Button__BaseButton>
              </Button>
            </Button>
          </Button>
        </Button>
      </Button>
      <SnippetEditorFields
        activeField={null}
        containerPadding="0 20px"
        data={
          Object {
            "description": "Test description, %%replacement_variable%%",
            "slug": "test-slug",
            "title": "Test title",
          }
        }
        descriptionEditorFieldPlaceholder="Modify your meta description by editing it right here"
        descriptionLengthProgress={
          Object {
            "actual": 42,
            "max": 156,
            "score": 6,
          }
        }
        hoveredField={null}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        recommendedReplacementVariables={Array []}
        replacementVariables={Array []}
        titleLengthProgress={
          Object {
            "actual": 0,
            "max": 600,
            "score": 1,
          }
        }
      >
        <Shared__StyledEditor
          padding="0 20px"
        >
          <section
            className="c28"
          >
            <Shared__FormSection>
              <div
                className="c29"
              >
                <ReplacementVariableEditor
                  content="Test title"
                  editorRef={[Function]}
                  fieldId="snippet-editor-field-title"
                  isActive={false}
                  isHovered={false}
                  label="SEO title"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  recommendedReplacementVariables={Array []}
                  replacementVariables={Array []}
                  withCaret={true}
                >
                  <Shared__SimulatedLabel
                    id="25"
                    onClick={[Function]}
                  >
                    <div
                      className="c30"
                      id="25"
                      onClick={[Function]}
                    >
                      SEO title
                    </div>
                  </Shared__SimulatedLabel>
                  <Shared__TriggerReplacementVariableSuggestionsButton
                    onClick={[Function]}
                  >
                    <Button
                      className="c31"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c31 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c31 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <SvgIcon
                                    icon="plus-circle"
                                    size="16px"
                                  >
                                    <SvgIcon__StyledSvg
                                      aria-hidden={true}
                                      className="yoast-svg-icon yoast-svg-icon-plus-circle"
                                      focusable="false"
                                      role="img"
                                      size="16px"
                                      viewBox="0 0 1792 1792"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-plus-circle c9"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M1344 960v-128q0-26-19-45t-45-19h-256v-256q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v256h-256q-26 0-45 19t-19 45v128q0 26 19 45t45 19h256v256q0 26 19 45t45 19h128q26 0 45-19t19-45v-256h256q26 0 45-19t19-45zm320-64q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                        />
                                      </svg>
                                    </SvgIcon__StyledSvg>
                                  </SvgIcon>
                                  Insert snippet variable
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </Shared__TriggerReplacementVariableSuggestionsButton>
                  <Shared__InputContainer
                    id="snippet-editor-field-title"
                    isActive={false}
                    isHovered={false}
                    onClick={[Function]}
                  >
                    <div
                      className="c32"
                      id="snippet-editor-field-title"
                      onClick={[Function]}
                    >
                      <Wrapper
                        ariaLabelledBy="25"
                        content="Test title"
                        innerRef={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        recommendedReplacementVariables={Array []}
                        replacementVariables={Array []}
                      >
                        <ReplacementVariableEditorStandalone
                          ariaLabelledBy="25"
                          content="Test title"
                          innerRef={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          recommendedReplacementVariables={Array []}
                          replacementVariables={Array []}
                        >
                          <div />
                        </ReplacementVariableEditorStandalone>
                      </Wrapper>
                    </div>
                  </Shared__InputContainer>
                </ReplacementVariableEditor>
                <ProgressBar
                  aria-hidden="true"
                  backgroundColor="#f7f7f7"
                  borderColor="#ddd"
                  max={600}
                  progressColor="#dc3232"
                  value={0}
                >
                  <progress
                    aria-hidden="true"
                    className="c33"
                    max={600}
                    value={0}
                  />
                </ProgressBar>
              </div>
            </Shared__FormSection>
            <Shared__FormSection>
              <div
                className="c29"
              >
                <Shared__SimulatedLabel
                  id="snippet-editor-field-24-slug"
                  onClick={[Function]}
                >
                  <div
                    className="c30"
                    id="snippet-editor-field-24-slug"
                    onClick={[Function]}
                  >
                    Slug
                  </div>
                </Shared__SimulatedLabel>
                <Shared__InputContainer
                  isActive={false}
                  isHovered={false}
                  onClick={[Function]}
                >
                  <div
                    className="c34"
                    onClick={[Function]}
                  >
                    <SnippetEditorFields__SlugInput
                      aria-labelledby="snippet-editor-field-24-slug"
                      id="snippet-editor-field-slug"
                      innerRef={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      value="test-slug"
                    >
                      <input
                        aria-labelledby="snippet-editor-field-24-slug"
                        className="c35"
                        id="snippet-editor-field-slug"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        value="test-slug"
                      />
                    </SnippetEditorFields__SlugInput>
                  </div>
                </Shared__InputContainer>
              </div>
            </Shared__FormSection>
            <Shared__FormSection>
              <div
                className="c29"
              >
                <ReplacementVariableEditor
                  content="Test description, %%replacement_variable%%"
                  editorRef={[Function]}
                  fieldId="snippet-editor-field-description"
                  isActive={false}
                  isHovered={false}
                  label="Meta description"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  placeholder="Modify your meta description by editing it right here"
                  recommendedReplacementVariables={Array []}
                  replacementVariables={Array []}
                  type="description"
                  withCaret={true}
                >
                  <Shared__SimulatedLabel
                    id="26"
                    onClick={[Function]}
                  >
                    <div
                      className="c30"
                      id="26"
                      onClick={[Function]}
                    >
                      Meta description
                    </div>
                  </Shared__SimulatedLabel>
                  <Shared__TriggerReplacementVariableSuggestionsButton
                    onClick={[Function]}
                  >
                    <Button
                      className="c31"
                      onClick={[Function]}
                    >
                      <Button
                        activeBackgroundColor="#f7f7f7"
                        activeBorderColor="#888"
                        activeColor="#000"
                        backgroundColor="#f7f7f7"
                        borderColor="#ccc"
                        boxShadowColor="#ccc"
                        className="c31 c2"
                        focusBackgroundColor="#fff"
                        focusBorderColor="#0066cd"
                        focusColor="#000"
                        hoverBackgroundColor="#fff"
                        hoverBorderColor="#888"
                        hoverColor="#000"
                        onClick={[Function]}
                        textColor="#555"
                        type="button"
                      >
                        <Button
                          activeBackgroundColor="#f7f7f7"
                          activeBorderColor="#888"
                          activeColor="#000"
                          backgroundColor="#f7f7f7"
                          borderColor="#ccc"
                          boxShadowColor="#ccc"
                          className="c31 c2 Button-kDSBcD c3"
                          focusBackgroundColor="#fff"
                          focusBorderColor="#0066cd"
                          focusColor="#000"
                          hoverBackgroundColor="#fff"
                          hoverBorderColor="#888"
                          hoverColor="#000"
                          onClick={[Function]}
                          textColor="#555"
                          type="button"
                        >
                          <Button
                            activeBackgroundColor="#f7f7f7"
                            activeBorderColor="#888"
                            activeColor="#000"
                            backgroundColor="#f7f7f7"
                            borderColor="#ccc"
                            boxShadowColor="#ccc"
                            className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4"
                            focusBackgroundColor="#fff"
                            focusBorderColor="#0066cd"
                            focusColor="#000"
                            hoverBackgroundColor="#fff"
                            hoverBorderColor="#888"
                            hoverColor="#000"
                            onClick={[Function]}
                            textColor="#555"
                            type="button"
                          >
                            <Button
                              activeBackgroundColor="#f7f7f7"
                              activeBorderColor="#888"
                              activeColor="#000"
                              backgroundColor="#f7f7f7"
                              borderColor="#ccc"
                              boxShadowColor="#ccc"
                              className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                              focusBackgroundColor="#fff"
                              focusBorderColor="#0066cd"
                              focusColor="#000"
                              hoverBackgroundColor="#fff"
                              hoverBorderColor="#888"
                              hoverColor="#000"
                              onClick={[Function]}
                              textColor="#555"
                              type="button"
                            >
                              <Button__BaseButton
                                activeBackgroundColor="#f7f7f7"
                                activeBorderColor="#888"
                                activeColor="#000"
                                backgroundColor="#f7f7f7"
                                borderColor="#ccc"
                                boxShadowColor="#ccc"
                                className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                                focusBackgroundColor="#fff"
                                focusBorderColor="#0066cd"
                                focusColor="#000"
                                hoverBackgroundColor="#fff"
                                hoverBorderColor="#888"
                                hoverColor="#000"
                                onClick={[Function]}
                                textColor="#555"
                                type="button"
                              >
                                <button
                                  className="c31 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <SvgIcon
                                    icon="plus-circle"
                                    size="16px"
                                  >
                                    <SvgIcon__StyledSvg
                                      aria-hidden={true}
                                      className="yoast-svg-icon yoast-svg-icon-plus-circle"
                                      focusable="false"
                                      role="img"
                                      size="16px"
                                      viewBox="0 0 1792 1792"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="yoast-svg-icon yoast-svg-icon-plus-circle c9"
                                        focusable="false"
                                        role="img"
                                        size="16px"
                                        viewBox="0 0 1792 1792"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M1344 960v-128q0-26-19-45t-45-19h-256v-256q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v256h-256q-26 0-45 19t-19 45v128q0 26 19 45t45 19h256v256q0 26 19 45t45 19h128q26 0 45-19t19-45v-256h256q26 0 45-19t19-45zm320-64q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
                                        />
                                      </svg>
                                    </SvgIcon__StyledSvg>
                                  </SvgIcon>
                                  Insert snippet variable
                                </button>
                              </Button__BaseButton>
                            </Button>
                          </Button>
                        </Button>
                      </Button>
                    </Button>
                  </Shared__TriggerReplacementVariableSuggestionsButton>
                  <Shared__InputContainer
                    id="snippet-editor-field-description"
                    isActive={false}
                    isHovered={false}
                    onClick={[Function]}
                  >
                    <div
                      className="c36"
                      id="snippet-editor-field-description"
                      onClick={[Function]}
                    >
                      <Wrapper
                        ariaLabelledBy="26"
                        content="Test description, %%replacement_variable%%"
                        innerRef={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        placeholder="Modify your meta description by editing it right here"
                        recommendedReplacementVariables={Array []}
                        replacementVariables={Array []}
                      >
                        <ReplacementVariableEditorStandalone
                          ariaLabelledBy="26"
                          content="Test description, %%replacement_variable%%"
                          innerRef={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Modify your meta description by editing it right here"
                          recommendedReplacementVariables={Array []}
                          replacementVariables={Array []}
                        >
                          <div />
                        </ReplacementVariableEditorStandalone>
                      </Wrapper>
                    </div>
                  </Shared__InputContainer>
                </ReplacementVariableEditor>
                <ProgressBar
                  aria-hidden="true"
                  backgroundColor="#f7f7f7"
                  borderColor="#ddd"
                  max={156}
                  progressColor="#ee7c1b"
                  value={42}
                >
                  <progress
                    aria-hidden="true"
                    className="c37"
                    max={156}
                    value={42}
                  />
                </ProgressBar>
              </div>
            </Shared__FormSection>
          </section>
        </Shared__StyledEditor>
      </SnippetEditorFields>
      <Button
        onClick={[Function]}
      >
        <Button
          activeBackgroundColor="#f7f7f7"
          activeBorderColor="#888"
          activeColor="#000"
          backgroundColor="#f7f7f7"
          borderColor="#ccc"
          boxShadowColor="#ccc"
          className="c38"
          focusBackgroundColor="#fff"
          focusBorderColor="#0066cd"
          focusColor="#000"
          hoverBackgroundColor="#fff"
          hoverBorderColor="#888"
          hoverColor="#000"
          onClick={[Function]}
          textColor="#555"
          type="button"
        >
          <Button
            activeBackgroundColor="#f7f7f7"
            activeBorderColor="#888"
            activeColor="#000"
            backgroundColor="#f7f7f7"
            borderColor="#ccc"
            boxShadowColor="#ccc"
            className="c38 Button-kDSBcD c3"
            focusBackgroundColor="#fff"
            focusBorderColor="#0066cd"
            focusColor="#000"
            hoverBackgroundColor="#fff"
            hoverBorderColor="#888"
            hoverColor="#000"
            onClick={[Function]}
            textColor="#555"
            type="button"
          >
            <Button
              activeBackgroundColor="#f7f7f7"
              activeBorderColor="#888"
              activeColor="#000"
              backgroundColor="#f7f7f7"
              borderColor="#ccc"
              boxShadowColor="#ccc"
              className="c38 Button-kDSBcD c3 Button-kDSBcD c4"
              focusBackgroundColor="#fff"
              focusBorderColor="#0066cd"
              focusColor="#000"
              hoverBackgroundColor="#fff"
              hoverBorderColor="#888"
              hoverColor="#000"
              onClick={[Function]}
              textColor="#555"
              type="button"
            >
              <Button
                activeBackgroundColor="#f7f7f7"
                activeBorderColor="#888"
                activeColor="#000"
                backgroundColor="#f7f7f7"
                borderColor="#ccc"
                boxShadowColor="#ccc"
                className="c38 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5"
                focusBackgroundColor="#fff"
                focusBorderColor="#0066cd"
                focusColor="#000"
                hoverBackgroundColor="#fff"
                hoverBorderColor="#888"
                hoverColor="#000"
                onClick={[Function]}
                textColor="#555"
                type="button"
              >
                <Button__BaseButton
                  activeBackgroundColor="#f7f7f7"
                  activeBorderColor="#888"
                  activeColor="#000"
                  backgroundColor="#f7f7f7"
                  borderColor="#ccc"
                  boxShadowColor="#ccc"
                  className="c38 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6"
                  focusBackgroundColor="#fff"
                  focusBorderColor="#0066cd"
                  focusColor="#000"
                  hoverBackgroundColor="#fff"
                  hoverBorderColor="#888"
                  hoverColor="#000"
                  onClick={[Function]}
                  textColor="#555"
                  type="button"
                >
                  <button
                    className="c38 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
                    onClick={[Function]}
                    type="button"
                  >
                    Close snippet editor
                  </button>
                </Button__BaseButton>
              </Button>
            </Button>
          </Button>
        </Button>
      </Button>
    </div>
  </ErrorBoundary>
</SnippetEditor>
`;

exports[`SnippetEditor renders in desktop mode 1`] = `
.c12 {
  overflow: auto;
  width: 640px;
  padding: 0 20px;
  max-width: 100%;
  box-sizing: border-box;
}

.c13 {
  width: 600px;
}

.c7 {
  color: #555;
  border-color: #ccc;
  background: #f7f7f7;
  box-shadow: 0 1px 0 rgba( 204,204,204,1 );
}

.c2 {
  font-size: 0.8rem;
}

.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  vertical-align: middle;
  border-width: 1px;
  border-style: solid;
  margin: 0;
  padding: 4px 10px;
  border-radius: 3px;
  cursor: pointer;
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  font-weight: inherit;
  text-align: left;
  overflow: visible;
  min-height: 32px;
}

.c3 svg {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c4:hover {
  color: #000;
  background-color: #fff;
  border-color: #888;
}

.c5::-moz-focus-inner {
  border-width: 0;
}

.c5:focus {
  outline: none;
  border-color: #0066cd;
  color: #000;
  background-color: #fff;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c6:active {
  color: #000;
  background-color: #f7f7f7;
  border-color: #888;
  box-shadow: inset 0 2px 5px -3px rgba( 0,0,0,0.5 );
}

.c27 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 10px 0 0 4px;
  fill: #555;
  padding-left: 8px;
}

.c27 svg {
  margin-right: 7px;
}

.c10 >:first-child {
  overflow: hidden;
  -webkit-transition: height 300ms ease-out;
  transition: height 300ms ease-out;
}

.c0 {
  max-width: 600px;
  font-weight: normal;
  margin: 0 20px 0 25px;
}

.c1 {
  min-width: 14px;
  min-height: 14px;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  border: 1px solid transparent;
  box-shadow: none;
  display: block;
  margin: -44px -10px 10px 0;
  background-color: transparent;
  float: right;
  padding: 3px 0 0 6px;
}

.c1:hover {
  color: #0066cd;
}

.c1:focus {
  border: 1px solid #0066cd;
  outline: none;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c1:focus svg {
  fill: #0066cd;
  color: #0066cd;
}

.c1:active {
  box-shadow: none;
}

.c8:hover {
  fill: #0066cd;
}

.c11 {
  background-color: white;
  font-family: arial,sans-serif;
  box-sizing: border-box;
}

.c14 {
  cursor: pointer;
  position: relative;
}

.c16 {
  color: #1e0fbe;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-size: 18px;
  line-height: 1.2;
  font-weight: normal;
  margin: 0;
  display: inline-block;
  overflow: hidden;
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c15 {
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c17 {
  white-space: nowrap;
}

.c18 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
}

.c19 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%;
}

.c21 {
  color: #545454;
  cursor: pointer;
  position: relative;
  max-width: 600px;
  font-size: 13px;
}

.c20 {
  display: inline-block;
  margin-top: 6px;
  margin-left: 6px;
  border-top: 5px solid #006621;
  border-right: 4px solid transparent;
  border-left: 4px solid transparent;
  vertical-align: top;
}

.c23 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: transparent;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 3px 0 0 3px;
}

.c23:hover,
.c23:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c25 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: #555;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 0 3px 3px 0;
}

.c25:hover,
.c25:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c22 {
  display: inline-block;
  margin-top: 10px;
  border: 1px solid #dbdbdb;
  border-radius: 4px;
  background-color: #f7f7f7;
  vertical-align: top;
}

.c9 {
  width: 16px;
  height: 16px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c24 {
  width: 22px;
  height: 22px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c26 {
  width: 18px;
  height: 18px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

@media all and (-ms-high-contrast:none),(-ms-high-contrast:active) {
  .c3::after {
    display: inline-block;
    content: "";
    min-height: 22px;
  }
}

<div>
  <section>
    <div>
      <div
        className="yoast-help c0"
      >
        <button
          aria-controls={null}
          aria-expanded={false}
          aria-label="Help on the Snippet Preview"
          className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
          onClick={[Function]}
          type="button"
        >
          <svg
            aria-hidden={true}
            className="yoast-svg-icon yoast-svg-icon-question-circle c8 c9"
            fill="#646464"
            focusable="false"
            role="img"
            size="16px"
            viewBox="0 0 1792 1792"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M1024 1376v-192q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23-9t9-23zm256-672q0-88-55.5-163t-138.5-116-170-41q-243 0-371 213-15 24 8 42l132 100q7 6 19 6 16 0 25-12 53-68 86-92 34-24 86-24 48 0 85.5 26t37.5 59q0 38-20 61t-68 45q-63 28-115.5 86.5t-52.5 125.5v36q0 14 9 23t23 9h192q14 0 23-9t9-23q0-19 21.5-49.5t54.5-49.5q32-18 49-28.5t46-35 44.5-48 28-60.5 12.5-81zm384 192q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
            />
          </svg>
        </button>
        <div
          className="c10"
        />
      </div>
    </div>
    <div
      className="c11 c12"
      width={640}
    >
      <div
        className="c13"
        width={600}
      >
        <div
          className=""
        >
          <span
            className="screen-reader-text"
            style={
              Object {
                "clip": "rect(1px, 1px, 1px, 1px)",
                "height": "1px",
                "overflow": "hidden",
                "position": "absolute",
                "width": "1px",
              }
            }
          >
            SEO title preview:
          </span>
          <div
            className="c14"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
          >
            <div
              className="c15 c16"
            >
              <span
                className="c17"
              >
                Test title
              </span>
            </div>
          </div>
          <span
            className="screen-reader-text"
            style={
              Object {
                "clip": "rect(1px, 1px, 1px, 1px)",
                "height": "1px",
                "overflow": "hidden",
                "position": "absolute",
                "width": "1px",
              }
            }
          >
            Url preview:
          </span>
          <div
            className="c18"
          >
            <div
              className="c19"
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onMouseUp={[Function]}
            >
              example.org/test-slug/
            </div>
          </div>
          <div
            className="c20"
          />
        </div>
        <div
          className=""
        >
          <span
            className="screen-reader-text"
            style={
              Object {
                "clip": "rect(1px, 1px, 1px, 1px)",
                "height": "1px",
                "overflow": "hidden",
                "position": "absolute",
                "width": "1px",
              }
            }
          >
            Meta description preview:
          </span>
          <div
            className="c21"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
          >
            Test description, %%replacement_variable%%
          </div>
        </div>
      </div>
    </div>
  </section>
  <div
    className="c22"
  >
    <button
      aria-pressed={false}
      className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
      onClick={[Function]}
      type="button"
    >
      <svg
        aria-hidden={true}
        className="yoast-svg-icon yoast-svg-icon-mobile c24"
        fill="currentColor"
        focusable="false"
        role="img"
        size="22px"
        viewBox="0 0 1792 1792"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M976 1408q0-33-23.5-56.5t-56.5-23.5-56.5 23.5-23.5 56.5 23.5 56.5 56.5 23.5 56.5-23.5 23.5-56.5zm208-160v-704q0-13-9.5-22.5t-22.5-9.5h-512q-13 0-22.5 9.5t-9.5 22.5v704q0 13 9.5 22.5t22.5 9.5h512q13 0 22.5-9.5t9.5-22.5zm-192-848q0-16-16-16h-160q-16 0-16 16t16 16h160q16 0 16-16zm288-16v1024q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-1024q0-52 38-90t90-38h512q52 0 90 38t38 90z"
        />
      </svg>
      <span
        className="screen-reader-text"
        style={
          Object {
            "clip": "rect(1px, 1px, 1px, 1px)",
            "height": "1px",
            "overflow": "hidden",
            "position": "absolute",
            "width": "1px",
          }
        }
      >
        Mobile preview
      </span>
    </button>
    <button
      aria-pressed={true}
      className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
      onClick={[Function]}
      type="button"
    >
      <svg
        aria-hidden={true}
        className="yoast-svg-icon yoast-svg-icon-desktop c26"
        fill="currentColor"
        focusable="false"
        role="img"
        size="18px"
        viewBox="0 0 1792 1792"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M1728 992v-832q0-13-9.5-22.5t-22.5-9.5h-1600q-13 0-22.5 9.5t-9.5 22.5v832q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5zm128-832v1088q0 66-47 113t-113 47h-544q0 37 16 77.5t32 71 16 43.5q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45q0-14 16-44t32-70 16-78h-544q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1600q66 0 113 47t47 113z"
        />
      </svg>
      <span
        className="screen-reader-text"
        style={
          Object {
            "clip": "rect(1px, 1px, 1px, 1px)",
            "height": "1px",
            "overflow": "hidden",
            "position": "absolute",
            "width": "1px",
          }
        }
      >
        Desktop preview
      </span>
    </button>
  </div>
  <button
    aria-expanded={false}
    className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
    onClick={[Function]}
    type="button"
  >
    <svg
      aria-hidden={true}
      className="yoast-svg-icon yoast-svg-icon-edit c9"
      fill={undefined}
      focusable="false"
      role="img"
      size="16px"
      viewBox="0 0 1792 1792"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M491 1536l91-91-235-235-91 91v107h128v128h107zm523-928q0-22-22-22-10 0-17 7l-542 542q-7 7-7 17 0 22 22 22 10 0 17-7l542-542q7-7 7-17zm-54-192l416 416-832 832h-416v-416zm683 96q0 53-37 90l-166 166-416-416 166-165q36-38 90-38 53 0 91 38l235 234q37 39 37 91z"
      />
    </svg>
    Edit snippet
  </button>
</div>
`;

exports[`SnippetEditor shows the editor 1`] = `
.c7 {
  color: #555;
  border-color: #ccc;
  background: #f7f7f7;
  box-shadow: 0 1px 0 rgba( 204,204,204,1 );
}

.c2 {
  font-size: 0.8rem;
}

.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  vertical-align: middle;
  border-width: 1px;
  border-style: solid;
  margin: 0;
  padding: 4px 10px;
  border-radius: 3px;
  cursor: pointer;
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  font-weight: inherit;
  text-align: left;
  overflow: visible;
  min-height: 32px;
}

.c3 svg {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c4:hover {
  color: #000;
  background-color: #fff;
  border-color: #888;
}

.c5::-moz-focus-inner {
  border-width: 0;
}

.c5:focus {
  outline: none;
  border-color: #0066cd;
  color: #000;
  background-color: #fff;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c6:active {
  color: #000;
  background-color: #f7f7f7;
  border-color: #888;
  box-shadow: inset 0 2px 5px -3px rgba( 0,0,0,0.5 );
}

.c27 {
  font-size: 0.8rem;
  height: 33px;
  border: 1px solid #dbdbdb;
  box-shadow: none;
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  margin: 10px 0 0 4px;
  fill: #555;
  padding-left: 8px;
}

.c27 svg {
  margin-right: 7px;
}

.c10 >:first-child {
  overflow: hidden;
  -webkit-transition: height 300ms ease-out;
  transition: height 300ms ease-out;
}

.c0 {
  max-width: 600px;
  font-weight: normal;
  margin: 0 20px 0 25px;
}

.c1 {
  min-width: 14px;
  min-height: 14px;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  border: 1px solid transparent;
  box-shadow: none;
  display: block;
  margin: -44px -10px 10px 0;
  background-color: transparent;
  float: right;
  padding: 3px 0 0 6px;
}

.c1:hover {
  color: #0066cd;
}

.c1:focus {
  border: 1px solid #0066cd;
  outline: none;
  box-shadow: 0 0 3px rgba( 8,74,103,0.8 );
}

.c1:focus svg {
  fill: #0066cd;
  color: #0066cd;
}

.c1:active {
  box-shadow: none;
}

.c8:hover {
  fill: #0066cd;
}

.c11 {
  border-bottom: 1px hidden #fff;
  border-radius: 2px;
  box-shadow: 0 1px 2px rgba(0,0,0,.2);
  font-family: Arial,Roboto-Regular,HelveticaNeue,sans-serif;
  max-width: 600px;
  box-sizing: border-box;
  font-size: 14px;
}

.c13 {
  cursor: pointer;
  position: relative;
}

.c15 {
  color: #1e0fbe;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-size: 18px;
  line-height: 1.2;
  font-weight: normal;
  margin: 0;
  display: inline-block;
  overflow: hidden;
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c14 {
  max-width: 600px;
  vertical-align: top;
  text-overflow: ellipsis;
}

.c16 {
  display: inline-block;
  font-size: 16px;
  line-height: 1.2em;
  max-height: 2.4em;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c17 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
}

.c18 {
  display: inline-block;
  color: #006621;
  cursor: pointer;
  position: relative;
  max-width: 90%;
  white-space: nowrap;
  font-size: 14px;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%;
}

.c21 {
  color: #545454;
  cursor: pointer;
  position: relative;
  max-width: 600px;
  font-size: 13px;
}

.c20 {
  font-size: 14px;
  line-height: 20px;
}

.c12 {
  padding: 8px 16px;
}

.c19 {
  border: 0;
  border-bottom: 1px solid #DFE1E5;
  margin: 0;
}

.c23 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: #555;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 3px 0 0 3px;
}

.c23:hover,
.c23:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c25 {
  border: none;
  border-bottom: 4px solid transparent;
  width: 31px;
  height: 31px;
  border-color: transparent;
  color: #555;
  -webkit-transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  transition: 0.15s color ease-in-out,0.15s background-color ease-in-out,0.15s border-color ease-in-out;
  -webkit-transition-property: border-color;
  transition-property: border-color;
  border-radius: 0 3px 3px 0;
}

.c25:hover,
.c25:focus {
  background-color: #fff;
  border: none;
  border-bottom: 4px solid transparent;
  border-color: #1e8cbe;
  color: #1e8cbe;
  box-shadow: none;
}

.c22 {
  display: inline-block;
  margin-top: 10px;
  border: 1px solid #dbdbdb;
  border-radius: 4px;
  background-color: #f7f7f7;
  vertical-align: top;
}

.c9 {
  width: 16px;
  height: 16px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c24 {
  width: 22px;
  height: 22px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

.c26 {
  width: 18px;
  height: 18px;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
}

@media all and (-ms-high-contrast:none),(-ms-high-contrast:active) {
  .c3::after {
    display: inline-block;
    content: "";
    min-height: 22px;
  }
}

<div>
  <section>
    <div>
      <div
        className="yoast-help c0"
      >
        <button
          aria-controls={null}
          aria-expanded={false}
          aria-label="Help on the Snippet Preview"
          className="yoast-help__button c1 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
          onClick={[Function]}
          type="button"
        >
          <svg
            aria-hidden={true}
            className="yoast-svg-icon yoast-svg-icon-question-circle c8 c9"
            fill="#646464"
            focusable="false"
            role="img"
            size="16px"
            viewBox="0 0 1792 1792"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M1024 1376v-192q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v192q0 14 9 23t23 9h192q14 0 23-9t9-23zm256-672q0-88-55.5-163t-138.5-116-170-41q-243 0-371 213-15 24 8 42l132 100q7 6 19 6 16 0 25-12 53-68 86-92 34-24 86-24 48 0 85.5 26t37.5 59q0 38-20 61t-68 45q-63 28-115.5 86.5t-52.5 125.5v36q0 14 9 23t23 9h192q14 0 23-9t9-23q0-19 21.5-49.5t54.5-49.5q32-18 49-28.5t46-35 44.5-48 28-60.5 12.5-81zm384 192q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"
            />
          </svg>
        </button>
        <div
          className="c10"
        />
      </div>
    </div>
    <div
      className="c11"
      onMouseLeave={undefined}
      width={640}
    >
      <div
        className="c12"
      >
        <span
          className="screen-reader-text"
          style={
            Object {
              "clip": "rect(1px, 1px, 1px, 1px)",
              "height": "1px",
              "overflow": "hidden",
              "position": "absolute",
              "width": "1px",
            }
          }
        >
          SEO title preview:
        </span>
        <div
          className="c13"
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
        >
          <div
            className="c14 c15"
          >
            <span
              className="c16"
            >
              Test title
            </span>
          </div>
        </div>
        <span
          className="screen-reader-text"
          style={
            Object {
              "clip": "rect(1px, 1px, 1px, 1px)",
              "height": "1px",
              "overflow": "hidden",
              "position": "absolute",
              "width": "1px",
            }
          }
        >
          Url preview:
        </span>
        <div
          className="c17"
        >
          <div
            className="c18"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
          >
            example.org â€º test-slug
          </div>
        </div>
      </div>
      <hr
        className="c19"
      />
      <div
        className="c12"
      >
        <span
          className="screen-reader-text"
          style={
            Object {
              "clip": "rect(1px, 1px, 1px, 1px)",
              "height": "1px",
              "overflow": "hidden",
              "position": "absolute",
              "width": "1px",
            }
          }
        >
          Meta description preview:
        </span>
        <div
          className="c20 c21"
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
        >
          <div
            className="c20 c21"
          >
            Test description, %%replacement_variable%%
          </div>
        </div>
      </div>
    </div>
  </section>
  <div
    className="c22"
  >
    <button
      aria-pressed={true}
      className="c23 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
      onClick={[Function]}
      type="button"
    >
      <svg
        aria-hidden={true}
        className="yoast-svg-icon yoast-svg-icon-mobile c24"
        fill="currentColor"
        focusable="false"
        role="img"
        size="22px"
        viewBox="0 0 1792 1792"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M976 1408q0-33-23.5-56.5t-56.5-23.5-56.5 23.5-23.5 56.5 23.5 56.5 56.5 23.5 56.5-23.5 23.5-56.5zm208-160v-704q0-13-9.5-22.5t-22.5-9.5h-512q-13 0-22.5 9.5t-9.5 22.5v704q0 13 9.5 22.5t22.5 9.5h512q13 0 22.5-9.5t9.5-22.5zm-192-848q0-16-16-16h-160q-16 0-16 16t16 16h160q16 0 16-16zm288-16v1024q0 52-38 90t-90 38h-512q-52 0-90-38t-38-90v-1024q0-52 38-90t90-38h512q52 0 90 38t38 90z"
        />
      </svg>
      <span
        className="screen-reader-text"
        style={
          Object {
            "clip": "rect(1px, 1px, 1px, 1px)",
            "height": "1px",
            "overflow": "hidden",
            "position": "absolute",
            "width": "1px",
          }
        }
      >
        Mobile preview
      </span>
    </button>
    <button
      aria-pressed={false}
      className="c25 c2 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
      onClick={[Function]}
      type="button"
    >
      <svg
        aria-hidden={true}
        className="yoast-svg-icon yoast-svg-icon-desktop c26"
        fill="currentColor"
        focusable="false"
        role="img"
        size="18px"
        viewBox="0 0 1792 1792"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M1728 992v-832q0-13-9.5-22.5t-22.5-9.5h-1600q-13 0-22.5 9.5t-9.5 22.5v832q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5zm128-832v1088q0 66-47 113t-113 47h-544q0 37 16 77.5t32 71 16 43.5q0 26-19 45t-45 19h-512q-26 0-45-19t-19-45q0-14 16-44t32-70 16-78h-544q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1600q66 0 113 47t47 113z"
        />
      </svg>
      <span
        className="screen-reader-text"
        style={
          Object {
            "clip": "rect(1px, 1px, 1px, 1px)",
            "height": "1px",
            "overflow": "hidden",
            "position": "absolute",
            "width": "1px",
          }
        }
      >
        Desktop preview
      </span>
    </button>
  </div>
  <button
    aria-expanded={false}
    className="c27 Button-kDSBcD c3 Button-kDSBcD c4 Button-kDSBcD c5 Button-kDSBcD c6 c7"
    onClick={[Function]}
    type="button"
  >
    <svg
      aria-hidden={true}
      className="yoast-svg-icon yoast-svg-icon-edit c9"
      fill={undefined}
      focusable="false"
      role="img"
      size="16px"
      viewBox="0 0 1792 1792"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M491 1536l91-91-235-235-91 91v107h128v128h107zm523-928q0-22-22-22-10 0-17 7l-542 542q-7 7-7 17 0 22 22 22 10 0 17-7l542-542q7-7 7-17zm-54-192l416 416-832 832h-416v-416zm683 96q0 53-37 90l-166 166-416-416 166-165q36-38 90-38 53 0 91 38l235 234q37 39 37 91z"
      />
    </svg>
    Edit snippet
  </button>
</div>
`;
